<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog of Yvon Shong</title>
  
  <subtitle>充实人生的常态是成长的阵痛</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shong.win/"/>
  <updated>2018-06-17T17:46:30.100Z</updated>
  <id>http://www.shong.win/</id>
  
  <author>
    <name>Yvon Shong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>充实人生的常态是成长的阵痛</title>
    <link href="http://www.shong.win/2018/06/17/world-is-tender/"/>
    <id>http://www.shong.win/2018/06/17/world-is-tender/</id>
    <published>2018-06-17T17:46:30.100Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>笔记本里去年的年终总结都还没有写完。。。结果这一年都过了二分之一了。就顺便写一下这一年多来的一些感慨吧。 有时不得不说时间在推着我走，仿佛毕业是昨天的事，又仿佛过了很久。在交替间的错乱，使我觉得生活还在继续，却又发现有些地方已经回不去了。 </p><p>其实所有都是关于内心的自我审视。我一直在努力把握自我的内心状态，剖析自己的内心，想逐渐成为一个明晰自己缺点，然后努力成为更好的人。 </p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=32408263&auto=1&height=66"></iframe><h2 id="城市"><a href="#城市" class="headerlink" title="城市"></a>城市</h2><p>四年前去台湾的时候，从厦门出海，觉得在没有变化的环境里，感受不到自己的前进，甚至现在内心生出，像实习时一样几个月或者更长一点几年，换一个城市去工作生活的状态好像很不错，当然我也明白换工作换城市的成本时很高的，更何况也要不断的与友人告别。当然最近意识到，原来我就是个折腾的人，不甘于呆在舒适圈，总想要去冒险XD，以前看到朋友从神经网络的角度说“当你过于专注某件事时，大脑会逐渐对这件事过拟合，感觉你在变聪明，如果停止接收新鲜的事物，从泛化的角度讲其实你在变笨”。 </p><p>毕业离开了南京。我记得离开的那一天，风雨相送，我拖着所有的家当，下起暴雨来误了动车，然后改签。临别的感受却是，我真的太喜欢南京了，可是我知道我要离开她了，不会再回来了。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/nanjing.jpg" alt=""></p><blockquote><p>2017.6 南京 毕业</p></blockquote><p>然后抱着这样的决绝回了2017年仅有的一次成都。那几天约见友人，路过了高中时补课的地方，一下子万千回忆。 我终于明白了我为什么要逃离自己喜欢的城市了，是真的太喜欢了，在这个城市遇见了太多的人有了太多的回忆，可我并不想靠着回忆过活。 </p><p>暑假的时候，凭着一腔孤勇，去北京实习，一个AR的创业公司，总共不到15个人。有一段时间忙工作，头大又没进展，也逐渐适应了每天一个小时多的通勤，某一天一个人走在四惠转公交的天桥上，无数错乱即将击溃我，忽然意识到原来这就是一个人的北京，起初是骄傲，我终于靠自己，来到了年少时期待的，这个国家的中心，闯进了这座辉煌而陌生的城市，后来是心疼自己一个人的勇敢，北京真的太大了，大到有次下到一号线站台，满满的全是数不清的人，却仍要迎着头皮挤进地铁车厢。 </p><p>其实其中的某一项挫折是工作，得坦然承认的是我并没有天赋，但仍然不能把缺乏天赋当作放弃努力的借口。（知乎名句，与大多数人的努力相比，根本轮不到拼天赋）有时候就是真的受挫，害怕面对缺乏天赋的残酷真相。 </p><p>“所谓的天赋，难道不是那种，非常非常热爱的感觉吗？无论发生什么，都不会让你放弃，那种执着和斗志之类的东西，不就是天赋吗？至少我是这么想的。” </p><p>不过所幸的是实习的公司，每天一起下楼买饭，大家在一个大桌上一起吃饭，老板是个很厉害的人，总是能指出我的bug（捂脸）那段时间真的学了很多，心怀无数感谢。 </p><p>秋之红叶狩的时候又去了一次东京，内心变成了，我还是想要在大城市生活啊，既然城市都是一样的，那为什么不去一个更好的更大的城市呢？ </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/tokyo.jpg" alt=""></p><blockquote><p>2017.11 东京 东京爱情故事</p></blockquote><p>我以后会生活在哪一个城市呢，决定养猫之前自己要去养花，嗯呢已经有了重新养花的勇气~自己的房间有一面墙不仅要贴满拍立得，也要贴满收到的明信片。会继续练习做饭，嗯已经开始期待起来了呢，我一定会成为一个对待生活温柔的人吧。 </p><h2 id="焦虑"><a href="#焦虑" class="headerlink" title="焦虑"></a>焦虑</h2><p>去年实习的时候有一段时间内心特别焦虑，主要是来自同龄人的压力，发现身边认识的谈恋爱的伙伴都几乎到了见家长的环节，这种里程碑式的阶段令我感到紧迫，但我仍然觉得用几年时间决定今后几十年要一起生活的人，真是太可怕了，即使可以分手离婚，但都是有成本的。 </p><p>更往以后是不是会更现实，是不是以后再也不能为了一个人发光了，让我产生恐惧。</p><p>有一次和朋友聊天，我说到以后拒绝 996 的公司，因为我周末还要去 dating 呢。。不然怎么找女朋友<em>(:з)∠)</em>，然而朋友说我目前充实忙碌又有所调节的有趣的生活，以为我不需要女朋友呢。。。然而仿佛是个似曾相识的对话，fi曾跟我说，想象不出来我有女朋友的样子，觉得我现在的生活挺好的，而且好像没有地方安排一个女朋友。 </p><p>我却只能胡诌几句，我当然知道一个人也有一个人的活法，两个人也有两个人的生活，我可能是太爱自由了，不过希望有女朋友的时候能把对世界的温柔都给她。 </p><p>然而以上的想法现在看来都是错误的，我觉得是因为我根本就没有把女朋友这件事放在我的人生计划里，放在我的未来里。大概在想象未来的时候，默认自己仍然是一个人，也不需要为其他人承担什么责任。比如毕业后去哪倒是全由我个人决定。 </p><p>有一天兔子跟我指出，说我跟她一样仍然不懂得怎么爱人，对方是个人啊，并不是说你想对对方怎样你就能做到的，你们也会有矛盾冲突，也会把脾气撒给对方。当时的我恍然大悟，当头棒喝，一切都只是我这么认为。 </p><p>后来我终于明白了，并不是要一下子就肯定自己要和谁相处一辈子的，有时候真的就是，觉得和谁在一起开心，然后想一起走一段路，然后等到某一天机缘巧合，一个平静的下午，然后决定要一起过一辈子的。 </p><p>有时候焦虑也来自于自己的现况，觉得自己对当前把握的不够，怕走弯路，怕迟到，怕一时失意。那段时间有一个鸡汤文说每个人都生活在自己的时区，奥巴马五十岁当选总统，川普七十岁才当选。可是美国西海岸比东海岸晚三个小时，然而他们的太阳都在各自的12点到达最高的位置啊，我就觉得自己的人生时刻就应该做什么事情。 </p><p>可是并不是这样的，人生并不是一定要按部就班，人生是可以试错的。你花了几年时间，意识到自己不喜欢当前的东西并决意要跳出来，并不是说你的人生就这样失败了。所以很佩服认识的那几位退学重读的朋友，就连看见别人 gap 一年再去工作，也觉得真好，毕竟健康工作五十年，根本看不到头呢（逃）。所以才会决定今年要晚一点入职工作。</p><h2 id="独居"><a href="#独居" class="headerlink" title="独居"></a>独居</h2><p>也许是内心不够强大，我这么一个喜欢独处的人，这四年，一个人去过一些地方，到头来，却输给了自己一个人的独居生活。 那时候是室友回国了，我一个人在这边打工加自习，然后开始生活规律紊乱，每天失眠到凌晨四五点，有时候干脆一宿不睡，直接起来做饭，然后就去打工四个小时，回来后终于累了倒在床上。更或者在自习室不顾时间的做自己的事情，凌晨两三点骑车回家，冬夜里的风，更吹得令人清醒。 </p><p>独居生活里唯一觉得在活的时候是自己做饭的时候了，深刻的意识到自己只是个初级的厨师，料理是我内心情绪的外化，有时候因为失眠，厨艺水平变得十分糟糕，就连用烤箱这种如此简单的厨具也会失手。 </p><p>终于那段做饭的时间，领悟了很多关于每日不断重复的料理与不断推石头的人生的关系。其实每天做不同的三餐是很难的，所以不如认真做好每一天的三餐。也终于明白自己，为什么喜欢下厨了，因为在做饭的时候，自己很专注于这件事情，这种专注的感觉超棒的，会让我上瘾。专注令我意识到我在活。</p><p>到现在仍然过着紊乱的生活，有时候会一下子兴起，把屋子整理干净，躺在地板上开着窗吹凉风，仍然会对以后抱有期待，将来生活的房间要像现在这样，在屋里光脚，墙上挂满喜欢的东西，周末作息规律。  </p><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><p>去年开春的时候，第一次去了东京，日思夜想的东京之旅，去独自看了富士山。 想去东京大概是18岁的事情了，终于在22岁之前完成。却也差一点死在了东京之旅的前一日。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/sakura.jpg" alt=""> </p><blockquote><p>2017.4 东京 目黑川<br>那一次车祸令我感悟很多，从姐姐家高崎一路哭到上野，然后一个人昏昏沉沉的睡一下午来缓和自己的内心。 然后我就这样到达了东京，去看了目黑川上飘落的樱花。关于富士山，是很多年前一句“谁能凭爱意要富士山私有”，富士山不能动，但我可以走过来啊。那种略带“我偏要勉强”的不甘。结果就是被认为是付出型选手，忽视对方个人意志。 </p></blockquote><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/fujisan.jpg" alt=""> </p><blockquote><p>2017.4 富士山 22岁</p></blockquote><p>一个人出去玩似乎变成了调节自我的方式，我谙于享受全程只有我的自言自语的旅程，不用太在意别人的感受，可能我就是太自私了，只想让自己舒服。 可是这种自私的惯性带进了日常生活，有时候就是只顾自己的舒适，如果我觉得和你聊天找话题太累了，那我只想保持略微尴尬的沉默。 </p><p>然后是夏天，回国实习前去久留米看的花火大会，西日本最大，花火大会快要成为我夏天最美好的回忆，那一天逢魔之时开始的花火大会，河堤边的晚风浮动着杂草，穿着浴衣躺在草坪上，好朋友在身边聊天，仰天看着花火闪耀，真的，此生无憾的感觉。 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/kurume.jpg" alt=""> </p><blockquote><p>2017.8 久留米 筑后川花火大会<br>冬假的时候去了北海道，冷酷仙境与世界尽头，一个人搭雪国列车，苍茫天地，窗外树影快速滑过，去往小樽偶遇的彩虹，去往星野看过的深山，去往函馆全程的海岸线，都是我收藏进内心成为我抵抗世界的温柔记忆。 </p></blockquote><p> <img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/hokaido.jpg" alt=""></p><blockquote><p>2017.12 北海道 小樽</p></blockquote><p> 以及自己的第一个旅拍 vlog ~</p><video src="http://oljkaeely.bkt.clouddn.com/static/video/hokaido.mp4" type="video/mp4" controls="controls" width="100%" height="100%"><br></video><p>从北海道回来后，九州下了好几次雪，可是我却变得怠惰，开始无感，内心只是：“噢，下雪了“。没有了以前的激动和欢喜（我可是南方人诶）。仔细想了想，不能归咎于曾经沧海难为水。如果去过远方而放弃眼前的日常，那我宁愿未曾去过冷酷仙境，不然怎么温柔对待生活。 </p><p>其实也有和伙伴夏天穿浴衣逛京都，冬天穿短袖游台湾。无锡的毕业旅行，上海的夜里游街，玩到精疲力竭的大阪环球影城，在开往关西机场特急JR前的告别，时隔半年在花莲的石砾滩上看火花，在九份围桌夜聊，平溪天灯淡水落日，还有在台北的客居日常。那天从台大回来，路上买了个给阿姨准备的生日蛋糕，一路拎回来，当时居然有一丝在这个城市生活的错觉。这些所有一切，除去故事进行时反反复复的破除羁绊，然后就是强烈的不真实感，真的是大学时代最好的朋友了，以及结束后的落寞。</p><p>在今年23岁前，随性去了四国爱媛，松山和伊予，去看了莉香和完治分别的车站，梅津寺站，在松山站看到一张伊予下滩站的照片吸引住，是因为真的太漂亮了，于是第二天前往，才知道原来是青春十八宣传海报名景。 </p><p> <img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/iyo.jpg" alt=""></p><blockquote><p>2018.4 爱媛 伊予</p></blockquote><p>说到梅津寺车站，后来才想起原来也是《龙族》里路明非和绘梨衣乘着阳光盛大逃跑最后的分别地点。江南更龙族5的时候重新回看了龙3最喜欢的章节，那段被命名为Tokyo Love Story的行动，路明非带着绘梨衣跳出了设定的剧本飞驰前往爱媛，在梅津寺町山上看暮色如海潮般涌来。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/ehime.jpg" alt=""></p><blockquote><p>2018.4 爱媛 梅津寺站</p></blockquote><p>关于绘梨衣令我印象最深刻的故事就发生在此。</p><blockquote><p>“世界很温柔。”绘梨衣给路明非看小本子。 </p><p>世界很温柔？路明非从没想到温柔这个词也能用来形容“世界”这么巨大的东西。</p><p>“以前世界不是这样的，没有那么温柔过。”绘梨衣又写。</p><p>“以前你觉的世界是怎样的？”路明非问。</p><p>“蛇群守护的宝石，很漂亮、很远、很危险。”</p></blockquote><h2 id="北京"><a href="#北京" class="headerlink" title="北京"></a>北京</h2><p>以上大段其实都写在很久之前没有完工，中间甚至博客被自己删库了。。。我以后再也不拖这么久了。。。因为这段时间很多想法游发生了改变。。。不久前终于定了自己的 offer，要去北漂啦。 <a href="tusimple.ai">Tusimple</a>，图森未来，激光雷达传感器工程师。 拿到 offer 的那天，晚上赶着去和伙伴聚餐，在地铁通道里跑的时候，笑的很开心，觉得要很开心的接纳北京啦，北京也有不好的地方，一直觉得整个城市灰头土脸的，春天来的时候漫天的柳絮，冬天的雾霾。 可是北京是年少时的向往啊，终究是作为首都的这个国家的心脏，这个城市有着其他无法比肩的资源与机会，有着无数的展览和文化活动，我太相信眼界的力量了，一直想要去看，更广大的世界。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/2017.jpg" alt=""></p><blockquote><p>2017 年 合辑</p></blockquote><p>标题其实是我去年在北京实习时我的老板说的一句话，事到如今我仍然觉得很有道理。充实人生的常态是成长的阵痛，所以要不断的去战斗。 </p><p>去年我的新年计划完成</p><ul><li>[x] 春天去东京</li><li>[x] 顺利毕业</li><li>[x] 毕业写真</li><li>[x] 找到打工</li><li>[x] 实习</li><li>[x] 保佑伙伴考研</li><li>[ ] 日语N2</li><li>[ ] 找到正式工作</li></ul><p>今年的任务是</p><ul><li>[x] 工作</li><li>[x] 樱花季</li><li>[x] 去tw</li><li>[ ] 花火大会</li><li>[ ] 研究生顺利毕业</li><li>[ ] 去sg</li><li>[ ] 去us</li><li>[ ] 毕业旅行</li><li>[ ] 自己租的房子里养一只猫</li><li>[ ] 养活一盆花</li><li>[x] 房间的照片墙和明信片墙</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/world-is-tender/homewall.jpg" alt=""></p><blockquote><p>这一年里拍的拍立得</p></blockquote><p>即使计划里依旧没有…但我已经有了重新种花的勇气。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔记本里去年的年终总结都还没有写完。。。结果这一年都过了二分之一了。就顺便写一下这一年多来的一些感慨吧。 有时不得不说时间在推着我走，仿佛毕业是昨天的事，又仿佛过了很久。在交替间的错乱，使我觉得生活还在继续，却又发现有些地方已经回不去了。 &lt;/p&gt;
&lt;p&gt;其实所有都是关于内心的自我审视。我一直在努力把握自我的内心状态，剖析自己的内心，想逐渐成为一个明晰自己缺点，然后努力成为更好的人。 &lt;/p&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>Recurrent/Recursive Neural Network</title>
    <link href="http://www.shong.win/2017/09/10/ml/rnn/"/>
    <id>http://www.shong.win/2017/09/10/ml/rnn/</id>
    <published>2017-09-10T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>循环/递归神经网络<br><a id="more"></a></p><h1 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h1><p>递归神经网络（RNN）是两种人工神经网络的总称：时间递归神经网络（recurrent neural network）和结构递归神经网络（recursive neural network）。</p><ul><li>时间递归神经网络的神经元间连接构成有向图，</li><li>而结构递归神经网络利用相似的神经网络结构递归构造更为复杂的深度网络。</li></ul><p>RNN一般指代时间递归神经网络。单纯递归神经网络因为无法处理随着递归，权重指数级爆炸或消失的问题（Vanishing gradient problem），难以捕捉长期时间关联；而结合不同的LSTM可以很好解决这个问题。时间递归神经网络可以描述动态时间行为，因为和前馈神经网络（feedforward neural network）接受较特定结构的输入不同，RNN将状态在自身网络中循环传递，因此可以接受更广泛的时间序列结构输入。</p><p>CNN是空间上做卷积，RNN是在做卷积的同时在同层自循环。本质上是在模拟人类更复杂的神经网络。</p><p><img src="http://upload-images.jianshu.io/upload_images/1667471-4eba217f653527d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>输出层是一个全连接层，它的每个节点都和隐藏层的每个节点相连，<br>隐藏层是循环层。</p><p>由于循环，可以看作任意多个输入值。</p><h1 id="RNN-主要处理序列数据"><a href="#RNN-主要处理序列数据" class="headerlink" title="RNN 主要处理序列数据"></a>RNN 主要处理序列数据</h1><p>RNN主要解决序列数据的处理，比如文本、语音、视频等等。这类数据的样本间存在顺序关系，每个样本和它之前的样本存在关联。比如说，在文本中，一个词和它前面的词是有关联的；在气象数据中，一天的气温和前几天的气温是有关联的。一组观察数据定义为一个序列，从分布中可以观察出多个序列。</p><p>一个序列 $X={  x_1,x_2,…,x_N }$  的最简单模型为 $P(X)=\Pi _{i=1}^N P(x_i|x_1,…,x_{i-1})$</p><p>也就是说，序列里的每一个元素都和排在它前面的所有元素直接相关。当然，这个模型存在致命的问题：它的复杂度$O(N!)$会爆炸性增长</p><p>RNNs已经被在实践中证明对NLP是非常成功的。如词向量表达、语句合法性检查、词性标注等。在RNNs中，目前使用最广泛最成功的模型便是<a href="https://en.wikipedia.org/wiki/Long_short_term_memory" target="_blank" rel="noopener">LSTMs(Long Short-Term Memory，长短时记忆模型)模型</a>，该模型通常比vanilla RNNs能够更好地对长短时依赖进行表达，该模型相对于一般的RNNs，只是在隐藏层做了手脚。</p><h1 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h1><p>对于RNN是的训练和对传统的ANN训练一样。同样使用BP误差反向传播算法，不过有一点区别。如果将RNNs进行网络展开，那么参数W,U,V是共享的，而传统神经网络却不是的。并且在使用梯度下降算法中，每一步的输出不仅依赖当前步的网络，并且还以来前面若干步网络的状态。比如，在t=4时，我们还需要向后传递三步，已经后面的三步都需要加上各种的梯度。该学习算法称为Backpropagation Through Time (BPTT)。后面会对BPTT进行详细的介绍。需要意识到的是，在vanilla RNNs训练中，<a href="http://www.jmlr.org/proceedings/papers/v28/pascanu13.pdf" target="_blank" rel="noopener">BPTT无法解决长时依赖问题</a>(即当前的输出与前面很长的一段序列有关，一般超过十步就无能为力了)，因为BPTT会带来所谓的梯度消失或梯度爆炸问题(the vanishing/exploding gradient problem)。当然，有很多方法去解决这个问题，如LSTMs便是专门应对这种问题的。</p><h1 id="RNN变种"><a href="#RNN变种" class="headerlink" title="RNN变种"></a>RNN变种</h1><h2 id="Simple-RNNs-SRNs"><a href="#Simple-RNNs-SRNs" class="headerlink" title="[Simple RNNs(SRNs)"></a>[Simple RNNs(SRNs)</h2><p>SRNs是RNNs的一种特例，它是一个三层网络，并且在隐藏层增加了上下文单元，下图中的y便是隐藏层，u便是上下文单元。上下文单元节点与隐藏层中的节点的连接是固定(谁与谁连接)的，并且权值也是固定的(值是多少)，其实是一个上下文节点与隐藏层节点一一对应，并且值是确定的。在每一步中，使用标准的前向反馈进行传播，然后使用学习算法进行学习。上下文每一个节点保存其连接的隐藏层节点的上一步的输出，即保存上文，并作用于当前步对应的隐藏层节点的状态，即隐藏层的输入由输入层的输出与上一步的自己的状态所决定的。因此SRNs能够解决标准的多层感知机(MLP)无法解决的对序列数据进行预测的任务。 </p><p><img src="http://img.blog.csdn.net/20150921230335967" alt=""></p><p>##Bidirectional RNNs</p><p>  Bidirectional RNNs(双向网络)的改进之处便是，假设当前的输出(第t步的输出)不仅仅与前面的序列有关，并且还与后面的序列有关。例如：预测一个语句中缺失的词语那么就需要根据上下文来进行预测。Bidirectional RNNs是一个相对较简单的RNNs，是由两个RNNs上下叠加在一起组成的。输出由这两个RNNs的隐藏层的状态决定的。如下图所示： </p><p><img src="http://img.blog.csdn.net/20150921230410290" alt=""></p><h2 id="Deep-Bidirectional-RNNs"><a href="#Deep-Bidirectional-RNNs" class="headerlink" title="Deep(Bidirectional)RNNs"></a>Deep(Bidirectional)RNNs</h2><p>Deep(Bidirectional)RNNs与Bidirectional RNNs相似，只是对于每一步的输入有多层网络。这样，该网络便有更强大的表达与学习能力，但是复杂性也提高了，同时需要更多的训练数据。Deep(Bidirectional)RNNs的结构如下图所示： </p><p><img src="http://img.blog.csdn.net/20150921230507091" alt=""></p><h2 id="Echo-State-Networks"><a href="#Echo-State-Networks" class="headerlink" title="Echo State Networks"></a>Echo State Networks</h2><p>  ESNs(回声状态网络)虽然也是一种RNNs，但是它与传统的RNNs相差很大。ESNs具有三个特点：</p><ul><li>它的核心结构时一个随机生成、且保持不变的储备池(Reservoir)，储备池是大规模的、随机生成的、稀疏连接(SD通常保持1%～5%，SD表示储备池中互相连接的神经元占总的神经元个数N的比例)的循环结构；</li><li>其储备池到输出层的权值矩阵是唯一需要调整的部分；</li><li>简单的线性回归就可完成网络的训练。</li></ul><p>  从结构上讲，ESNs是一种特殊类型的循环神经网络，其基本思想是：使用大规模随机连接的循环网络取代经典神经网络中的中间层，从而简化网络的训练过程。因此ESNs的关键是中间的储备池。网络中的参数包括：W为储备池中节点的连接权值矩阵，$W_{in}$为输入层到储备池之间的连接权值矩阵，表明储备池中的神经元之间是连接的，$W_{back}$为输出层到储备池之间的反馈连接权值矩阵，表明储备池会有输出层来的反馈，$W_{out}$输入层、储备池、输出层到输出层的连接权值矩阵，表明输出层不仅与储备池连接，还与输入层和自己连接。$W^{out}_{bias}$表示输出层的偏置项。<br>  对于ESNs，关键是储备池的四个参数，如储备池内部连接权谱半径SR(SR=λmax=max{|W的特征指|}，只有SR &lt;1时，ESNs才能具有回声状态属性)、储备池规模N(即储备池中神经元的个数)、储备池输入单元尺度IS(IS为储备池的输入信号连接到储备池内部神经元之前需要相乘的一个尺度因子)、储备池稀疏程度SD(即为储备池中互相连接的神经元个数占储备池神经元总个数的比例)。对于IS，如果需要处理的任务的非线性越强，那么输入单元尺度越大。该原则的本质就是通过输入单元尺度IS，将输入变换到神经元激活函数相应的范围(神经元激活函数的不同输入范围，其非线性程度不同)。<br>  ESNs的结构如下图所示： </p><p><img src="http://img.blog.csdn.net/20150921230739897" alt=""></p><h2 id="Gated-Recurrent-Unit-Recurrent-Neural-Networks"><a href="#Gated-Recurrent-Unit-Recurrent-Neural-Networks" class="headerlink" title="Gated Recurrent Unit Recurrent Neural Networks"></a>Gated Recurrent Unit Recurrent Neural Networks</h2><p>  GRUs也是一般的RNNs的改良版本，主要是从以下两个方面进行改进。一是，序列中不同的位置处的单词(已单词举例)对当前的隐藏层的状态的影响不同，越前面的影响越小，即每个前面状态对当前的影响进行了距离加权，距离越远，权值越小。二是，在产生误差error时，误差可能是由某一个或者几个单词而引发的，所以应当仅仅对对应的单词weight进行更新。GRUs的结构如下图所示。GRUs首先根据当前输入单词向量word vector已经前一个隐藏层的状态hidden state计算出update gate和reset gate。再根据reset gate、当前word vector以及前一个hidden state计算新的记忆单元内容(new memory content)。当reset gate为1的时候，new memory content忽略之前的所有memory content，最终的memory是之前的hidden state与new memory content的结合。 </p><p><img src="http://img.blog.csdn.net/20150921230927637" alt=""></p><h2 id="LSTM-Netwoorks"><a href="#LSTM-Netwoorks" class="headerlink" title="LSTM Netwoorks"></a>LSTM Netwoorks</h2><p> LSTMs与GRUs类似，目前非常流行。它与一般的RNNs结构本质上并没有什么不同，只是使用了不同的函数去去计算隐藏层的状态。在LSTMs中，i结构被称为cells，可以把cells看作是黑盒用以保存当前输入xt之前的保存的状态ht−1，这些cells更加一定的条件决定哪些cell抑制哪些cell兴奋。它们结合前面的状态、当前的记忆与当前的输入。已经证明，该网络结构在对长序列依赖问题中非常有效。LSTMs的网络结构如下图所示。</p><p><img src="http://img.blog.csdn.net/20150921230954367" alt=""></p><h3 id="LSTMs解决的问题也是GRU中所提到的问题，如下图所示："><a href="#LSTMs解决的问题也是GRU中所提到的问题，如下图所示：" class="headerlink" title="LSTMs解决的问题也是GRU中所提到的问题，如下图所示："></a>LSTMs解决的问题也是GRU中所提到的问题，如下图所示：</h3><p><img src="http://img.blog.csdn.net/20150921231113097" alt=""></p><h3 id="LSTMs与GRUs的区别如图所示"><a href="#LSTMs与GRUs的区别如图所示" class="headerlink" title="LSTMs与GRUs的区别如图所示"></a>LSTMs与GRUs的区别如图所示</h3><p><img src="http://img.blog.csdn.net/20150921231146716" alt=""></p><p>从上图可以看出，它们之间非常相像，不同在于：</p><ul><li>new memory的计算方法都是根据之前的state及input进行计算，但是GRUs中有一个reset gate控制之前state的进入量，而在LSTMs里没有这个gate；</li><li>产生新的state的方式不同，LSTMs有两个不同的gate，分别是forget gate (f gate)和input gate(i gate)，而GRUs只有一个update gate(z gate)；</li><li>LSTMs对新产生的state又一个output gate(o gate)可以调节大小，而GRUs直接输出无任何调节。</li></ul><h2 id="Clockwork-RNNs-CW-RNNs"><a href="#Clockwork-RNNs-CW-RNNs" class="headerlink" title="Clockwork RNNs(CW-RNNs)"></a>Clockwork RNNs(CW-RNNs)</h2><p>CW-RNNs也是一个RNNs的改良版本，是一种使用时钟频率来驱动的RNNs。它将隐藏层分为几个块(组，Group/Module)，每一组按照自己规定的时钟频率对输入进行处理。并且为了降低标准的RNNs的复杂性，CW-RNNs减少了参数的数目，提高了网络性能，加速了网络的训练。CW-RNNs通过不同的隐藏层模块工作在不同的时钟频率下来解决长时间依赖问题。将时钟时间进行离散化，然后在不同的时间点，不同的隐藏层组在工作。因此，所有的隐藏层组在每一步不会都同时工作，这样便会加快网络的训练。并且，时钟周期小的组的神经元的不会连接到时钟周期大的组的神经元，只会周期大的连接到周期小的(认为组与组之间的连接是有向的就好了，代表信息的传递是有向的)，周期大的速度慢，周期小的速度快，那么便是速度慢的连速度快的，反之则不成立。现在还不明白不要紧，下面会进行讲解。<br>   CW-RNNs与SRNs网络结构类似，也包括输入层(Input)、隐藏层(Hidden)、输出层(Output)，它们之间也有向前连接，输入层到隐藏层的连接，隐藏层到输出层的连接。但是与SRN不同的是，隐藏层中的神经元会被划分为若干个组，设为g，每一组中的神经元个数相同，设为k，并为每一个组分配一个时钟周期Ti∈{T1,T2,…,Tg}，每一个组中的所有神经元都是全连接，但是组j到组i的循环连接则需要满足Tj大于Ti。如下图所示，将这些组按照时钟周期递增从左到右进行排序，即T1&lt;T2&lt;…&lt;Tg，那么连接便是从右到左。例如：隐藏层共有256个节点，分为四组，周期分别是[1,2,4,8]，那么每个隐藏层组256/4=64个节点，第一组隐藏层与隐藏层的连接矩阵为64<em>64的矩阵，第二层的矩阵则为64</em>128矩阵，第三组为64<em>(3</em>64)=64<em>192矩阵，第四组为64</em>(4<em>64)=64</em>256矩阵。这就解释了上一段的后面部分，速度慢的组连到速度快的组，反之则不成立。<br>  CW-RNNs的网络结构如下图所示：</p><p><img src="http://img.blog.csdn.net/20150921231441483" alt=""></p><h2 id="Gradient-Vanishing-Exploding-梯度消失和梯度爆炸"><a href="#Gradient-Vanishing-Exploding-梯度消失和梯度爆炸" class="headerlink" title="Gradient Vanishing/Exploding (梯度消失和梯度爆炸)"></a>Gradient Vanishing/Exploding (梯度消失和梯度爆炸)</h2><p>RNN训练困难的主要原因在于隐藏层参数 w 的传播：由于误差传播在展开后的RNN上，无论在前向传播过程还是在反向传播过程中 w 都会乘上多次，这就导致：</p><ul><li>梯度消失：如果梯度很小的话（&lt;1），乘上多次指数级下降，对输出几乎就没有影响了</li><li>梯度爆炸：反过来，如果梯度很大的话，乘上多次指数级增加，又导致了梯度爆炸</li></ul><p>当然了，这个问题其实存在于任何深度神经网络中，只是由于RNN的递归结构导致其尤其明显。</p><p>对于<strong>梯度爆炸</strong>问题，可以通过截断的方式来有效避免：</p><p><img src="https://cloud.githubusercontent.com/assets/676637/21475489/245c4948-cb67-11e6-8ebb-c755e4a34e94.png" alt=""></p><p>而对<strong>梯度消失</strong>问题，则有很多不同的方案：</p><ol><li>有效初始化+ReLU激活函数能够得到较好效果</li><li>算法上的优化，例如截断的BPTT算法。</li><li>模型上的改进，例如LSTM、GRU单元都可以有效解决长期依赖问题。</li><li>在BPTT算法中加入skip connection，此时误差可以间歇的向前传播。</li><li>加入一些Leaky Units，思路类似于skip connection</li></ol><h1 id="LSTM"><a href="#LSTM" class="headerlink" title="LSTM"></a>LSTM</h1><p>LSTM 全称叫 Long Short-Term Memory networks，它和传统 RNN 唯一的不同就在与其中的神经元（感知机）的构造不同。传统的 RNN 每个神经元和一般神经网络的感知机没啥区别，但在 LSTM 中，每个神经元是一个“记忆细胞”（元胞状态，Cell State），将以前的信息连接到当前的任务中来。每个LSTM细胞里面都包含</p><ul><li>输入门（input gate）: 一个Sigmoid层，观察 $h_{t-1}$ 和 $x_t$ ，对于元胞状态 $c_{t-1}$ 中的每一个元素，输出一个0~1之间的数。1表示“完全保留该信息”，0表示“完全丢弃该信息”：$  f_t=σ(W^f x_t+U^f h_{t−1})$ </li><li>遗忘门（forget gate): 一个Sigmoid层决定我们要更新哪些信息，并由一个tanh层创造了一个新的候选值（结果在(−1,1)范围） $i_t=σ(W^i x_t+U^i h_{t−1})$  ; $ \tilde{c}_t=\tanh(W^cx_t+U^ch_{t-1})$ ;  $c_t=f_t∘c_t−1+i_t∘\tilde{c}_t$ </li></ul><ul><li>输出门（output gate）：控制哪些信息需要输出 $o_t=σ(W^o x_t+U^o h_{t−1})$ ; $h_t =o_t∘tanh(c_t) $ </li></ul><p><img src="http://feisky.xyz/machine-learning/_images/14800648468281.jpg" alt=""></p><p>典型的工作流为：在“输入门”中，根据当前的数据流来控制接受细胞记忆的影响；接着，在 “遗忘门”里，更新这个细胞的记忆和数据流；然后在“输出门”里产生输出更新后的记忆和数据流。LSTM 模型的关键之一就在于这个“遗忘门”， 它能够控制训练时候梯度在这里的收敛性（从而避免了 RNN 中的梯度 vanishing/exploding 问题），同时也能够保持长期的记忆性。</p><p>如果我们把LSTM的forget gate全部置0（总是忘记之前的信息），input gate全部 置1，output gate全部置1（把cell state中的信息全部输出），这样LSTM就变成一个标准的RNN。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;循环/递归神经网络&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ml" scheme="http://www.shong.win/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>Convolutional Neural Network</title>
    <link href="http://www.shong.win/2017/09/04/ml/cnn/"/>
    <id>http://www.shong.win/2017/09/04/ml/cnn/</id>
    <published>2017-09-04T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>卷积神经网络<br><a id="more"></a><br>滤波器 （从图像处理的角度理解滤波器的作用；卷积数学上的定义与图像处理中有什么不同？）</p><p>CNN （为什么要使用CNN； flow；各种框架下的CNN实现方法，有哪些参数，如何调参）</p><p>Pooling（目的； 实现方法，一般出现的位置）</p><p>Padding （padding或不padding，以及各种padding方式，对网络的影响；尤其是对后续滤波器参数设置的影响）</p><p>数据增强</p><h1 id="滤波器"><a href="#滤波器" class="headerlink" title="滤波器"></a>滤波器</h1><p>以前写过一个关于卷积的，滤波器的本质就是空间上做卷积</p><p><a href="http://www.shong.win/blog/2016/04/13/convolution/">http://www.shong.win/blog/2016/04/13/convolution/</a></p><h1 id="CNN"><a href="#CNN" class="headerlink" title="CNN"></a>CNN</h1><p>卷积，卷积的意义是保留所有元素的效果</p><p>一般地，CNN的基本结构包括两层，其一为特征提取层，每个神经元的输入与前一层的局部接受域相连，并提取该局部的特征。一旦该局部特征被提取后，它与其它特征间的位置关系也随之确定下来；其二是特征映射层，网络的每个计算层由多个特征映射组成，每个特征映射是一个平面，平面上所有神经元的权值相等。特征映射结构采用影响函数核小的sigmoid函数作为卷积网络的激活函数，使得特征映射具有位移不变性。此外，由于一个映射面上的神经元共享权值，因而减少了网络自由参数的个数。卷积神经网络中的每一个卷积层都紧跟着一个用来求局部平均与二次提取的计算层，这种特有的两次特征提取结构减小了特征分辨率。</p><p>CNN主要用来识别位移、缩放及其他形式扭曲不变性的二维图形。由于CNN的特征检测层通过训练数据进行学习，所以在使用CNN时，避免了显示的特征抽取，而隐式地从训练数据中进行学习；再者由于同一特征映射面上的神经元权值相同，所以网络可以并行学习，这也是卷积网络相对于神经元彼此相连网络的一大优势。卷积神经网络以其局部权值共享的特殊结构在语音识别和图像处理方面有着独特的优越性，其布局更接近于实际的生物神经网络，权值共享降低了网络的复杂性，特别是多维输入向量的图像可以直接输入网络这一特点避免了特征提取和分类过程中数据重建的复杂度。</p><p>在图像处理中，往往把图像表示为像素的向量，比如一个1000×1000的图像，可以表示为一个1000000的向量。在上一节中提到的神经网络中，如果隐含层数目与输入层一样，即也是1000000时，那么输入层到隐含层的参数数据为1000000×1000000=10^12，这样就太多了，基本没法训练。所以图像处理要想练成神经网络大法，必先减少参数加快速度。就跟辟邪剑谱似的，普通人练得很挫，一旦自宫后内力变强剑法变快，就变的很牛了。</p><h2 id="局部感知"><a href="#局部感知" class="headerlink" title="局部感知"></a>局部感知</h2><p>卷积神经网络有两种神器可以降低参数数目，第一种神器叫做局部感知野。一般认为人对外界的认知是从局部到全局的，而图像的空间联系也是局部的像素联系较为紧密，而距离较远的像素相关性则较弱。因而，每个神经元其实没有必要对全局图像进行感知，只需要对局部进行感知，然后在更高层将局部的信息综合起来就得到了全局的信息。网络部分连通的思想，也是受启发于生物学里面的视觉系统结构。视觉皮层的神经元就是局部接受信息的（即这些神经元只响应某些特定区域的刺激）。如下图所示：左图为全连接，右图为局部连接。</p><p><img src="http://dataunion.org/wp-content/uploads/2015/03/511-600x224.jpg" alt=""></p><p>在上右图中，假如每个神经元只和10×10个像素值相连，那么权值数据为1000000×100个参数，减少为原来的千分之一。而那10×10个像素值对应的10×10个参数，其实就相当于卷积操作。</p><h2 id="参数共享"><a href="#参数共享" class="headerlink" title="参数共享"></a>参数共享</h2><p>但其实这样的话参数仍然过多，那么就启动第二级神器，即权值共享。在上面的局部连接中，每个神经元都对应100个参数，一共1000000个神经元，如果这1000000个神经元的100个参数都是相等的，那么参数数目就变为100了。</p><p>怎么理解权值共享呢？我们可以这100个参数（也就是卷积操作）看成是提取特征的方式，该方式与位置无关。这其中隐含的原理则是：图像的一部分的统计特性与其他部分是一样的。这也意味着我们在这一部分学习的特征也能用在另一部分上，所以对于这个图像上的所有位置，我们都能使用同样的学习特征。</p><p>更直观一些，当从一个大尺寸图像中随机选取一小块，比如说 8×8 作为样本，并且从这个小块样本中学习到了一些特征，这时我们可以把从这个 8×8 样本中学习到的特征作为探测器，应用到这个图像的任意地方中去。特别是，我们可以用从 8×8 样本中所学习到的特征跟原本的大尺寸图像作卷积，从而对这个大尺寸图像上的任一位置获得一个不同特征的激活值。</p><p>如下图所示，展示了一个33的卷积核在55的图像上做卷积的过程。每个卷积都是一种特征提取方式，就像一个筛子，将图像中符合条件（激活值越大越符合条件）的部分筛选出来。</p><p><img src="http://dataunion.org/wp-content/uploads/2015/03/6.gif" alt=""></p><h2 id="多卷积核"><a href="#多卷积核" class="headerlink" title="多卷积核"></a>多卷积核</h2><p>上面所述只有100个参数时，表明只有1个100*100的卷积核，显然，特征提取是不充分的，我们可以添加多个卷积核，比如32个卷积核，可以学习32种特征。在有多个卷积核时，如下图所示：</p><p><img src="http://dataunion.org/wp-content/uploads/2015/03/710-600x247.jpg" alt=""></p><p>上图右，不同颜色表明不同的卷积核。每个卷积核都会将图像生成为另一幅图像。比如两个卷积核就可以将生成两幅图像，这两幅图像可以看做是一张图像的不同的通道。如下图所示，下图有个小错误，即将w1改为w0，w2改为w1即可。下文中仍以w1和w2称呼它们。<br>下图展示了在四个通道上的卷积操作，有两个卷积核，生成两个通道。其中需要注意的是，四个通道上每个通道对应一个卷积核，先将w2忽略，只看w1，那么在w1的某位置（i,j）处的值，是由四个通道上（i,j）处的卷积结果相加然后再取激活函数值得到的。</p><p><img src="http://dataunion.org/wp-content/uploads/2015/03/91.png" alt=""></p><p>所以，在上图由4个通道卷积得到2个通道的过程中，参数的数目为4×2×2×2个，其中4表示4个通道，第一个2表示生成2个通道，最后的2×2表示卷积核大小。</p><h2 id="Down-pooling"><a href="#Down-pooling" class="headerlink" title="Down-pooling"></a>Down-pooling</h2><p>在通过卷积获得了特征 (features) 之后，下一步我们希望利用这些特征去做分类。理论上讲，人们可以用所有提取得到的特征去训练分类器，例如 softmax 分类器，但这样做面临计算量的挑战。例如：对于一个 96X96 像素的图像，假设我们已经学习得到了400个定义在8X8输入上的特征，每一个特征和图像卷积都会得到一个 (96 − 8 + 1) × (96 − 8 + 1) = 7921 维的卷积特征，由于有 400 个特征，所以每个样例 (example) 都会得到一个 892 × 400 = 3,168,400 维的卷积特征向量。学习一个拥有超过 3 百万特征输入的分类器十分不便，并且容易出现过拟合 (over-fitting)。<br>为了解决这个问题，首先回忆一下，我们之所以决定使用卷积后的特征是因为图像具有一种“静态性”的属性，这也就意味着在一个图像区域有用的特征极有可能在另一个区域同样适用。因此，为了描述大的图像，一个很自然的想法就是对不同位置的特征进行聚合统计，例如，人们可以计算图像一个区域上的某个特定特征的平均值 (或最大值)。这些概要统计特征不仅具有低得多的维度 (相比使用所有提取得到的特征)，同时还会改善结果(不容易过拟合)。这种聚合的操作就叫做池化 (pooling)，有时也称为平均池化或者最大池化 (取决于计算池化的方法)。</p><p><img src="http://dataunion.org/wp-content/uploads/2015/03/1010.jpg" alt=""></p><p>池化/采样的方式通常有以下两种：</p><ul><li>最大池化（Max Pooling: 选择Pooling窗口中的最大值作为采样值；</li><li>均值池化（Mean Pooling）: 将Pooling窗口中的所有值相加取平均，以平均值作为采样值</li><li>高斯池化：借鉴高斯模糊的方法。不常用。</li><li>可训练池化：使用一个训练函数$y=f(x)$。不常用。</li><li>图像经过池化后，得到的是一系列的特征图，而多层感知器接受的输入是一个向量。因此需要将这些特征图中的像素依次取出，排列成一个向量（这个过程被称为光栅化）</li></ul><h2 id="多层卷积"><a href="#多层卷积" class="headerlink" title="多层卷积"></a>多层卷积</h2><p>在实际应用中，往往使用多层卷积，然后再使用全连接层进行训练，多层卷积的目的是一层卷积学到的特征往往是局部的，层数越高，学到的特征就越全局化。</p><h2 id="边缘处理"><a href="#边缘处理" class="headerlink" title="边缘处理"></a>边缘处理</h2><p>由于特征图的变长不一定是2的倍数，所以在边缘处理上也要注意：</p><ul><li>忽略边缘(padding=’VALID’)：将多出来的边缘直接省去。</li><li>保留边缘(padding=’SAME’)：将特征图的变长用0填充为2的倍数，然后再池化（一般使用这种方式）</li></ul><p>（好文： <a href="http://www.moonshile.com/post/juan-ji-shen-jing-wang-luo-quan-mian-jie-xi#toc_12）" target="_blank" rel="noopener">http://www.moonshile.com/post/juan-ji-shen-jing-wang-luo-quan-mian-jie-xi#toc_12）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;卷积神经网络&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ml" scheme="http://www.shong.win/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>Neural Network</title>
    <link href="http://www.shong.win/2017/08/28/ml/nn/"/>
    <id>http://www.shong.win/2017/08/28/ml/nn/</id>
    <published>2017-08-28T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>神经网络<br><a id="more"></a></p><h1 id="神经网络算法类型"><a href="#神经网络算法类型" class="headerlink" title="神经网络算法类型"></a>神经网络算法类型</h1><p>1、有监督学习(Supervised learning):通过生成一个函数将输入映射为一个合适的输出（通常也称为标记，多数情况下训练集都是有人工专家标注生成的）。例如分类问题，分类器更加输入向量和输出的分类标记模拟了一个函数，对于新的输入向量，得到它的分类结果。</p><p>有监督学习主要会提供一些标注样本，分为两大问题：回归regression和分类classification</p><p>2、无监督学习(Unsupervised learning):与有监督学习相比，训练集没有人为标注的结果。常见的无监督学习算法有聚类。</p><p>无先验信息</p><p>3、半监督学习: 介于监督学习与无监督学习之间。</p><p>4、强化学习(Reinforcement learning): 通过观察来学习如何做出动作，每个动作都会对环境有所影响，而环境的反馈又可以引导该学习算法。</p><p>其他的类型包括推荐系统，Transduction，Learning to learn等</p><h1 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h1><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>输入    $X=(x_1,x_2,\cdots, x_n)^T$</p><p>连接权    $w=(w_1,w_2,\cdots, w_n)$</p><p>网络输入    $net$=\Sigma x_i w_i</p><p>向量形式    $net=XW$</p><p>网络输出    $output=f(net)$</p><h3 id="神经元"><a href="#神经元" class="headerlink" title="神经元"></a>神经元</h3><p>网络中的节点，多个输入，一个输出</p><p>$y=f(WX)+bias$</p><h3 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h3><p>多个输入对结果的影响有着不同的权重，本质就是节点内部的函数中对不同的输入x有着不同的权值。</p><h3 id="偏差"><a href="#偏差" class="headerlink" title="偏差"></a>偏差</h3><p>除了与输入有关的量，也存在着bias常量对结果有影响。</p><h3 id="输入输出隐藏层"><a href="#输入输出隐藏层" class="headerlink" title="输入输出隐藏层"></a>输入输出隐藏层</h3><p>输入层：被记作第0层。该层负责接收来自网络外部的信息</p><p>第j层：第j-1层的直接后继层（j&gt;0），它直接接受第j-1层的输出。</p><p>输出层：它是网络的最后一层，具有该网络的最大层号，负责输出网络的计算结果。</p><p>隐藏层：除输入层和输出层以外的其它各层均叫隐藏层。隐藏层不直接接受外界的信号，也不直接向外界发送信号</p><p>输出层的层号为该网络的层数：n层网络或n级网络。</p><h2 id="成本函数"><a href="#成本函数" class="headerlink" title="成本函数"></a>成本函数</h2><p>衡量网络预测值和真实值之间的差距。可以理解为误差，整个网络的训练朝着降低误差的方向进行。</p><p>逻辑回归的0-1 cost function 把  0 1 合并</p><p>$J(\Theta) = - \frac{1}{m} [ \Sigma ^m_{i=1} \Sigma^K_{k=1} y^{(i)}<em>k log(h</em>{\Theta}(x^{(i)}))_k + (1- y^{(i)}<em>k)log(1-h</em>\Theta (x^{(i)})_k) ] + \frac{\lambda }{2m} \Sigma ^{L-1} _{l=1} \Sigma _{i=1}^{s_l} \Sigma <em>{j=1} ^{s</em>{l+1}} (\Theta _{ji} ^{(l)})^2$</p><p>$h_\Theta (x) \in R^K ;(h_\Theta(x))_i = i^{th}  output$ 第 $i$ 层的输出 hypothesis 假设值  y 真实值</p><p>$L$ ： 神经网络的层数</p><p>$s_l$ ：第$l$层的单元个数（不包括偏置单元bias）</p><p><strong>目标函数</strong> 是 最小化cost function </p><p>通常是取 平方误差函数 $min_\Theta (J(\Theta)$ ;$\frac{1}{2}$ 系数为方便求导</p><p>$\frac{1}{2m}\Sigma ^m <em>{i=1}(h</em>\theta(x^{(i)}) -y^{(i)})^2$  预测值-真实值</p><p>成本函数得是凸函数才能求到最小值</p><table><thead><tr><th>函数</th><th>公式</th></tr></thead><tbody><tr><td>0-1 损失函数</td><td>$L(Y,f(X))=\begin{cases} 1,  &amp; Y\neq f(X)\0,&amp;  Y=f(X)\end{cases}$</td></tr><tr><td>平方损失函数</td><td>$L(Y,f(X))=(Y-f(X))^2$</td></tr><tr><td>绝对损失函数</td><td>$L(Y,f(X))=\</td><td>Y-f(X)\</td><td>$</td></tr><tr><td>对数损失函数</td><td>$L(Y,P(Y\</td><td>X))=-logP(Y\</td><td>X)$</td></tr></tbody></table><h2 id="逻辑回归"><a href="#逻辑回归" class="headerlink" title="逻辑回归"></a>逻辑回归</h2><p>分类是监督学习的一个核心问题，在监督学习中，当输出变量Y取有限个离散值时，预测问题便成为分类问题。这时，输入变量X可以是离散的，也可以是连续的。监督学习从数据中学习一个分类模型或分类决策函数，称为分类器(classifier)。分类器对新的输入进行输出的预测(prediction)，称为分类(classification).</p><p>二分类问题 {1,0} 将函数拉拢到 0,1 之间，靠阈值划分</p><p>$0\le h_\theta (x) \le 1$</p><p>线性回归无法将预测值全都拉到0，1之间</p><p>$h_\theta(x) = g(\theta^T x)$</p><p>$g(z)=\frac{1}{1+e^{-z}}$</p><p>阈值决定决策边界</p><h1 id="参数调优"><a href="#参数调优" class="headerlink" title="参数调优"></a>参数调优</h1><p><a href="http://blog.csdn.net/han_xiaoyang/article/details/52654879" target="_blank" rel="noopener">http://blog.csdn.net/han_xiaoyang/article/details/52654879</a></p><h2 id="激活函数"><a href="#激活函数" class="headerlink" title="激活函数"></a>激活函数</h2><p>激活函数是用来加入非线性因素的，因为线性模型的表达能力不够。</p><p>我们可以设计一种神经网络，通过激活函数来使得这组数据线性可分。<br>激活函数我们选择阀值函数（threshold function），也就是大于某个值输出1（被激活了），小于等于则输出0（没有激活）。这个函数是非线性函数。</p><table><thead><tr><th>函数</th><th>公式</th><th>备注</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>线性函数 purelin</td><td>$f(net)=k(net)+c$</td><td></td><td></td><td></td></tr><tr><td>斜面函数 ramp function</td><td>$f(x)=\begin{cases} T,  &amp; x  \gt c \ k*c&amp; \</td><td>x\</td><td>\le c\ -T, &amp; x \lt c \end{cases}$</td><td></td><td></td><td></td></tr><tr><td>阈值函数 threhold function</td><td>$f(x)=\begin{cases} 1,  &amp; x  \ge c\ 0, &amp; x \lt c \end{cases}$</td><td></td><td></td><td></td></tr><tr><td>Sigmoid 型函数</td><td>$f(net)=\frac{a+b}{1+exp(-d*net)}$</td><td>$a&lt;f(net)&lt;a+b$；导数：$f’(net)=\frac{-d(a+b) e^{-d net}}{1+exp(-d*net)}$</td><td>Sigmoid函数的输出映射在(0,1)之间，单调连续，输出范围有限，优化稳定，可以用作输出层；求导容易。</td><td>由于其软饱和性，容易产生梯度消失，导致训练出现问题；其输出并不是以0为中心的。</td></tr><tr><td></td><td>$f(x)=\frac{1}{1+e^{-\alpha x}} (0&lt;f(x)&lt;1)$</td><td>导数：$f’(x)=\frac{\alpha e^{-\alpha x}}{(1+e^{-\alpha x})^2} = f(x)[1-f(x)]$</td><td></td><td></td></tr><tr><td>tanh函数</td><td>$tanh(x)=\frac{1-e^{-2x}}{1+e^{-2x}}$</td><td></td><td>比Sigmoid函数收敛速度更快；相比Sigmoid函数，其输出以0为中心。</td><td>相比Sigmoid函数，其输出以0为中心。</td></tr><tr><td>双极S形函数</td><td>$f(x)=\frac{1}{1+e^{-\alpha x}}$</td><td></td><td></td><td></td></tr><tr><td></td><td>$f(x)=\frac{2\alpha e ^{- \alpha x}}{(1+e^{-\alpha x})^2} = \frac{\alpha [1-f(x)^2]}{2}$</td><td>双极S和Sigmoid函数主要区别在于值域；都是连续可导</td><td></td><td></td></tr><tr><td>ReLU 整流线性单元</td><td>$f(x)=max(x,0)$</td><td></td><td>对于大于0的所有输入来说，它都有一个不变的导数值。常数导数值有助于网络训练进行得更快；相比起Sigmoid和tanh，ReLU(e.g. a factor of 6 in Krizhevsky et al.)在SGD中能够快速收敛。例如在下图的实验中，在一个四层的卷积神经网络中，实线代表了ReLU，虚线代表了tanh，ReLU比起tanh更快地到达了错误率0.25处。据称，这是因为它线性、非饱和的形式；Sigmoid和tanh涉及了很多很expensive的操作（比如指数），ReLU可以更加简单的实现；有效缓解了梯度消失的问题；在没有无监督预训练的时候也能有较好的表现；提供了神经网络的稀疏表达能力。</td><td>随着训练的进行，可能会出现神经元死亡，权重无法更新的情况。如果发生这种情况，那么流经神经元的梯度从这一点开始将永远是0。也就是说，ReLU神经元在训练中不可逆地死亡了。</td></tr><tr><td>LReLU</td><td></td><td></td><td></td><td></td></tr><tr><td>PReLU</td><td></td><td></td><td></td><td></td></tr><tr><td>RReLU</td><td></td><td></td><td></td><td></td></tr><tr><td>ELU</td><td>$f(x)=\begin{cases} a(e^x-1),  &amp; x  &lt; 0\ x, &amp; 0 \le x \end{cases}$</td><td></td><td>ELU减少了正常梯度与单位自然梯度之间的差距，从而加快了学习;在负的限制条件下能够更有鲁棒性。</td><td></td></tr><tr><td>softplus</td><td>$f(x)=log(e^x+1)$</td><td></td><td></td><td></td></tr><tr><td>softsign</td><td>$f(x)=\frac{x}{\</td><td>x\</td><td>+1}$</td><td></td><td></td><td></td></tr><tr><td>Softmax函数</td><td></td><td></td><td></td></tr></tbody></table><h2 id="诊断（Diagnostics）"><a href="#诊断（Diagnostics）" class="headerlink" title="诊断（Diagnostics）"></a>诊断（Diagnostics）</h2><h2 id="权重初始化（Weight-Initialization）"><a href="#权重初始化（Weight-Initialization）" class="headerlink" title="权重初始化（Weight Initialization）"></a>权重初始化（Weight Initialization）</h2><h2 id="网络拓扑（Network-Topology）"><a href="#网络拓扑（Network-Topology）" class="headerlink" title="网络拓扑（Network Topology）"></a>网络拓扑（Network Topology）</h2><h2 id="优化和损失"><a href="#优化和损失" class="headerlink" title="优化和损失"></a>优化和损失</h2><h2 id="早停法"><a href="#早停法" class="headerlink" title="早停法"></a>早停法</h2><h2 id="学习率"><a href="#学习率" class="headerlink" title="学习率"></a>学习率</h2><p>学习率影响着网络收敛的速度，以及网络能否收敛。学习率设置偏小可以保证网络收敛，但是收敛较慢。相反，学习率设置偏大则有可能使网络训练不收敛，影响识别效果。</p><h2 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h2><p>调整 $\Theta$ 的时候，保持$J(\Theta)$ 递减，达到一个满意的最小值（极小值）</p><p>梯度下降描述的是更新$\Theta$ 的一种方法</p><p>$\theta_j := \theta_j -\alpha \frac{\partial }{\partial \theta_j} J(\theta)$  </p><p>$\alpha$ 学习速率 步长</p><p>如果过小 梯度下降速率很慢  过长则可能迈过最小点并发散</p><p>当函数接近局部最小值的时候，梯度下降法将自动的采取“小步子”， 所以没有必要随着时间的推移减小learning rate.</p><ul><li><p>需要选择合适的learning rate ;</p></li><li><p>需要很多轮迭代；</p></li><li><p>但是即使n很大的时候效果也很好；</p></li></ul><h2 id="正规方程"><a href="#正规方程" class="headerlink" title="正规方程"></a>正规方程</h2><p>Normal equation-区别于迭代方法的直接解法)</p><p>直接求解导数为0的极值点</p><p>$\frac{d}{d\theta}J(\theta = \cdots =0)$</p><p>在多变量中求对于所有变量 偏导数为0的点。</p><p>$\frac{\partial}{\partial\theta_j}J(\theta = \cdots =0)$</p><p>$\theta = (X ^T X)^{-1} X^{T} y$ 由最小二乘法推导出来 The partial derivatives of $|| Ax-b||^2 $ are zero when $A^TAx=A^Tb$</p><p>不需要选择 $\alpha$</p><p>不需要迭代，一次搞定；</p><p>但是需要计算 $(X^TX)^{-1}$，其时间复杂度为 $O(n^3)$</p><p>对于Normal Equation，如果 $X^TX$ 不可逆</p><ul><li>去掉冗余的特征（线性相关）：</li><li>过多的特征，例如m &lt;= n:  删掉一些特征，或者使用regularization</li></ul><h2 id="正则化-丢弃dropout"><a href="#正则化-丢弃dropout" class="headerlink" title="正则化(丢弃dropout)"></a>正则化(丢弃dropout)</h2><p>减少某参数的影响 加大惩罚</p><p>underfit  high-bias / overfit high-variance </p><p>针对过拟合问题</p><p>a) 减少特征的数量：</p><ul><li>人工的选择保留哪些特征；</li><li>模型选择算法</li></ul><p>b) 正则化</p><ul><li>保留所有的特征，但是降低参数$\theta_j$ 的量/值；</li><li>正则化的好处是当特征很多时，每一个特征都会对预测y贡献一份合适的力量；</li></ul><p>正则化：</p><p>参数 $\theta_0,\theta_1,\theta_2,\cdots ,\theta_n$ 取小一点的值，这样的优点：</p><ul><li>“简化”的hypothesis；</li><li>不容易过拟合；</li></ul><p>对除 某参数以外的参数进行惩罚，也就是正则化</p><p>本来代价函数是</p><p>$J(\theta)=\frac{1}{2m} \Sigma ^m_{i=1} (h_\theta(x^{(i)}) -y^{(i)})^2$</p><p>正则化后的</p><p>$J(\theta)=\frac{1}{2m} [\Sigma ^m_{i=1} (h_\theta(x^{(i)}) -y^{(i)})^2  +\lambda \Sigma ^n _{j=1} \theta _j^2]$</p><p>其中 $\lambda$ 成为正则化参数</p><p>正则化后的梯度下降算法为</p><ul><li>未收到正则化的参数不变</li><li>$\theta_j:=\theta_j -\alpha [\frac{1}{m} \Sigma^m_{i=1} (h_\theta(x^{(i)})-y^{(i)})x^{(i)}_j - \frac{\lambda}{m} \theta_j]$</li></ul><p>如果 $\lambda$ 设为一个很大的值</p><ul><li>算法依然会正常的工作, 将 $\lambda$ 设置的很大不会影响算法本身；</li><li>算法在去除过拟合问题上会失败；</li><li>算法的结构将是欠拟合（underfitting),即使训练数据非常好也会失败；</li><li>梯度下降算法不一定会收敛；</li></ul><p>模型选择的典型方法是正则化。正则化是结构风险最小化策略的实现，是在经验风险上加一个正则化项(regularizer)或罚项(penalty term)。正则化项一般是模型复杂度的单调递增函数，模型越复杂，正则化值就越大。比如，正则化项可以是模型参数向量的范数。</p><p>正则化符合奥卡姆剃刀(Occam’s razor)原理。奥卡姆剃刀原理应用于模型选择时变为以下想法：在所有可能选择的模型中，能够很好地解释已知数据并且十分简单才是最好的模型，也就是应该选择的模型。从贝叶斯估计的角度来看，正则化项对应于模型的先验概率。可以假设复杂的模型有较大的先验概率，简单的模型有较小的先验概率。</p><h2 id="批次Batches"><a href="#批次Batches" class="headerlink" title="批次Batches"></a>批次Batches</h2><p><a href="https://www.zhihu.com/question/32673260" target="_blank" rel="noopener">https://www.zhihu.com/question/32673260</a></p><p>批训练的引入最大好处是针对非凸损失函数来做的， 毕竟非凸的情况下， 全样本就算工程上算的动， 也会卡在局部优上， 批表示了全样本的部分抽样实现， 相当于人为引入修正梯度上的采样噪声，使“一路不通找别路”更有可能搜索最优值。</p><p>Batch 的选择，<strong>首先决定的是下降的方向。</strong>如果数据集比较小，完全可以采用<strong>全数据集</strong> （ <strong>Full Batch Learning</strong> ）的形式，这样做至少有 2 个好处：其一，由全数据集确定的方向能够更好地代表样本总体，从而<a href="http://www.zhihu.com/question/37129350/answer/70964527#" target="_blank" rel="noopener">更准确地朝向极值所在的方向</a>。其二，由于不同权重的梯度值差别巨大，因此选取一个全局的学习率很困难。 Full Batch Learning 可以使用<strong>Rprop</strong> 只基于梯度符号并且针对性单独更新各权值。</p><p>对于更大的数据集，以上 2 个好处又变成了 2 个坏处：其一，随着数据集的海量增长和内存限制，一次性载入所有的数据进来变得越来越不可行。其二，以 Rprop 的方式迭代，会由于各个 Batch 之间的采样差异性，各次梯度修正值相互抵消，无法修正。这才有了后来 <strong>RMSProp</strong> 的妥协方案。</p><p>可不可以选择一个适中的 Batch_Size 值呢？</p><p>当然可以，这就是批梯度下降法（Mini-batches Learning）。因为如果数据集足够充分，那么用一半（甚至少得多）的数据训练算出来的梯度与用全部数据训练出来的梯度是几乎一样的。</p><p>在合理范围内，增大 Batch_Size 有何好处？</p><ul><li>内存利用率提高了，大矩阵乘法的并行化效率提高。</li><li>跑完一次 epoch（全数据集）所需的迭代次数减少，对于相同数据量的处理速度进一步加快。</li><li>在一定范围内，一般来说 Batch_Size 越大，其确定的下降方向越准，引起训练震荡越小。</li></ul><p>盲目增大 Batch_Size 有何坏处？</p><ul><li>内存利用率提高了，但是内存容量可能撑不住了。</li><li>跑完一次 epoch（全数据集）所需的迭代次数减少，要想达到相同的精度，其所花费的时间大大增加了，从而对参数的修正也就显得更加缓慢。</li><li>Batch_Size 增大到一定程度，其确定的下降方向已经基本不再变化。</li></ul><h2 id="周期-Epochs"><a href="#周期-Epochs" class="headerlink" title="周期 Epochs"></a>周期 Epochs</h2><p><a href="http://blog.csdn.net/han_xiaoyang/article/details/52654879" target="_blank" rel="noopener">http://blog.csdn.net/han_xiaoyang/article/details/52654879</a> （好文）</p><p>batch size大小会决定最后的梯度，以及更新权重的频度。一个周期(epoch)指的是神经网络看一遍全部训练数据的过程。</p><p>你是否已经试验了不同的批次batch size和周期数？<br>之前，我们已经讨论了学习率，网络大小和周期之间的关系。</p><p>在很深的网络结构里你会经常看到：小的batch size配以大的训练周期。</p><p>下面这些或许能有助于你的问题，也或许不能。你要在自己的数据上尝试和观察。</p><ul><li><strong>尝试选取与训练数据同大小的batch size，但注意一下内存（批次学习（batch learning））</strong></li><li><strong>尝试选取1作为batch size（在线学习（online learning））</strong></li><li><strong>尝试用格点搜索不同的小的batch size（8，16，32，…）</strong></li><li><strong>分别尝试训练少量周期和大量周期。</strong></li></ul><p>考虑一个接近无穷的周期值(持续训练)，去记录到目前为止能得到的最佳的模型。</p><h2 id="批量归一化"><a href="#批量归一化" class="headerlink" title="批量归一化"></a>批量归一化</h2><p>在深度神经网络的训练过程中，先前层参数的调整会导致之后每一层输入值的分布发生变化，这种现象使模型的训练变得很复杂。所以在深度神经网络模型的训练中，通常需要仔细选取初始参数并采取较小的学习率，这不但导致模型训练的效率低下，而且使得饱和非线性模型的训练极为困难。我们把这种现象称为内部协变量转移(covariate shift)，并通过归一化(normalizing)每层的输入来解决这个问题。我们方法的强大之处在于把归一化的步骤作为模型训练架构的一部分来实现, 并且对每个训练小批量都执行归一化操作。批量归一化允许我们使用很高的学习率并且对初始化不太在意。它在一定情况下也可以起到正则化的作用，并减轻了对Dropout的需求。</p><p><a href="https://ask.julyedu.com/question/7706" target="_blank" rel="noopener">https://ask.julyedu.com/question/7706</a> </p><h1 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h1><p>前馈是从网络结构上来说的，是前一层神经元单向馈入后一层神经元，而后面的神经元没有反馈到之前的神经元；而BP网络是从网络的训练方法上来说 的，是指该网络的训练算法是反向传播算法，即神经元的链接权重的训练是从最后一层（输出层）开始，然后反向依次更新前一层的链接权重。</p><h2 id="前馈神经网络-Feedforward-Neural-Networks"><a href="#前馈神经网络-Feedforward-Neural-Networks" class="headerlink" title="前馈神经网络(Feedforward Neural Networks)"></a>前馈神经网络(Feedforward Neural Networks)</h2><p>$O_1=F_1(XW_1)$</p><p>$O_2=F_2(O_1W_2)$</p><p>$O_3=F_3(O_2W_3)$</p><h2 id="反馈神经网络-Feedback-Neural-Networks"><a href="#反馈神经网络-Feedback-Neural-Networks" class="headerlink" title="反馈神经网络(Feedback Neural Networks)"></a>反馈神经网络(Feedback Neural Networks)</h2><p>基本的BP算法就是沿着负梯度方向通过调整权值来减小均方误差</p><p>Elman网络</p><p>Hopfield网络</p><h2 id="自组织网络-Self-Organizing-Neural-Networks"><a href="#自组织网络-Self-Organizing-Neural-Networks" class="headerlink" title="自组织网络(Self-Organizing Neural Networks)"></a>自组织网络(Self-Organizing Neural Networks)</h2><p> 自组织神经网络是一种无导师学习网络。它通过自动寻找样本中的内在规律和本质属性，自组织、自适应地改变网络参数与结构。</p><h2 id="多层感知机"><a href="#多层感知机" class="headerlink" title="多层感知机"></a>多层感知机</h2><p><strong>多层感知器</strong>（Multilayer Perceptron,缩写MLP）是一种前向结构的<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" target="_blank" rel="noopener">人工神经网络</a>，映射一组输入向量到一组输出向量。MLP可以被看作是一个有向图，由多个的节点层所组成，每一层都全连接到下一层。除了输入节点，每个节点都是一个带有非线性激活函数的神经元（或称处理单元）。一种被称为<a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">反向传播算法</a>的<a href="https://zh.wikipedia.org/wiki/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0" target="_blank" rel="noopener">监督学习</a>方法常被用来训练MLP。<a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8#cite_note-1" target="_blank" rel="noopener">[1]</a><a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8#cite_note-2" target="_blank" rel="noopener">[2]</a> MLP是<a href="https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8" target="_blank" rel="noopener">感知器</a>的推广，克服了感知器不能对<a href="https://zh.wikipedia.org/w/index.php?title=%E7%BA%BF%E6%80%A7%E4%B8%8D%E5%8F%AF%E5%88%86&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">线性不可分</a>数据进行识别的弱点。</p><h3 id="MLP的缺陷"><a href="#MLP的缺陷" class="headerlink" title="MLP的缺陷"></a>MLP的缺陷</h3><p><strong>1.</strong>网络的隐含节点个数选取问题至今仍是一个 世界难题（Google, Elsevier, CNKI）；</p><p><strong>2.</strong>停止阈值、学习率、动量常数需要采用”trial-and-error”法，极其耗时（动手实验）；</p><p><strong>3.</strong>学习速度慢；</p><p><strong>4.</strong>容易陷入局部极值，学习不够充分</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;神经网络&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ml" scheme="http://www.shong.win/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow serving deploy tutorial</title>
    <link href="http://www.shong.win/2017/08/23/ml/tensorflow-serving-guide/"/>
    <id>http://www.shong.win/2017/08/23/ml/tensorflow-serving-guide/</id>
    <published>2017-08-23T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>tensorflow serving 部署教程</p><a id="more"></a><p>Server-end：</p><pre><code>1. Install tenserflow using anaconda (Python 3.5 &amp; tensorflow with GPU support) (official tutorial: https://www.tensorflow.org/install/install_linux) (Chinese tutorial: http://www.linuxdiyf.com/linux/25614.html)    a. Install anaconda    b. conda create -n tensorflow python=3.5    c. activate tensorflow    d. Install NVIDIA driver for GPU with the `sudo service lightdm stop` and ban the Intel Driver  (tutorial: https://gist.github.com/dangbiao1991/7825db1d17df9231f4101f034ecd5a2b )        i. go to the official website to download the correct driver (.run file) for you GPU        ii. Enter the command when set up your computer with Ctrl+Alt+F1        iii. stop the desktop service `sudo service lightdm stop`        iv. Uninstall the whole old driver        v. Add the nouveau(the embedded driver) to blacklist        vi. Forbidden the nouveau module        vii. Reboot        viii. Install the NVIDIA-Driver.run with command when set up    e. Install cuda toolkit        i. Move to /usr/local/cuda    f. Install cudnn        i. Move to /usr/local/cuda    g. Export the path        export LD_LIBRARY_PATH=&quot;$LD_LIBRARY_PATH:/usr/local/cuda/lib64&quot;</code></pre><p>export CUDA_HOME=/usr/local/cuda<br>        h. pip install –ignore-installed –upgrade <a href="https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-1.3.0-cp35-cp35m-win_amd64.whl" target="_blank" rel="noopener">https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-1.3.0-cp35-cp35m-win_amd64.whl</a></p><pre><code>2. Install serving (official tutorial: https://www.tensorflow.org/serving/setup#installing_using_apt-get )    a. Installing using apt-get        i. sudo apt-get remove tensorflow-model-server        ii. echo &quot;deb [arch=amd64] http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal&quot; | sudo tee /etc/apt/sources.list.d/tensorflow-serving.list        iii. curl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | sudo apt-key add -        iv. sudo apt-get update &amp;&amp; sudo apt-get install tensorflow-model-server        v. sudo apt-get upgrade tensorflow-model-server3. Serving a model on server    a. Using python script with export function to product the model.pb (proto buffer)        i. python tensorflow_serving/example/mnist_saved_model.py /tmp/mnist_model    b. Load exported model on the server        i. tensorflow_model_server --port=9000 --model_name=mnist --model_base_path=/tmp/mnist_model/</code></pre><p>Client-end:</p><pre><code>1. Python    a. Install python 2.7 environment with anaconda    b. python tensorflow_serving/example/mnist_client.py --num_tests=1000 --server=localhost:90002. Cpp    a. Linux environment:        i. Build the system include tensorflow packages.    b. Win environment:        i. Tensorflow could&apos;t build the exe and lib on Windows.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tensorflow serving 部署教程&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ml" scheme="http://www.shong.win/tags/ml/"/>
    
      <category term="tf" scheme="http://www.shong.win/tags/tf/"/>
    
  </entry>
  
  <entry>
    <title>ROS NOTE</title>
    <link href="http://www.shong.win/2017/07/08/ros/"/>
    <id>http://www.shong.win/2017/07/08/ros/</id>
    <published>2017-07-08T12:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>The note when I use ROS Kinetic.</p><a id="more"></a><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Setup your sources.list</span></span><br><span class="line">sudo sh -c <span class="string">'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" &gt; /etc/apt/sources.list.d/ros-latest.list'</span></span><br><span class="line"><span class="comment"># Set up your keys</span></span><br><span class="line">sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</span><br><span class="line"><span class="comment"># Installation</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ros-kinetic-desktop-full</span><br><span class="line"><span class="comment"># Initialize rosdep</span></span><br><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br><span class="line"><span class="comment"># Environment setup</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source /opt/ros/kinetic/setup.bash"</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># Getting rosinstall</span></span><br><span class="line">sudo apt-get install python-rosinstall</span><br><span class="line"><span class="comment"># Managing Your Environment</span></span><br><span class="line"><span class="built_in">source</span> /opt/ros/kinetic/setup.bash</span><br></pre></td></tr></table></figure><h1 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a ROS Workspace</span></span><br><span class="line">mkdir -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br></pre></td></tr></table></figure><h1 id="ROS-File-System"><a href="#ROS-File-System" class="headerlink" title="ROS File System"></a>ROS File System</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get information about packages</span></span><br><span class="line">rospack find [package_name]</span><br><span class="line"><span class="comment"># change directory (cd) directly to a package or a stack.</span></span><br><span class="line">roscd [locationname[/subdir]]</span><br><span class="line"><span class="comment"># print the working directory</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="comment"># echo ROS_PACKAGE_PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ROS_PACKAGE_PATH</span></span><br><span class="line"><span class="comment"># to the folder where ROS stores log files</span></span><br><span class="line">roscd <span class="built_in">log</span></span><br><span class="line"><span class="comment">#  ls directly in a package by name rather than by absolute path.</span></span><br><span class="line">rosls [locationname[/subdir]]</span><br></pre></td></tr></table></figure><h1 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creating a catkin Package</span></span><br><span class="line">catkin_create_pkg &lt;package_name&gt; [depend1] [depend2] [depend3]</span><br><span class="line"><span class="comment"># to show the first-order dependencies of the package</span></span><br><span class="line">rospack depends1 &lt;package_name&gt;</span><br><span class="line"><span class="comment"># These dependencies for a package are stored in the package.xml file</span></span><br><span class="line">roscd &lt;package_name&gt;</span><br><span class="line">cat package.xml</span><br><span class="line"><span class="comment"># recursively determine all nested dependencies.</span></span><br><span class="line">rospack depends &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h1 id="Building-a-ROS-Package"><a href="#Building-a-ROS-Package" class="headerlink" title="Building a ROS Package"></a>Building a ROS Package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source your environment setup file</span></span><br><span class="line"><span class="built_in">source</span> /opt/ros/kinetic/setup.bash</span><br><span class="line"><span class="comment"># use catkin_make</span></span><br><span class="line">catkin_make [make_targets] [-DCMAKE_VARIABLES=...]</span><br></pre></td></tr></table></figure><h1 id="rosrun"><a href="#rosrun" class="headerlink" title="rosrun"></a>rosrun</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use one thread to run the roscore</span></span><br><span class="line">roscore</span><br><span class="line"><span class="comment"># If no permission, probably the ~/.ros folder is owned by root</span></span><br><span class="line"><span class="comment"># change recursively the ownership of that folder with:</span></span><br><span class="line">sudo chown -R &lt;your_username&gt; ~/.ros</span><br><span class="line"><span class="comment"># run a node within a package</span></span><br><span class="line">rosrun [package_name] [node_name]</span><br></pre></td></tr></table></figure><h1 id="rosnode"><a href="#rosnode" class="headerlink" title="rosnode"></a>rosnode</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># list</span></span><br><span class="line">rosnode list</span><br><span class="line"><span class="comment"># get more info</span></span><br><span class="line">rosnode info [node_name]</span><br><span class="line"><span class="comment"># run a node and change its name</span></span><br><span class="line">rosrun [package_name] [node_name] __name:=[change_to_name]</span><br><span class="line"><span class="comment"># Ping a node to test</span></span><br><span class="line">rosnode ping [node_name]</span><br></pre></td></tr></table></figure><h1 id="rostopic"><a href="#rostopic" class="headerlink" title="rostopic"></a>rostopic</h1><ul><li>rostopic</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [topic] = /topic_name</span></span><br><span class="line"><span class="comment"># display bandwidth used by topic</span></span><br><span class="line">rostopic bw     </span><br><span class="line"><span class="comment"># print messages to screen (start a system node to subscribe the topic )</span></span><br><span class="line">rostopic <span class="built_in">echo</span> [topic]</span><br><span class="line"><span class="comment"># display publishing rate of topic</span></span><br><span class="line">rostopic hz     </span><br><span class="line"><span class="comment"># print information about active topics</span></span><br><span class="line">rostopic list   </span><br><span class="line"><span class="comment"># publish data to topic</span></span><br><span class="line">rostopic pub    </span><br><span class="line"><span class="comment"># print topic type</span></span><br><span class="line">rostopic <span class="built_in">type</span>   </span><br><span class="line"><span class="comment"># list all topics</span></span><br><span class="line">rostopic list [/topic]</span><br><span class="line"><span class="comment"># list full details of each topic about publishers and subscribers</span></span><br><span class="line">rostopic list -v</span><br><span class="line">rostopic list --verbose    </span><br><span class="line"><span class="comment"># list only publishers</span></span><br><span class="line">rostopic list  -p                    </span><br><span class="line"><span class="comment"># list only subscribers</span></span><br><span class="line">rostopic list  -s</span><br></pre></td></tr></table></figure><ul><li>ROS Messages</li></ul><p>Communication on topics happens by sending ROS messages between nodes.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># returns the message type of any topic being published.</span></span><br><span class="line">rostopic <span class="built_in">type</span> [topic]</span><br><span class="line"><span class="comment"># the details of the message</span></span><br><span class="line">rosmsg show [topic]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reports the rate at which data is published.</span></span><br><span class="line">rostopic hz [topic]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Publish# publishes data on to a topic currently advertised.</span></span><br><span class="line">rostopic pub [topic] [msg_type] [args]</span><br></pre></td></tr></table></figure><p>sample:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rostopic pub -1 /turtle1/command_velocity turtlesim/Velocity  -- 2.0  1.8</span><br><span class="line"><span class="comment"># -1This option (dash-one) causes rostopic to only publish one message then exit</span></span><br><span class="line"><span class="comment"># --his option (double-dash) tells the option parser that none of the following arguments is an option. </span></span><br><span class="line"><span class="comment"># '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]' These arguments are actually in YAML syntax</span></span><br><span class="line">rostopic pub /turtle1/command_velocity turtlesim/Velocity -r 1 -- 2.0  -1.8</span><br><span class="line"><span class="comment"># -rpublish a steady stream of commands</span></span><br></pre></td></tr></table></figure><h1 id="rosservices"><a href="#rosservices" class="headerlink" title="rosservices"></a>rosservices</h1><p>Services are another way that nodes can communicate with each other. </p><p>Services allow nodes to send a request and receive a response.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [service] = /service_name</span></span><br><span class="line"><span class="comment"># print information about active services</span></span><br><span class="line">rosservice list [service]            </span><br><span class="line"><span class="comment"># call the service with the provided args</span></span><br><span class="line">rosservice call [service] [args]      </span><br><span class="line"><span class="comment"># print service type</span></span><br><span class="line"><span class="comment"># std_srvs/Emptyno need for arguments</span></span><br><span class="line">rosservice <span class="built_in">type</span> [service]    </span><br><span class="line"></span><br><span class="line"><span class="comment"># find services by service type</span></span><br><span class="line">rosservice find [service]       </span><br><span class="line"><span class="comment"># print service ROSRPC uri</span></span><br><span class="line">rosservice uri [service]</span><br></pre></td></tr></table></figure><h1 id="rosparam"><a href="#rosparam" class="headerlink" title="rosparam"></a>rosparam</h1><p>rosparam allows you to store and manipulate data on the ROS Parameter Server</p><table><thead><tr><th>1</th><th>1.0</th><th>one</th><th>true</th><th>[1, 2, 3]</th><th>{a: b, c: d}</th></tr></thead><tbody><tr><td>integer</td><td>float</td><td>string</td><td>boolean</td><td>list of integers</td><td>dictionary</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set parameter</span></span><br><span class="line">rosparam <span class="built_in">set</span> [param_name] [param_value]        </span><br><span class="line"><span class="comment"># get parameter</span></span><br><span class="line">rosparam get </span><br><span class="line"><span class="comment"># to show us the contents of the entire Parameter Server.</span></span><br><span class="line">rosparam get /</span><br><span class="line"><span class="comment"># load parameters from file</span></span><br><span class="line">rosparam load           </span><br><span class="line"><span class="comment"># dump parameters to file</span></span><br><span class="line">rosparam dump           </span><br><span class="line"><span class="comment"># delete parameter</span></span><br><span class="line">rosparam delete         </span><br><span class="line"><span class="comment"># list parameter names</span></span><br><span class="line">rosparam list           </span><br><span class="line"></span><br><span class="line"><span class="comment"># write all the parameters to the file params.yaml</span></span><br><span class="line"><span class="comment"># rosparam dump params.yaml</span></span><br><span class="line">rosparam dump [file_name] [namespace]</span><br><span class="line"><span class="comment"># load these yaml files into new namespaces</span></span><br><span class="line"><span class="comment"># rosparam load params.yaml copy</span></span><br><span class="line"><span class="comment"># rosparam get /copy/background_b</span></span><br><span class="line">rosparam load [file_name] [namespace]</span><br></pre></td></tr></table></figure><h1 id="roslaunch"><a href="#roslaunch" class="headerlink" title="roslaunch"></a>roslaunch</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># starts nodes as defined in a launch file.</span></span><br><span class="line">roslaunch [package] [filename.launch]</span><br></pre></td></tr></table></figure><p>filename.launch sample</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">"turtlesim1"</span>&gt;</span><span class="comment">&lt;!--namespace--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"turtlesim"</span> <span class="attr">name</span>=<span class="string">"sim"</span> <span class="attr">type</span>=<span class="string">"turtlesim_node"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">"turtlesim2"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"turtlesim"</span> <span class="attr">name</span>=<span class="string">"sim"</span> <span class="attr">type</span>=<span class="string">"turtlesim_node"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"turtlesim"</span> <span class="attr">name</span>=<span class="string">"mimic"</span> <span class="attr">type</span>=<span class="string">"mimic"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">"input"</span> <span class="attr">to</span>=<span class="string">"turtlesim1/turtle1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">"output"</span> <span class="attr">to</span>=<span class="string">"turtlesim2/turtle1"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="rosmsg-and-rossrv"><a href="#rosmsg-and-rossrv" class="headerlink" title="rosmsg and rossrv"></a>rosmsg and rossrv</h1><ul><li><p>msg: </p><p>msg files are simple text files that describe the fields of a ROS message. They are used to generate source code for messages in different languages.</p><p>msg files are stored in the msg directory of a package, </p></li></ul><p>   a special type in ROS: <code>Header</code></p><p>sample:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Header header</span><br><span class="line">string child_frame_id</span><br><span class="line">geometry_msgs/PoseWithCovariance pose</span><br><span class="line">geometry_msgs/TwistWithCovariance twist</span><br></pre></td></tr></table></figure><ul><li><p>srv: </p><p>an srv file describes a service. It is composed of two parts: a request and a response.</p><p>and srv files are stored in the srv directory.</p><p>msgs are just simple text files with a field type and field name per line. </p><ul><li>int8, int16, int32, int64 (plus uint*)</li><li>float32, float64</li><li>string</li><li>time, duration</li><li>other msg files</li><li>variable-length array[] and fixed-length array[C]</li></ul></li></ul><p>sample</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int64 A</span><br><span class="line">int64 B</span><br><span class="line">---</span><br><span class="line">int64 Sum</span><br></pre></td></tr></table></figure><ul><li>creating a msg</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">roscd beginner_tutorials</span><br><span class="line">mkdir msg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"int64 num"</span> &gt; msg/Num.msg</span><br></pre></td></tr></table></figure><p>Open <code>package.xml</code>, and make sure these two lines are in it and uncommented:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">run_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">run_depend</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>CMakeLists.txt</code> to add the <code>message_generation</code> dependency to the <code>find_package</code> call </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find_package(catkin REQUIRED COMPONENTS</span><br><span class="line">   roscpp</span><br><span class="line">   rospy</span><br><span class="line">   std_msgs</span><br><span class="line">   message_generation</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>make sure you export the message runtime dependency</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">catkin_package(</span><br><span class="line">  ...</span><br><span class="line">  CATKIN_DEPENDS message_runtime ...</span><br><span class="line">  ...)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add_message_files(</span><br><span class="line">  FILES</span><br><span class="line">  Num.msg</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">generate_messages()</span><br></pre></td></tr></table></figure><ul><li>using rosmsg</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make sure that ROS can see it </span></span><br><span class="line">rosmsg show [message <span class="built_in">type</span>]</span><br></pre></td></tr></table></figure><ul><li>creating srv</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">roscd beginner_tutorials</span><br><span class="line">mkdir srv</span><br><span class="line"><span class="comment"># copy from other service</span></span><br><span class="line">roscp [package_name] [file_to_copy_path] [copy_path]</span><br><span class="line"><span class="comment"># roscp rospy_tutorials AddTwoInts.srv srv/AddTwoInts.srv</span></span><br></pre></td></tr></table></figure><p>make sure that the srv files are turned into source code for C++, Python, and other languages.</p><p><code>CMakeLists.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_package(catkin REQUIRED COMPONENTS roscpp rospy std_msgs message_generation)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add_service_files(</span><br><span class="line">  FILES</span><br><span class="line">  AddTwoInts.srv</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>package.xml</code></p><p> <code>message_generation</code> works for both <code>msg</code> and <code>srv</code>.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">run_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">run_depend</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>using rossrv</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rossrv show &lt;service <span class="built_in">type</span>&gt;</span><br><span class="line"><span class="comment"># rossrv show beginner_tutorials/AddTwoInts</span></span><br></pre></td></tr></table></figure><ul><li>final</li></ul><p><code>CMakeLists.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">generate_messages(</span><br><span class="line">  DEPENDENCIES</span><br><span class="line">  std_msgs</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># compile the package</span></span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><ul><li>help</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">rosmsg -h</span><br><span class="line"><span class="comment"># Show message description</span></span><br><span class="line">rosmsg show </span><br><span class="line"><span class="comment"># Find files that use message</span></span><br><span class="line">rosmsg users  </span><br><span class="line"><span class="comment"># Display message md5sum</span></span><br><span class="line">rosmsg md5  </span><br><span class="line"><span class="comment"># List messages in a package</span></span><br><span class="line">rosmsg package  </span><br><span class="line"><span class="comment"># List packages that contain messages</span></span><br><span class="line">rosmsg packages </span><br><span class="line"></span><br><span class="line">rosmsg show -h</span><br><span class="line">rosmsg show [options] &lt;message <span class="built_in">type</span>&gt;</span><br><span class="line"><span class="comment"># Options:</span></span><br><span class="line"><span class="comment">#  -h, --help  show this help message and exit</span></span><br><span class="line"><span class="comment">#  -r, --raw   show raw message text, including comments</span></span><br></pre></td></tr></table></figure><h1 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rqt_graph creates a dynamic graph of what's going on in the system about the communication.</span></span><br><span class="line">rosrun rqt_graph rqt_graph</span><br><span class="line"><span class="comment"># displays a scrolling time plot of the data published on topics. </span></span><br><span class="line"><span class="comment"># If you're using electric or earlier, rqt is not available. Use rxplot instead.</span></span><br><span class="line">rosrun rqt_plot rqt_plot</span><br><span class="line"><span class="comment"># rqt_console displays output from nodes. </span></span><br><span class="line">rosrun rqt_console rqt_console</span><br><span class="line"><span class="comment"># rqt_logger_level changes the verbosity level (DEBUG, WARN, INFO, and ERROR) of nodes as they run.</span></span><br><span class="line">rosrun rqt_logger_level rqt_logger_level</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit a file within a package</span></span><br><span class="line">rosed [package_name] [filename]</span><br><span class="line"><span class="comment"># To set the default editor to emacs you can edit your ~/.bashrc file to include:</span></span><br><span class="line"><span class="built_in">export</span> EDITOR=<span class="string">'emacs -nw'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># roswtf examines your system to try and find problems. </span></span><br><span class="line"><span class="comment"># If you find yourself stumped by a build or communication issue, try running it and seeing if it can point you in the right direction.</span></span><br><span class="line">roswtf</span><br><span class="line"><span class="comment"># set your ROS_PACKAGE_PATH to a bad value. We're also going to stop our roscore to simplify the output that you see.</span></span><br><span class="line">ROS_PACKAGE_PATH=bad:<span class="variable">$ROS_PACKAGE_PATH</span> roswtf</span><br></pre></td></tr></table></figure><h1 id="Publisher-and-Subscriber"><a href="#Publisher-and-Subscriber" class="headerlink" title="Publisher and Subscriber"></a>Publisher and Subscriber</h1><ul><li>Publisher</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/catkin_ws/src/[package_name]/src</span><br></pre></td></tr></table></figure><p><code>talker.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// use the most common public pieces of the ROS system.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="comment">// This is a header generated automatically from the String.msg file in that package</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"std_msgs/String.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This tutorial demonstrates simple sending of messages over the ROS system.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * The ros::init() function needs to see argc and argv so that it can perform</span></span><br><span class="line"><span class="comment">   * any ROS arguments and name remapping that were provided at the command line. For programmatic</span></span><br><span class="line"><span class="comment">   * remappings you can use a different version of init() which takes remappings</span></span><br><span class="line"><span class="comment">   * directly, but for most command-line programs, passing argc and argv is the easiest</span></span><br><span class="line"><span class="comment">   * way to do it.  The third argument to init() is the name of the node.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * You must call one of the versions of ros::init() before using any other</span></span><br><span class="line"><span class="comment">   * part of the ROS system.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment">// Initialize ROS. This allows ROS to do name remapping through the command line</span></span><br><span class="line">  <span class="comment">// The name used here must be a base name, ie. it cannot have a / in it.</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"talker"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * NodeHandle is the main access point to communications with the ROS system.</span></span><br><span class="line"><span class="comment">   * The first NodeHandle constructed will fully initialize this node, and the last</span></span><br><span class="line"><span class="comment">   * NodeHandle destructed will close down the node.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment">// Create a handle to this process' node. </span></span><br><span class="line">  <span class="comment">// The first NodeHandle created will actually do the initialization of the node, and the last one destructed will cleanup any resources the node was using.</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * The advertise() function is how you tell ROS that you want to</span></span><br><span class="line"><span class="comment">   * publish on a given topic name. This invokes a call to the ROS</span></span><br><span class="line"><span class="comment">   * master node, which keeps a registry of who is publishing and who</span></span><br><span class="line"><span class="comment">   * is subscribing. After this advertise() call is made, the master</span></span><br><span class="line"><span class="comment">   * node will notify anyone who is trying to subscribe to this topic name,</span></span><br><span class="line"><span class="comment">   * and they will in turn negotiate a peer-to-peer connection with this</span></span><br><span class="line"><span class="comment">   * node.  advertise() returns a Publisher object which allows you to</span></span><br><span class="line"><span class="comment">   * publish messages on that topic through a call to publish().  Once</span></span><br><span class="line"><span class="comment">   * all copies of the returned Publisher object are destroyed, the topic</span></span><br><span class="line"><span class="comment">   * will be automatically unadvertised.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * The second parameter to advertise() is the size of the message queue</span></span><br><span class="line"><span class="comment">   * used for publishing messages.  If messages are published more quickly</span></span><br><span class="line"><span class="comment">   * than we can send them, the number here specifies how many messages to</span></span><br><span class="line"><span class="comment">   * buffer up before throwing some away.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment">// Tell the master that we are going to be publishing a message of type std_msgs/String on the topic chatter. </span></span><br><span class="line">  <span class="comment">// This lets the master tell any nodes listening on chatter that we are going to publish data on that topic. </span></span><br><span class="line">  <span class="comment">// The second argument is the size of our publishing queue. In this case if we are publishing too quickly it will buffer up a maximum of 1000 messages before beginning to throw away old ones.</span></span><br><span class="line">  ros::Publisher chatter_pub = n.advertise&lt;std_msgs::String&gt;(<span class="string">"chatter"</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">// A ros::Rate object allows you to specify a frequency that you would like to loop at. </span></span><br><span class="line">  ros::<span class="function">Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * A count of how many messages we have sent. This is used to create</span></span><br><span class="line"><span class="comment">   * a unique string for each message.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// ros::ok() will return false if:</span></span><br><span class="line"><span class="comment">// - a SIGINT is received (Ctrl-C)</span></span><br><span class="line"><span class="comment">// - we have been kicked off the network by another node with the same name</span></span><br><span class="line"><span class="comment">// - ros::shutdown() has been called by another part of the application.</span></span><br><span class="line"><span class="comment">// - all ros::NodeHandles have been destroyed</span></span><br><span class="line">  <span class="keyword">while</span> (ros::ok())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This is a message object. You stuff it with data, and then publish it.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    std_msgs::String msg;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss &lt;&lt; <span class="string">"hello world "</span> &lt;&lt; count;</span><br><span class="line">    msg.data = ss.str();</span><br><span class="line"><span class="comment">// print out</span></span><br><span class="line">    ROS_INFO(<span class="string">"%s"</span>, msg.data.c_str());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The publish() function is how you send messages. The parameter</span></span><br><span class="line"><span class="comment">     * is the message object. The type of this object must agree with the type</span></span><br><span class="line"><span class="comment">     * given as a template parameter to the advertise&lt;&gt;() call, as was done</span></span><br><span class="line"><span class="comment">     * in the constructor above.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// broadcast the message to anyone who is connected.</span></span><br><span class="line">    chatter_pub.publish(msg);</span><br><span class="line"><span class="comment">// callback function</span></span><br><span class="line">    ros::spinOnce();</span><br><span class="line"><span class="comment">// sleep for the time remaining to let us hit our 10Hz publish rate.</span></span><br><span class="line">    loop_rate.sleep();</span><br><span class="line">    ++count;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Subscriber</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/catkin_ws/src/[package_name]/src</span><br></pre></td></tr></table></figure><p><code></code>listener.cpp<code></code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"std_msgs/String.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This tutorial demonstrates simple receipt of messages over the ROS system.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chatterCallback</span><span class="params">(<span class="keyword">const</span> std_msgs::String::ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// This is the callback function that will get called when a new message has arrived on the chatter topic. </span></span><br><span class="line"><span class="comment">// The message is passed in a boost shared_ptr, which means you can store it off if you want, without worrying about it getting deleted underneath you, and without copying the underlying data.</span></span><br><span class="line">  ROS_INFO(<span class="string">"I heard: [%s]"</span>, msg-&gt;data.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * The ros::init() function needs to see argc and argv so that it can perform</span></span><br><span class="line"><span class="comment">   * any ROS arguments and name remapping that were provided at the command line. For programmatic</span></span><br><span class="line"><span class="comment">   * remappings you can use a different version of init() which takes remappings</span></span><br><span class="line"><span class="comment">   * directly, but for most command-line programs, passing argc and argv is the easiest</span></span><br><span class="line"><span class="comment">   * way to do it.  The third argument to init() is the name of the node.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * You must call one of the versions of ros::init() before using any other</span></span><br><span class="line"><span class="comment">   * part of the ROS system.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"listener"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * NodeHandle is the main access point to communications with the ROS system.</span></span><br><span class="line"><span class="comment">   * The first NodeHandle constructed will fully initialize this node, and the last</span></span><br><span class="line"><span class="comment">   * NodeHandle destructed will close down the node.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * The subscribe() call is how you tell ROS that you want to receive messages</span></span><br><span class="line"><span class="comment">   * on a given topic.  This invokes a call to the ROS</span></span><br><span class="line"><span class="comment">   * master node, which keeps a registry of who is publishing and who</span></span><br><span class="line"><span class="comment">   * is subscribing.  Messages are passed to a callback function, here</span></span><br><span class="line"><span class="comment">   * called chatterCallback.  subscribe() returns a Subscriber object that you</span></span><br><span class="line"><span class="comment">   * must hold on to until you want to unsubscribe.  When all copies of the Subscriber</span></span><br><span class="line"><span class="comment">   * object go out of scope, this callback will automatically be unsubscribed from</span></span><br><span class="line"><span class="comment">   * this topic.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * The second parameter to the subscribe() function is the size of the message</span></span><br><span class="line"><span class="comment">   * queue.  If messages are arriving faster than they are being processed, this</span></span><br><span class="line"><span class="comment">   * is the number of messages that will be buffered up before beginning to throw</span></span><br><span class="line"><span class="comment">   * away the oldest ones.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  ros::Subscriber sub = n.subscribe(<span class="string">"chatter"</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ros::spin() will enter a loop, pumping callbacks.  With this version, all</span></span><br><span class="line"><span class="comment">   * callbacks will be called from within this thread (the main one).  ros::spin()</span></span><br><span class="line"><span class="comment">   * will exit when Ctrl-C is pressed, or the node is shutdown by the master.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="comment">// ros::spin() enters a loop, calling message callbacks as fast as possible. </span></span><br><span class="line"><span class="comment">// Don't worry though, if there's nothing for it to do it won't use much CPU.</span></span><br><span class="line">  ros::spin();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>build nodes</li></ul><p><code>package.xml</code> </p><p><code>CMakeLists.txt</code></p><p><code></code>txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 2.8.3)</span><br><span class="line">project(beginner_tutorials)</span><br><span class="line"></span><br><span class="line">## Find catkin and any catkin packages</span><br><span class="line">find_package(catkin REQUIRED COMPONENTS roscpp rospy std_msgs genmsg)</span><br><span class="line"></span><br><span class="line">## Declare ROS messages and services</span><br><span class="line">add_message_files(FILES Num.msg)</span><br><span class="line">add_service_files(FILES AddTwoInts.srv)</span><br><span class="line"></span><br><span class="line">## Generate added messages and services</span><br><span class="line">generate_messages(DEPENDENCIES std_msgs)</span><br><span class="line"></span><br><span class="line">## Declare a catkin package</span><br><span class="line">catkin_package()</span><br><span class="line"></span><br><span class="line">#####################################################</span><br><span class="line">## Build talker and listener</span><br><span class="line">include_directories(include $&#123;catkin_INCLUDE_DIRS&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(talker src/talker.cpp)</span><br><span class="line">target_link_libraries(talker $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(talker beginner_tutorials_generate_messages_cpp)</span><br><span class="line"></span><br><span class="line">add_executable(listener src/listener.cpp)</span><br><span class="line">target_link_libraries(listener $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(listener beginner_tutorials_generate_messages_cpp)</span><br></pre></td></tr></table></figure><h1 id="Service-and-Client"><a href="#Service-and-Client" class="headerlink" title="Service and Client"></a>Service and Client</h1><ul><li>Service</li></ul><p><code>add_two_ints_server.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="comment">// beginner_tutorials/AddTwoInts.h is the header file generated from the srv file that we created earlier.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"beginner_tutorials/AddTwoInts.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">add</span><span class="params">(beginner_tutorials::AddTwoInts::Request  &amp;req,</span></span></span><br><span class="line"><span class="function"><span class="params">         beginner_tutorials::AddTwoInts::Response &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  res.sum = req.a + req.b;</span><br><span class="line">  ROS_INFO(<span class="string">"request: x=%ld, y=%ld"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)req.a, (<span class="keyword">long</span> <span class="keyword">int</span>)req.b);</span><br><span class="line">  ROS_INFO(<span class="string">"sending back response: [%ld]"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)res.sum);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ros::init(argc, argv, <span class="string">"add_two_ints_server"</span>);</span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  ros::ServiceServer service = n.advertiseService(<span class="string">"add_two_ints"</span>, add);</span><br><span class="line">  ROS_INFO(<span class="string">"Ready to add two ints."</span>);</span><br><span class="line">  ros::spin();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Client</li></ul><p><code>add_two_ints_client.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"beginner_tutorials/AddTwoInts.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ros::init(argc, argv, <span class="string">"add_two_ints_client"</span>);</span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(<span class="string">"usage: add_two_ints_client X Y"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line">  <span class="comment">// this creates a client for the add_two_ints service. </span></span><br><span class="line">  <span class="comment">// The ros::ServiceClient object is used to call the service later on.</span></span><br><span class="line">  ros::ServiceClient client = n.serviceClient&lt;beginner_tutorials::AddTwoInts&gt;(<span class="string">"add_two_ints"</span>);</span><br><span class="line">  beginner_tutorials::AddTwoInts srv;</span><br><span class="line">  srv.request.a = atoll(argv[<span class="number">1</span>]);</span><br><span class="line">  srv.request.b = atoll(argv[<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">// calls the service</span></span><br><span class="line">  <span class="comment">//  Since service calls are blocking, it will return once the call is done. </span></span><br><span class="line">  <span class="comment">// If the service call succeeded, call() will return true and the value in srv.response will be valid. </span></span><br><span class="line">  <span class="comment">// If the call did not succeed, call() will return false and the value in srv.response will be invalid.</span></span><br><span class="line">  <span class="keyword">if</span> (client.call(srv))</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(<span class="string">"Sum: %ld"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)srv.response.sum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    ROS_ERROR(<span class="string">"Failed to call service add_two_ints"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>build node</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(add_two_ints_server src/add_two_ints_server.cpp)</span><br><span class="line">target_link_libraries(add_two_ints_server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(add_two_ints_server beginner_tutorials_gencpp)</span><br><span class="line"></span><br><span class="line">add_executable(add_two_ints_client src/add_two_ints_client.cpp)</span><br><span class="line">target_link_libraries(add_two_ints_client $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(add_two_ints_client beginner_tutorials_gencpp)</span><br></pre></td></tr></table></figure><h1 id="rosbag"><a href="#rosbag" class="headerlink" title="rosbag"></a>rosbag</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># all published topics should be accumulated in a bag file.</span></span><br><span class="line">rosbag record -a</span><br><span class="line"><span class="comment"># checks the contents of the bag file without playing it back.</span></span><br><span class="line"><span class="comment"># topic names and types as well as the number (count) of each message topic contained in the bag file</span></span><br><span class="line">rosbag info &lt;your bagfile&gt;</span><br><span class="line"><span class="comment"># replay the bag file to reproduce behavior in the running system.</span></span><br><span class="line">rosbag play [option] &lt;your bagfile&gt;</span><br><span class="line"><span class="comment"># -r valuechange the rate of publishing by a specified factor</span></span><br><span class="line"><span class="comment"># -d  If rosbag play publishes messages immediately upon advertising, subscribers may not receive the first several published messages. The waiting period can be specified with the -d option.</span></span><br><span class="line"><span class="comment"># Recording a subset of the data</span></span><br><span class="line">rosbag record [topic_name]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The note when I use ROS Kinetic.&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="cpp" scheme="http://www.shong.win/tags/cpp/"/>
    
      <category term="ROS" scheme="http://www.shong.win/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>Multiple Emitter Location and Signal Parameter Estimation</title>
    <link href="http://www.shong.win/2017/03/31/graduate-project/Multiple-Emitter-Location-and-Signal-Parameter-Estimation/"/>
    <id>http://www.shong.win/2017/03/31/graduate-project/Multiple-Emitter-Location-and-Signal-Parameter-Estimation/</id>
    <published>2017-03-31T15:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>多发射器定位和信号参数估计<br><a id="more"></a></p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>通过处理传感器阵列接收到的信号来定位发射器，人们对其非常着迷并提出了许多特例的假设。普遍的问题主要考虑在任意协方差矩阵的噪声/干扰环境中的传感器具有任意位置和任意方向特性（增益/相位/极化）。这篇报告主要关注多发射器方面的问题，其次是解的泛化。已经给出了多信号分类（MUSICAL）算法的描述，其提供了以下的渐近无偏估计：</p><ol><li>存在的入射波阵面数</li><li>到达方向（DOA）或者发射器位置</li><li>入射波形之间的强度和互相关</li><li>噪声干扰强度</li></ol><p>包括了基于最大似然（ML）和最大熵（ME）以及常规波束形成的方法的实例和比较。 也包括了按时间序列操作的多频率估计器的使用的示例。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>术语 - 多重信号分类（MUSIC）算法是用来描述在阵列元件处测量接收信号来确定到达天线阵列的多个波阵面的参数所涉及的实验和理论技术。</p><p>普遍的问题是在任意协方差矩阵的噪声/干扰环境中具有任意位置和任意方向特性（gaid / phasel /极化）的天线。 多信号分类方法被描述为可以为以下参数提供渐近的无偏估计的算法：</p><ol><li>信号的个数</li><li>到达方向（DOA）</li><li>方向波形之间的强度和互相关</li><li>极化</li><li>噪声/干扰的强度</li></ol><p>这些技术非常普遍，应用广泛。而MUSIC算法的特例是</p><ol><li>常规干涉测量</li><li>单脉冲测向（DF），即使用多个共定位天线</li><li>多频率估计</li></ol><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p>在 $ M $ 个阵列元件处接收的波形是 $ D $ 个入射波前和噪声的线性组合。 因此，多信号分类方法从以下模型开始，首先用向量 $ X $ 描述M接收到的信号：</p><p>（1）  $ \begin{bmatrix} X_1 \   X_2 \ … \X_M\end{bmatrix} = \begin{bmatrix} a(\theta_1), a(\theta_2) ,…,a(\theta_D) \end{bmatrix} \begin{bmatrix} F_1 \   F_2 \ … \F_D\end{bmatrix}+\begin{bmatrix} W_1 \   W_2 \ … \W_M\end{bmatrix} $  or  $ X=AF+W $ </p><p>入射信号在任意参考点（例如坐标系的原点）用复数  $ F_1, F_2, …, F_D $  表示幅度和相位。无论是与信号一起“感测到的”，还是在仪器内部产生的噪声 ，记为复数向量 $ W $  。</p><p>一般来说， $ X $  和  $ A $  的元素也是复数， $ a_{ij} $  是信号到达角度和阵列元素定位的函数。也就是说， $ a_{ij} $  取决于阵列的第 $ i $  个元素，它反映了第 $ j $ 个发射阵列信号入射的方向。矩阵 $ A $  的第 $ j $ 列 $ a(\theta_j) $ 是一个“模”向量，反映了第 $ j $ 个信号的到达方向角  $ \theta_j $  。知道了模向量 $ a(\theta_1) $  便知道了  $ \theta_1 $  ，除非 $ a(\theta_1)=a(\theta_2)  $  而  $ \theta_1 \neq \theta_2 $  ，一种不可解的情况，为一型歧义模糊。</p><p>在几何语言中，测量到的 $ X $ 向量能在M维空间可视化为一个矢量，比如矩阵 $ A $ 的列向量，即模态向量  $ a(\theta_j)=a_{ij}, i=1,2,…,M $  能被可视化。公式（1）说明 $ X $ 是模态向量的线性组合。 $ F $ 的元素是组合的系数。 $ X $ 向量被限制在矩阵A所表示的空间内，即如果A有两列，则空间范围是在M空间内不超过二维的子空间，X比必须在子空间内。所以 $ a(\theta) $  ，连接所有可能的模态向量，位于M空间却又是非线性的。图（1）可帮助理解它的可视化。比如在对方向角的测向系统中， $ \theta $  将有单个参数组成。在方位/海拔/距离系统中，原 $ \theta $ 角会被  $ \theta,\phi,r $  代替。在任何情况下， $ a(\theta) $ 是在M空间中的像蛇一般（仅有方向角）或者像拧紧的床单一样的向量连接体。实际上，测量连接体 $ a(\theta) $ 或者建立其他的过程反映了阵列的校准。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-1.jpg" alt=""></p><p>在图（1）中的几何术语，求解多个入射波阵面的到达方向的问题包含定位连接体 $ a(\theta) $ 和A的范围空间的交点。A的范围空间是从观测到的数据中形成的，而获得范围空间的方法必要时它的维数（入射信号的个数D）满足下式。</p><h2 id="矩阵-S"><a href="#矩阵-S" class="headerlink" title="矩阵 S"></a>矩阵 S</h2><p>向量 $ X $ 的 $ M\times M $ 维协方差矩阵是</p><p>（2）  $ S\triangleq \overline{XX^<em>} = A \overline{FF^</em>} A^<em> + \overline{WW^</em>} $   or  $ S=APA^*+\lambda S_0 $ </p><p>此基于入射信号和噪声是不相关的基本假设。用 $ F $ 来表示的入射波形可能是无相关的（ $ D\times D $  维的矩阵  $ P\triangleq \overline{F F^*} $   是对角矩阵），P是奇异矩阵的话也可能包含许多对完全相关的信号。通常P将“仅是”正定矩阵，反映入射波形之间发生的任意成对相关性。</p><p>当入射波前数D小于阵列元件数M时， $ APA^* $ 是奇异的，它的秩小于M。因此：</p><p>（3）  $ |APA^*| =|S-\lambda S_0| =0 $ </p><p>该公式仅当  $ \lambda $  等于  $ S_0 $  的度量中  $ S $  的某个特征值时成立。但是对于满秩矩阵 A 和正定矩阵 P， $ APA^<em> $  必须是非负定矩阵。所以  $ \lambda $  只能是最小特征值  $ \lambda_{min} $  。所以任意已知矩阵  $ S=\overline{X X^</em>} $  可以协作</p><p>（4）  $ S=APA^* + \lambda_{min} S_0 ,  \lambda_{min}\ge 0 $ </p><p>其中  $ \lambda_{min} $  是  $ |S-\lambda S_0|=0 $ 的最小的解。不过得注意当噪声向量  $ W $  的元素均值为0，方差为 $ \sigma^2 $ 时的特殊情况，此时，  $ \lambda_{min} S_0 = \sigma^2 I $ </p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><p> $ APA^<em> $ 的秩是D，可直接由在 $ S_0 $ 的度量中S的特征值来决定，也就是说，在 $ S_0 $ 的度量中S的特征值的完整集中， $ \lambda_{min} $  将不会一直是单一特征值。事实上，它将重复出现  $ N=M-D $  次，这是因为S的特征值和  $ S-\lambda_{min}S_0 = APA^</em> $  的特征值在所有情况下不同于 $ \lambda_{min} $  。因为  $ APA^* $  的最小特征值是 0 （奇异矩阵）， $ \lambda_{min} $  将重复 N 次，所有入射信号的估计是</p><p>（5）  $ \hat{D} = M-\hat{N} $ </p><p> $ \hat{N}  $  是  $ \lambda_{min}(S,S_0) $  的重数，  $ \lambda(S,S_0) $  读作 在 $ S_0 $ 度量下的 $ S $ 的最小特征值 $ \lambda_{min} $ 。实践时可以期望多个 $ \lambda $  出现在一个聚类内而不是完全相等。随着处理的数据增加，在这个聚类上的扩散就会减少。</p><h2 id="信号和噪声子空间"><a href="#信号和噪声子空间" class="headerlink" title="信号和噪声子空间"></a>信号和噪声子空间</h2><p>在 $ S_0 $ 度量下的S的M个特征向量必须满足  $ Se_i=\lambda_i S_0 e_i , i=1,2,…,M $  。因为  $ S=APA^<em>+\lambda S_0 $  ，我们可知  $ APA^</em>e_i = (\lambda_i-\lambda_{min})S_0 e_i $  。显然对于每个（其实共有N个） $ \lambda_i =\lambda_{min}  $  ，都由  $ APA^<em> e_i = 0  $   或者  $ A^</em>e_i=0 $  。也就是说和  $ \lambda_{min}(S,S_0) $  有关的特征向量都与 A 的列向量 - 入射信号模态向量张成的空间正交。</p><p>因此，我们可以合理地判断，N个噪声特征向量张成的N维子空间，和由入射信号模态向量张成的D维信号子空间，他们是不相交的。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>现在有方法求解入射信号模态向量，如果  $ E_N $  被定义为  $ M\times N $  的矩阵，其列向量是N个噪声特征向量，一个向量Y到信号子空间的坐标欧式距离的平方为  $ d^2 = Y^<em>E_N E_N^</em> Y $  ，我们能绘制出在连接体  $ a(\theta) $  （ 关于  $ \theta $  的一个函数）上的一个点  $ 1/d^2 $ </p><p>（6）  $ P_{MU}(\theta)=\frac{1}{a^<em>(\theta) E_N E_N^</em> a(\theta)} $ </p><p>然而，连接体  $ a(\theta) $  可能和D维信号子空间相交次数次数超过D次，另一个无解的情况是二型模糊 - 多个入射信号。从表达式上可以看出，即使对于多个入射波阵面，MUSIC算法也是渐近无偏的，因为S趋近于完美测量，以至于 $ E_N $  也是。 $ a(\theta) $  与数据无关。</p><p>一旦D个入射信号的到达方向被确定，矩阵A变可求得，便能用于计算入射信号的参数。矩阵P的解是正定的，因为  $ APA^* = S- \lambda_{min} S_0 $ </p><p>（7）  $ P=(A^<em>A)^{-1} A^</em>(S-\lambda_{min}S_0)A(A^*A)^{-1} $ </p><h2 id="考虑极化"><a href="#考虑极化" class="headerlink" title="考虑极化"></a>考虑极化</h2><p>考虑从特定方向  $ \theta_0  $  到达的信号。 假设阵列在极化方面不是多样的; 即所有元素都相同地被极化，例如垂直地偏振。 当然，测向 DF 系统对垂直极化能量最为敏感，对水平完全不敏感，对任意极化能量部分敏感。 该阵列仅对到达能量的垂直极化分量敏感。</p><p>对于一般或极化不同的阵列，反映方向  $ \theta $  的模态矢量取决于信号的极化情况。 垂直极化信号将引起一个模态向量，水平的极化会引起又一个，右圆极化（RHC）又是一种结果。</p><p>极化可以用一个复数  $ q $  来表征，我们能通过观察模态向量的变化来作为发射器在某个特定方向  $ \theta_0 $  的极化参数  $ q $  。可以证明，通过所有可能的极化 $ q $ 的变化，模态向量扫描出一个二维的“极化子空间”。所以仅需要 $ \theta_0 $ 方向上的极化子空间内两个独立无关的模态向量，便能表示任何在 $ \theta_0 $ 方向上的发射器极化参数 $ q $ 。具体操作是，为了求解发射器极化参数，只需要计算两个发射器极化的模态矢量，其中一个将被用在求解阵列非多样化极化的系统的到达方向（DOA）。</p><p>这使得公式形似公式（6），但包含了在阵列元素间多样性极化的影响。</p><p>（8）  $ P_{MU}(\theta)=\frac{1}{\lambda_{min}( \begin{bmatrix}a_x^<em>(\theta)\ a_y^</em>(\theta) \end{bmatrix} E_N E_N^* \begin{bmatrix}a_x(\theta), a_y(\theta)\end{bmatrix}} $ </p><p>其中  $ a_x(\theta) $  和  $ a_y(\theta) $  对应分别采用的 x和y线性入射波前。公式（8）种对应  $ \lambda_{min} $  的特征向量用  $ [1\space  q]^T $  的性质给出了极化参数 $ q $  。</p><h2 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h2><p>算法的步骤如下所示（如图2所示）：</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-2.jpg" alt=""></p><ol start="0"><li>收集数据，表示为 $ S $ </li><li>计算在 $ S_0 $ 度量下的矩阵 $ S $ 的特征结构</li><li>用公式（5）决定信号的个数 $ D $  </li><li>用公式（6）或者（8）评估  $ P_{MU}(\theta) $  和  $ \theta $ </li><li>选取  $ P_{MU}(\theta) $  的D个峰值</li><li>用公式（7）计算剩余参数</li></ol><p>上述步骤已用几种形式来验证和评价的原理和基本性能。已使用真实的接收机，阵列，和多个发射器进行声场测试。这些测试的结果证明了这种方法在实际情况下处理多个信号的潜在用途，性能测试结果也将另文介绍。</p><h2 id="和其他方法比较"><a href="#和其他方法比较" class="headerlink" title="和其他方法比较"></a>和其他方法比较</h2><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-3.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-4.jpg" alt=""></p><p>将MUSIC算法和原始的波束成形（BF），最大似然（ML）和最大熵（ME）进行比较，表达式如下，图见图3和图4</p><p> $ P_{BF}(\theta) = a^*(\theta)  S a(\theta)  $ </p><p> $ P_{ML}(\theta) =\frac{1}{ a^*(\theta)  S^{-1} a(\theta) }  $ </p><p> $ P_{ME}(\theta)  =\frac{1}{ a^<em>(\theta)  cc^</em> a(\theta) } $ </p><p>其中  $ c $  是  $ S^{-1} $  的一列。波束成形表达式计算的是，在波束成形器中以一个方向的函数作为输出，（插入在某个特定方向上对导向或者搜寻的适当延迟后的数组元素信号求和），绘制出最有效的一个。</p><p> $ P_{ML}(\theta) $  计算在 $ X $ 均值为零，多变量高斯函数，和只存在单一入射波前的假设下的似然函数。对于多入射波前， $ P_{ML}(\theta) $  是</p><p> $ P_{ML}(\theta) =\frac{1}{ \lambda_{min} (A_\theta^*  S^{-1} A_\theta  ) } $ </p><p>这实现了D维上的搜索和绘图。</p><p> $ P_{ME}(\theta) $  是基于M阵列中的其中一个元素作为基准，并试图求得施加到现在 $ M-1 $ 个接收信号上的权重，使得它们的总和满足最小均方误差MMSE满足基准。因为存在M个可能的基准，从 $ S^{-1} $ 的M个可能的列向量选择会得到M个不同的 $ P_{ME}(\theta) $ 。通过绘图比较，将持续选择一个特定的基准。</p><p>应用到一个导向到多馈源的抛物面天线的完全通用的MUSIC算法，如图5所示，离轴稍微倾斜的笔形波束假设为元素模式。因为有六个天线其实是同位的，测向能力源于天线模式的多样性。计算机主要用来模拟实践中在所需条件下会出现的噪声矩阵S，然后代入MUSIC算法。图5说明分辨出了三个方向上的信号和它们的极化估计，即使两个到达信号是高度相似的（90%相关）。</p><p>图6使用MUSIC算法在非常有限的时间进行数据采样，估计频域上的多重正弦波（任意振幅和相位）。这图说明，即使无噪声存在，数据样本的六个十进制数的舍入已经破坏了数据中的可求解多个频率的重要信息。</p><h2 id="总结和结论"><a href="#总结和结论" class="headerlink" title="总结和结论"></a>总结和结论</h2><p>在准备此论文时，发现了Gething和Davies的相关工作，不根据联立方程和特殊线性关系，借助特征结构，提出了一部分解决方案。然而也错失了S矩阵的特征结构和向量空间设置的几何意义。Reddi按此方法近期做了更多相关工作，虽然仍局限于均匀并且全向元件的共线的阵列，也没有显式利用整个噪声子空间。Ziegenbein应用相同的基本概念，其特点是将时间序列频谱分析引入到Karhunen-Loeve变换。El-Behery 和 MacPhie 和 Capon 使用最大似然法处理全向元件均匀共线阵列。Pisarenko则处理全是正弦波的情况下的时间序列和地址，即一维噪声子空间。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-5.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/graduation/music-6.jpg" alt=""></p><p>提出的多信号分类法是普适并应用广泛的，该方法是可解释在复数的M空间的几何结构，其中所测量的S矩阵的特征结构起主要作用。MUSIC算法提供了一种通用的信号参数的渐近无偏估计来趋近于真正的Cramer-Rao 界。MUSIC算法将数据模型化为信号源和噪声的总和，而不是白噪声驱动的点源传播函数的卷积（即自回归模型和最大熵）或者假设X向量是零均值高斯函数的最大概率（高斯信号通常使用最大似然法）。在几何意义上，MUSIC算法求的是  $ a(\theta) $  连接体到信号子空间的最小值，并以最大似然最小化为距离部分的加权向量。</p><p>无需假设阵列的几何形状，阵列元素可以按规则或者不规则模式进行排列，也可以在定向特性上是相同的或者是不同的（振幅/相位），而极化特性得是相同的。包括了更一般的极化多样性的天线阵列的扩展将在另一篇论文中讨论。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多发射器定位和信号参数估计&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="MFP" scheme="http://www.shong.win/tags/MFP/"/>
    
  </entry>
  
  <entry>
    <title>slam introduction</title>
    <link href="http://www.shong.win/2017/03/26/slam-introduction/"/>
    <id>http://www.shong.win/2017/03/26/slam-introduction/</id>
    <published>2017-03-26T10:47:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>SLAM - Simultaneous Localization and Mapping<br>高翔, 张涛, 颜沁睿, 刘毅, 视觉SLAM十四讲：从理论到实践, 电子工业出版社, 2017<br><a id="more"></a></p><h2 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h2><ul><li>Sensor</li><li>Vision Odametry</li><li>Back-end</li><li>Mapping</li><li>Loop Closure Detection</li></ul><p>When we implement slam algorithm, we focus on these four asspects:</p><ol><li>Present the map.<br>dense or sparse</li><li><p>perceive information<br>how to perceive the information roundly. the field of view of RGB-F camera is narrow, but that of LIDAT is too wide. </p></li><li><p>Associate the data<br>the coordinate, timestamp and data type of different sensors are different.</p></li><li><p>Location and Mapping<br>how to locate and build the model, which involves many math problems like Physical model establishment, state estimation and optimization.<br>There are other loopback detection problems, exploration problems, and kidnapping.</p></li></ol><h1 id="Sensor"><a href="#Sensor" class="headerlink" title="Sensor"></a>Sensor</h1><h2 id="LIDAR"><a href="#LIDAR" class="headerlink" title="LIDAR"></a>LIDAR</h2><p>Laser rader is the oldest sensor in SLAM, which provides the information about the distance between sensor and obstacle with high precision of angles and ranges.<br>But because most of robots are limited in the ground, so the Mapping of slam is 2D-map in many filter ways, like Kalman filter and particle filter.</p><ul><li><p>advantage: high precision,wide viewing range; fast; low computational effort; </p></li><li><p>disadvantage: high cost.</p><p>low cost radar angle resolution is not high enough which will affect the modeling accuracy</p></li></ul><h2 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h2><p>Camera is becoming popular in recent decade, with the rapid growth of CPU/GPU processing speed.<br>SLAM can be divided by typies of cameras.</p><ol><li>Monocular Camera<br>advantage: low cost, simple.<br>However, the unability to determine the depth also has a benefit: it makes monocular SLAM not affected by the size of the environment, so it can be used both indoors and outdoors.<br>disadvantage: can’t get the exact information of depth. So it can’t know the robot movement trajectory and the true size of the map.<br>It can get the relative depth estimation by solving the similar transformation space Sim(3), rather than the traditional Euclidean space SE(3). If we have to solve in SE(3), we need to use some external means, such as GPS, IMU and other sensors to determine the track and map scale.</li></ol><p>On the other hand, the monocular camera can not rely on an image to obtain the relative distance of the object in the image from itself. To estimate this relative depth, monocular SLAM relies on triangulation in motion to solve the camera motion and estimate the spatial position of the pixel. That is, its trajectory and map will converge and know the location of the pixel only after the camera movement. At the same time, the camera movement can not be a pure rotation, which gives the application of monocular SLAM has brought some trouble, but in the daily use of SLAM, the camera will rotate and move. </p><pre><code>- Monocular Camera + Inertial Measurement Unit(IMU)</code></pre><ol start="2"><li>Binocular Camera</li></ol><p>The binocular camera estimates the position of the spatial point through the baseline between multiple cameras. Unlike monocular, stereoscopic vision can be estimated at the time of motion, and can be estimated at rest, eliminating many of the troubles of monocular vision. However, binocular or multi-nocular camera configuration and calibration are more complex, and its depth range is also limited by the baseline and resolution. Calculating the distance by a binocular image is a matter of very computational effort and is now done with an FPGA.</p><ol start="3"><li>RGB-D</li></ol><p>Its biggest feature is that through the infrared structural light or Time-of-Flight principle, directly measurea the distanceof each pixel from the camera. Therefore, it can provide richer information than traditional cameras, and it does not have to calculate the depth as time or effort as monocular or binocular. However, now most of the RGBD camera there are still with narrow measurement range, noisy, small field of vision and many other issues. Out of range limits, it is mainly for indoor SLAM.</p><pre><code>- Structural Light MethodStructural light method is an active optical measurement technology, the basic principle is the structure of the projectile projection to the surface of the measured object can be controlled by the light point, light strip or light plane. By the image sensor to obtain the image, through the system geometry, using the triangular principle to calculate the three-dimensional coordinates of the object. advantage: simple calculation, small volume, low price, large potting process, easy installation and maintenance, and is widely used in the actual three-dimensional contour measurement. However, the measurement accuracy is limited by physical optics, and there are occlusion problems. Because of the speed of mutual contradiction. it is difficult to be improved at the same time.- Time of Flight(ToF)The sensor sends the modulated near-infrared light, after the reflection of the object, it gets the information of depth through the calculation of light transmission and reflection time difference or phase difference, which are converted to the distance of the scene to be shot.</code></pre><ol start="4"><li>fisheye camera / panoramic camera</li></ol><h2 id="Hybrid-Sensors"><a href="#Hybrid-Sensors" class="headerlink" title="Hybrid Sensors"></a>Hybrid Sensors</h2><h1 id="Vision-Odametry"><a href="#Vision-Odametry" class="headerlink" title="Vision Odametry"></a>Vision Odametry</h1><p>vision Odometry, that is, vision odometer. It estimates the relative motion (Ego-motion) of the robot at two moments. In the laser SLAM, we can match the current observations with the global map, and use ICP to solve the relative motion. And for the camera, it moves in Euclidean space, and we often need to estimate a three-dimensional transformation matrix - SE3 or Sim3 (monocular). Solving this matrix is ​​the core of VO, and the idea of ​​solving is divided into feature-based ideas and direct methods that do not use features.</p><p>The feature-based approach is currently the mainstream of VO. For two images, the feature of the image is extracted first, and then the camera’s transformation matrix is ​​calculated according to the feature matching of the two graphs. The most commonly used are point features, such as Harris Corner, SIFT, SURF, ORB. If you use an RGBD camera, you can directly estimate the motion of the camera with feature points of known depth. Given a set of feature points and the pairing relationship between them, the camera’s attitude is solved, which is called the Perspective-N-Point. PnP can be solved by nonlinear optimization, and the positional relationship between two frames is obtained.</p><p>The method of not using the feature for VO is called the direct method. It directly finds the relative motion between the frames using all the pixels of the image in a pose estimation equation.<br>For example, in RGBD SLAM, the transformation matrix between two point clouds can be solved using ICP (Iterative Closest Point). For monocular SLAM, we can match the pixels between two images, or match the image with a global model. A typical example of a direct method is SVO and LSD-SLAM. They used the direct method in monocular SLAM, and achieved good results. Tthe direct function of the VO requires more computation, and the camera’s image acquisition rate also has a higher demand.</p><h1 id="Back-end"><a href="#Back-end" class="headerlink" title="Back-end"></a>Back-end</h1><p>After estimating the inter-frame motion, theoretically the robot’s trajectory can be obtained. However, in vision odometer and ordinary odometer, there is the cumulative error which will lead to drift. So in the SLAM, we will put the relative motion between the frame into a process known as the back-end processing.</p><p>After the 21st century, SLAM researchers began to introduce Bundle Adjustment into SLAM by drawing on the methods in the SfM (Structure from Motion) problem. The optimization method and the filter method are fundamentally different. It is not an iterative process, but rather the information in all past frames. By optimizing, the error is evenly divided into each observation. Bundle Adjustment in SLAM is often given in the form of graphs, so researchers are also known as Graph Optimization. Graph optimization can visually represent optimization problems, can be used to quickly solve the sparse algebra, the expression loop is also very convenient, and thus become the mainstream of today’s vision SLAM optimization method.</p><p>In traditional, we will optimize the results of the front end using filters like EKF, UKF, PF, or optimization theory like TORO, G2O for tree or graph optimization. And finally get the optimal pose estimation.</p><p>After the 21st century, SLAM researchers began to introduce Bundle Adjustment into SLAM by drawing on the methods in the SfM (Structure from Motion) problem, which is fundamentally different with the optimization method and the filter method. It is not an iterative process, but rather considering the information in all past frames. The error is evenly divided into each observation by optimizing. Bundle Adjustment in SLAM is often given in the form of graphs, which is also known as Graph Optimization. Graph optimization can visually represent optimization problems, can be solved quickly using sparse algebra, and the expression for loop is also very convenient, and thus it becomes the mainstream of vision SLAM optimization method.</p><h1 id="Mapping"><a href="#Mapping" class="headerlink" title="Mapping"></a>Mapping</h1><ul><li>Raster Map </li><li>Topology Map </li><li>2D / 3D</li></ul><h1 id="Loop-Closure-Detection"><a href="#Loop-Closure-Detection" class="headerlink" title="Loop Closure Detection"></a>Loop Closure Detection</h1><p>Loop closure detection refers to the ability of the robot to identify the scene that has been reached. If the test is successful, the cumulative error can be significantly reduced. Loop closure detection is an algorithm for detecting the similarity of observed data. For vision SLAM, most systems use the model of Bag of Words. The Bag of Words clusters the visual features (SIFT, SURF, etc.) of the image, and then creates a dictionary to find what “word” is included in each figure.<br>There are also researchers using the traditional pattern recognition method, regarding the Loop closure detection as a classification problem, training classifier for classification.<br>The difficulty of Loop closure detection is that the wrong test results may make the bad map. These errors are divided into two categories: </p><ol><li>False Positive, also known as Perceptual Aliasing, which refers to the fact that different scenes are treated as the same; </li><li>False Negative, also known as Perceptual Variability, refers to the fact that the same scene regarded as two. </li></ol><p>A good Loop closure detection algorithm should be able to detect the true loops as much as possible. Researchers often use the accuracy rate - recall rate curve to evaluate a test algorithm.</p><h1 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h1><p>the next direction of SLAM technology development:</p><ul><li>Multi-sensor fusion</li><li>optimized data association and loopback detection</li><li>integration with front-end heterogeneous processors</li><li>improved robustness and relocation accuracy</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SLAM - Simultaneous Localization and Mapping&lt;br&gt;高翔, 张涛, 颜沁睿, 刘毅, 视觉SLAM十四讲：从理论到实践, 电子工业出版社, 2017&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="slam" scheme="http://www.shong.win/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>Line Detection Methods</title>
    <link href="http://www.shong.win/2017/03/23/line-detection/"/>
    <id>http://www.shong.win/2017/03/23/line-detection/</id>
    <published>2017-03-23T15:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>车道检测<br><a id="more"></a></p><h1 id="Line-Detection-Method"><a href="#Line-Detection-Method" class="headerlink" title="Line Detection Method"></a>Line Detection Method</h1><h1 id="categories"><a href="#categories" class="headerlink" title="categories"></a>categories</h1><ol><li><p>LIDAR with laser - similar with the principles of radar, using laser to detect the location and the speed of the target, with higher cost.</p></li><li><p>Image processing with stereo camera, with lower cost and  low accuracy.</p></li></ol><p>both of them need co-work with the 3D-map.</p><p><img src="https://pic1.zhimg.com/b69cfa2069e4c611d7ff430bf844df8c_b.png" alt="automotive"></p><p>Then I do some summary of the Image Processing for lane detection.</p><h1 id="The-methods-based-on-the-camera"><a href="#The-methods-based-on-the-camera" class="headerlink" title="The methods based on the camera."></a>The methods based on the camera.</h1><h2 id="Recognition-method-based-on-Feature"><a href="#Recognition-method-based-on-Feature" class="headerlink" title="Recognition method based on Feature"></a>Recognition method based on Feature</h2><p>The method of feature recognition is based on the combination of some features of road boundary image (color feature, gray gradient feature, etc.). Feature based recognition methods can be divided into two categories: recognition based on gray features and color features. At present, most of the methods are based on gray features.</p><ol><li>Recognition method based on gray feature<br>The recognition method based on gray feature is the recognition of road boundary and lane mark from the sequence gray images in front of the vehicle.</li></ol><ul><li><p>FLPs (A set of the feature lines in pairs)<br>  use the linear feature of lane edge in urban traffic environment as the main basis for road detection to establish a linear road model as closely as possible. The algorithm of linear parameters of the road model based on using a Calman filter tracking program detects each FLPs, estimate the model parameters from the road all in FLPs by annealing diagnosis technology, then using a Calman filter frame tracking road boundary, so as to get the test results more accurate and more stable.</p></li><li><p>FOE (the focus of expansion)<br>  using the road marking features about the focus of expansion and when the road boundary exists most boundary points towards the FOE are located on the road boundary, then put forward a new method to identify various shapes of lanes recognition method based on the boundary of the road. Firstly, select a low threshold to obtain an edge image by zero crossing technique,  to get the position and direction of the edge point, to denoise the edge features of image, we use the feature of FOE. At the end, with histogram analysis to denoise image, Hough transform is used to get two lines, and the center of the lines is the lane mark. The method is robust to illumination change and shadow, but it is difficult to identify the curve Lane.</p></li><li>Detection and tracking of road using spline curve.<br> The algorithm uses the two-dimensional model of the road, will obtain the center line of the road by using a priori knowledge about the two lane mark. Then combined with the road model selected, we will detect the center line of the road to the control point for the sampling curve. Finally detect the lanes. The method uses CHEVP algorithm (Canny/Hough Estimation of Vanishing Points) to determine the location of the original B-Snake curve, and then use the MMSE (Minimum Mean Square Error) algorithm to update the control points of B-Snake curve. The advantage of this method is that it has good robustness to the noise, shadow and illumination changes in the process of image acquisition.   </li></ul><ol start="2"><li>Recognition method based on color feature</li></ol><p>The main disadvantage of using 3D model is that the model is relatively simple or the noise intensity is relatively large, and the recognition accuracy is low.</p><h2 id="Recognition-method-based-on-model"><a href="#Recognition-method-based-on-model" class="headerlink" title="Recognition method based on model"></a>Recognition method based on model</h2><ol><li>Recognition method based on the identification of 2D road image model</li></ol><ol start="2"><li>Recognition method based on the identification of 3D road image model</li></ol><h1 id="Recognition-method-based-on-the-fusion-of-camera-and-other-sensor"><a href="#Recognition-method-based-on-the-fusion-of-camera-and-other-sensor" class="headerlink" title="Recognition method based on the fusion of camera and other sensor"></a>Recognition method based on the fusion of camera and other sensor</h1><ul><li><p>laser</p><p>The laser sensor is used to collect the image to obtain the distance information of the vehicle, and a color camera and a laser sensor are combined to know the road surface and locate the road boundary</p></li></ul><ul><li><p>Multi sensor fusion technology for detection of roadside, walls and fences. </p><p>Use the wired scanning laser rangefinder, vehicle state estimator, cameras, laser scanners to detect and track the vehicle around a range of objects, to eliminate the wrong perception of the surrounding environment.</p></li></ul><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>At present, there are still some technical difficulties in the identification of road boundary and lane markings based on vision.</p><ol><li>effective road boundary and lane mark identification under the condition of illumination change and shadow occlusion.</li><li>detection of road boundary and lane markings in urban traffic environment. At present, there is little attention on the perception of road traffic in the city environment, because the traffic environment of city is not very clear, casual and geometric features of road curvature is harsh, and many vulnerable road users, it becomes more complex. The use of machine vision technology to achieve a better road perception becomes particularly difficulty.</li><li>identification of road boundary and lane markings in adverse weather conditions. In the harsh climate, road lane identification and contrast is relatively small, at the same time, due to the sharp reduction of the horizon, it will lead to some Lane parameter estimation error, so that a lot of lane recognition system in harsh driving conditions (rain and snow) will encounter problems.</li><li>identification of unstructured road.</li></ol><p>In recent years, it has been shown that the method of road boundary and lane mark recognition based on vision has the following trends:</p><ol><li>by adding special hardware to speed up the process of image processing and the use of efficient and fast recognition algorithm to improve the real-time processing of the system.</li><li>the fusion of multiple sensors is used to increase the perception of the surrounding environment.</li><li>the comprehensive utilization of multi feature information of the road image, strengthen the research on the algorithm of road boundary and lane identification (such as to improve the adaptability of the model or assume a higher road model), to broaden the scope of object recognition, improve the adaptability of the system.</li><li>identification of multiple lanes. When the vehicle is in a lane changing operation, it is necessary to identify the multiple lanes in front of the vehicle to obtain a more accurate estimation of the position of the vehicle. At the same time, multi lane identification is also helpful to identify obstacles in each lane.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;车道检测&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matched field processing - Source localization in correlated noise as an optimum parameter estimation problem</title>
    <link href="http://www.shong.win/2017/03/15/graduate-project/Matched-field-processing-Source-localization-in-correlated-noise-as-an-optimum-parameter-estimation-problem/"/>
    <id>http://www.shong.win/2017/03/15/graduate-project/Matched-field-processing-Source-localization-in-correlated-noise-as-an-optimum-parameter-estimation-problem/</id>
    <published>2017-03-15T06:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>匹配场处理：相关噪声下声源定位的最佳参数估计问题<br><a id="more"></a><br>匹配场处理是一种根据发射场的点声源信号在声音波导介质的传播下，定位距离和深度的参数估计技术。信号在加性噪声和空间相干噪声的干扰下，在弱信噪比的环境下，这种参数估计需要将信号和噪声的空间结构研究得十分透彻，我们通过海洋环境模型化为水平分层的信道，并在垂直方向有着不同的声速。所以波方程描述了信号和噪声的底层结构，并通过产生复制场处理信号。在参数估计过程中用到了两种阵列处理方法：</p><ol><li>线性交叉相关器（Bartlett）</li><li>最大似然估计（MLM）</li></ol><p>并通过产生的克拉默饶结界来评估潜在的最佳分辨率。这两种处理方法和结界下限说明了消歧义的能力不仅由信噪比决定，也由信号和噪声的相关空间结构决定。使用两种方法的模拟和在浅层水和北极环境下使用信噪场的全波模型说明了海洋环境对定位性能的耦合。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>海洋点声源的匹配场处理的三维定位是传统一维平面波波束形成的泛化。平面波波束形成器通过在全方向上将所测量的场与平面波“匹配”来引导阵列，这由内部数组元素和平面波在各个方向的相位的共轭和相加，对各个阵列元素的输出进行加权来实现。广义匹配场波束形成器将阵列上的测量场与所有源场信号的拷贝进行匹配。该场独特的空间结构允许对范围和深度进行定位。在模态概念中，复杂模态干涉模式是源位置的函数。并且该模式可以被”匹配“。或者声波导的折射特性也可以产生能被匹配的本征声线的方向模式。这个原理说明匹配的分辨率和唯一性取决于波导。参考文献 3 已经在理想的无噪声环境中进行了广泛的数值模拟，采用了抛物线方程式的新型逆向或反向传播应用，以在无噪声环境中直接模拟线性匹配场处理器的输出。 也可以考虑通过理想化的离散模态结构或各向同性平面波分布来描述噪声的处理。</p><p>这里我们考虑一个影响信号和噪声场的海洋环境，特别适用于垂直阵列和非平面波。对于分层海洋，源信号的拷贝不是平面波，而是描述海洋环境声学的波动方程中所有可能的点源位置在所有阵列元素中的解。这种计算密集的处理过程由于噪声的存在而进一步复杂化，噪声本身取决于包含了声源信息的信号所在的同一个传播环境。信号源定位问题是通过使用匹配场处理从相关噪声中提取包含信号源信息的信号来进行（范围和深度的）参数估计问题。实质上，我们通过尝试在阵列网格上构造“无限”个前向解决方案来解决这个逆问题，并根据表示结构化噪声背景所定义的度量，找出这些解决方案中的哪一个能更好地匹配观测信号。<br>我们使用全波模型的信号和噪声场来研究声源定位的阵列处理，因此我们不受模态或射线近似的限制。海洋被建模为在垂直方向上声速任意的水平分层的波导。因此，波动方程不仅描述了信号和噪声场的底层结构，而且还描述了通过用于加权阵列元件的复制场的信号处理。具体来说，在本文中我们：<br>（1）引入将声波导的约束结合到阵列数据的匹配场处理的相关噪声模型;<br>（2）对具有相关噪声的波导中的匹配场处理的最大似然法（MLM）推广到定向频谱估计方法;<br>（3）应用Cramer-Rao 形式，通过在分层海洋环境中的阵列从相关噪声中提取的信号，建立起声源定位可用分辨率的下限（附录A）;</p><p>（4）证明了在适当的约束范围内，Cramer-Rao下界的降低与经典光学/衍射理论衍生的分辨率成正比的分辨率准则;</p><p>（5）在ML方法中研究拒绝旁瓣（歧义模糊）的信号和噪声强度和结构标准;</p><p>（6）使用浅水和北极海洋环境作为传统和MLM处理的匹配场阵列处理的全波数值模拟的例子;</p><p>（7）证明在垂直方向上的平面波MLM波束成形本质上是与大多数被视为噪声的信号不匹配的结果并被拒绝;</p><p>（8）研究频率平均匹配场处理，并证明它加强了中心叶并平均了旁瓣（歧义模糊）。</p><p>三维匹配场结果的复杂度说明它们最方便以颜色轮廓图的形式呈现。此外，级别的颜色编码这个附加的维度更能清楚地显示波束形成算法中的降噪的差异。</p><h1 id="海洋环境"><a href="#海洋环境" class="headerlink" title="海洋环境"></a>海洋环境</h1><p>图1描绘了分层海洋中的声源和包含N个元件的阵列。海洋作为波导，声源的信号可以被认为是可以在距离和深度上分离的波动方程的点声源的解。点声源的解由在图1中以离散光谱表示的浅掠射角长距离传播，和更垂直的被表示为声源场的连续光谱部分组成。当声源处的水深大于接收阵列的水深时，场的离散部分成为了主成分。另一方面，对于起源于和分布在海洋表面上的噪声源，例如风产生的噪声，也将会显著影响连续光谱。被认为是干扰的离散信号，取决于它们到阵列的距离，将被视为感兴趣的声源而被定位，也将组成声源场。因此，使用全波方法对来自离散源和分布式噪声的声场进行建模是最安全的。设 $ \phi$ 为单位化的速度势（或比例压力）满足频域波动方程；我们有</p><p>（1） </p><p>脚标s：声源坐标</p><p>$\delta^2$ ：对二维向量参数进行筛选的增量函数。</p><p>由于只有水平分层，所以我们能通过分解 $\phi$ 为一系列平面波来分解方程。</p><p>（2）</p><p>因此深度依赖的格林Green函数 $g(k,z,z_s)$ 满足</p><p>（3）</p><p>这个信号解由离散部分和连续部分组成，对于不是特别靠近阵列的信号，只有解的离散部分对阵列起作用。阵列中第i个元素的目标信号压力由下式给出</p><p>（4）</p><p>而信号定位由公式（2）和公式（3）求得，$b$ 是一个均方源级别为 $\sigma^2$ 的随机复数变量，并且</p><p>（5）</p><p>（6）</p><p>随机复数变量 $b$ 包含均匀分布的随机相位和源信号的瑞利幅度。 因此，信号处理和性能界限基于非相干源信号模型，或者不包括先验源相位信息的信号模型。</p><p>在海洋表面产生的噪声对附近和对远场起作用，所以我们必须用波动方程的离散和连续解来描述它。 这种情况表明，表面生成噪声与信号具有一些重叠性质; 因此，就分层海洋环境而言，考虑带白噪声的平面波束成形的信号处理其实是被误导了。 特别地，直接匹配场处理对应于每个水听器处的独立噪声。对于具有小于波长的传感器间距的水平阵列和更一般的垂直阵列，情况并非如此；因此，噪声的信号性质将引发性能误差。</p><p>真实的海洋噪声分为三种类型：</p><ol><li><p>白噪声，也就是所谓的传感器噪声，它是非相干的，我们用协方差矩阵 $K_W=\sigma^2_W I$ 来描述，$I $ 是单位矩阵。</p></li><li><p>分布式噪声，例如海洋表面产生的噪声，它是相干的，而协方差矩阵$K_C$ 在相同海洋环境下是结构化的，将决定信号的传播。协方差矩阵为</p><p>（7）</p><p>q：表面噪声频谱等级</p><p>$P(k)$ ： 噪声源的空间频谱分布</p><p>g：将信号场和拷贝场代入方程（3）在相同海洋环境下得到的解</p><p>$r_{ij}$ ： 在N元件接收阵列中第i个和第j个元件之间的水平向量</p><p>$z_i$ 和 $z_j$：对应深度</p><p>$z’$ ：噪声源层所在的深度</p><p>$K_C$ ： 表面产生的噪声的“交叉光谱密度”，是其空间相干性的量度。对于分层波导，$K_C$ 在水平方向上是空间均匀的（仅取决于 $r_{ij}$ ）。 然而，它在垂直方向上是不均匀的，因为它取决于阵列元素的绝对深度位置。 这种不均匀性通常不被纳入标准信号处理中，其中算法利用噪声协方差矩阵是均匀的特性，或者更具体地说是它叫Toeplitz常对角矩阵。</p></li><li><p>可解的离散噪声源可以被看作具有与方程（6）相同的协方差的信号。</p><p>接收阵列噪声的总协方差是</p><p>（8）</p><p>$K_D$ ： 离散噪声源的协方差，其结构为方程（6）的信号矩阵形式。接下来可视为MLM处理器的干扰噪声。</p><p>结合对信号和噪声场的讨论，总协方差矩阵中的元素为</p><p>（9）</p></li></ol><p>II.  常规匹配场波束成形</p><p>频域上传统的匹配场波束成形（比如Bartlett）通过对阵列元素的输出进行加权并对所有元素进行求和来执行</p><p>（10）</p><p>+： 复数转置</p><p>a： 结合了所有信号坐标的参数向量，包含距离r和深度z</p><p>N：阵列元件个数，i代表N元件阵列的第i个元件</p><p>$p(a_T)$ ： N维压力向量，向量元素 $p_i(a_T)$ 为参数为 $a_T$ 的信号源的阵列</p><p>$a_T$ ：信号源定位的实参</p><p>$w(\hat{a})$ ：阵列元素的输出的权重向量，取决于额拷贝场和可能的噪声环境</p><p>$\hat{a}$ ：我们通过构建匹配场 $w(a)$ 得到信号源定位的估计（扫描）参数</p><p>在平面波束成形中，归一化规则是波束形成器在导向方向（$\hat{a}$）上的响应是一致的。 这里的归一化因为该场的不均匀性而不太明显，所以也存在一些可能的惯例约定俗成。 我们采用归一化，加权或投影向量都是单位长度，即，</p><p>（11）</p><p>$\Phi (a)$ ： 方程（2）中，$(r,z)=(r_i,z_i)$ 表示$a$中的一个信号源，方程的解的第i个元素</p><p>对于均值为0和协方差为K的场，Bartlett波束成形输出功率的期望值可以被协作二次项形式</p><p>（12）</p><p>将公式（3）代入上式，</p><p>（13）</p><p>扫描公式（13）中的第二个项 $\hat{a}$ ，导致了复杂的模式，即信号场的歧义模糊函数，平面波束模式的泛化。而第一个项有两个部分：1. 来自传感器和分布式噪声的平滑背景，比如类别1和类别2。2. 来自离散干扰源叠加的结构化背景。</p><p>常规波束形成器对 $\hat{a}$ 信号和空间相关噪声的响应可以用正交函数展开式来表示，即空间 Karhunen-Loeve 表达式。令 $(\Phi_n , \sigma^2_n)$ 为噪声相关部分的特征向量和特征值（不要与声波导问题，即固有振动的特征值和特征向量混肴）为</p><p>（14）</p><p>直接使用正交展开式可以得到</p><p>（15）</p><p>其中 $\rho (\hat{a}) = w^+ (\hat{a}) \Psi_n $ ，是加权矢量和第n个特征向量之间的归一化内积；</p><p>$\rho (a^T,\hat{a})=w^+(a_T)w(\hat{a})$ 是Bucker，Heitmeyer等人和Tappert等人定义的信号和拷贝场之间的模糊函数</p><p>$\sigma^2_R=|\Phi (a_T)|^2 \sigma^2_S$ 是接收阵列上的平均信号源级别</p><p>前一篇关于匹配场处理的文章中，无噪声响应显然具有模糊度结构; 然而，请注意，归一化的尺度将作为接收信号的电平级别。 另一个重要的观察是，当信号的拷贝在具有大特征值的噪声特征向量上投影时，Bartlett波束形成器响应将增加，并有可能遮挡信号分量。 由于正交分解受到波导的环境特性的强烈影响，所以由于似噪声信号的遮挡，在范围/深度平面使用常规线性处理将携带假旁瓣。</p><p>对于常规平面波束成形的情况，$w$ 是一系列平面波的集合，$\hat{a}$ 是具有传播角（look direction）的自由场波动方程的解，$w$ 正比于 $\Phi(\hat{a})$。对于这种平面波束成形，只能推断出角度方向，但不能确定绝对位置，而对于有界的分层介质，即使因为波导场的“多径”结构，这些角度也仅在垂直方向上的信号源定位提高有限的信息 。 这表明在波导型环境中，我们使用通过研究对第i个数组元素的拷贝加权场，用波动方程的解集来描述环境：$w_i(\hat{a})=w(r_i,z_i)$ ，代入公式（11）：</p><p>（16）</p><p>$\hat{R}$  和 $\hat{H}$ ：分别是信号源在距离和深度上的估计。</p><p>当我们用公式（12）描绘波束形成器的输出时，定位的参数估计是 $(R,H)$ ，我们在图（2）上部和下部的左侧部分显示出了真实信号源位置 $(R,H)$ 在达到峰值。然而，轮廓图中会有其他不明确的最大值。波束形成过程的这些全局最大值对应于常规平面波束形成器的旁瓣，并且取决于阵列独特地对场的复杂结构进行采样的能力。因此，我们研究了权重向量 $w$ 的其他选择，其依赖于波动方程解和使旁瓣效应最小化的噪声场。</p><h1 id="最大似然波束成形"><a href="#最大似然波束成形" class="headerlink" title="最大似然波束成形"></a>最大似然波束成形</h1><p>最大似然方法（MLM）是一种高分辨率的阵列处理算法，它通过自适应的构造权重（或者导向向量）来产生对噪声场的最小均方响应，同时保持信号场处理增益的单位约束，参数为 $\hat{a}$ 。在大量地震勘测中的开发和水下声学中的文献中提到了平面波模型。它也被成为最小方差失真处理器（MVDP），也有许多简洁的衍生算法。令$K$为阵列之间的场的协方差，$w_{ML}$ 为权重向量，来达到函数的最小值</p><p>（17）</p><p>第一项是阵列的均方输出，第二项通过拉格朗日乘数 $\alpha$ 包含处理单位增益约束，变量的常微分产生最佳权重向量</p><p>（18）</p><p>$w(\hat{a})$ 源于公式（12），波动方程的解向量源于公式（16），且带一个信号源参数 $\hat{a}$ 。在最优权重向量的情况下，通过用公式（11）中二次项形式的$w_{ML}$替代$w$达到最小均方输出，并得到矩阵代数</p><p>（19）</p><p>$S_{ML}$：最大似然频谱估计器</p><p>定义的动机是增益约束强制信号场中的任何分量都不会失真，而来自其他方向的分量被认为是噪声，通过阵列时将沿着阵列几何形状和场的结构最一致的方式衰减。在实践中，整体协方差K不可得到，必须从实验数据估计。 实质上，这将使处理过程适应环境。 协方差矩阵的估计涉及多维谱估计中的许多问题，这超出了本文的范围。而本文的目的是，假设从上述建模中可以得到整体协方差K，评估匹配场处理的性能。</p><p>公式（18）中的权重向量$w_{ML}(\hat{a})$ 使用场协方差$K$的性质和期望信号场$\Phi(\hat{a})$ 的结构来适应于各个观测参数。已经介绍过没有引入具有传播角和/或场的均匀性的平面波的假设的方法。其前提是噪声和信号都是在相同环境中传播。</p><p>在此前介绍过的MLM方法扩展的结果涉及到了使用非平面波$\Phi$的解和协方差为K的全波模型，其中对噪声和信号的环境是一致的。我们的重点在于简历一致的模型，而并不是任何MLM公式的泛化，比如公式（19）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;匹配场处理：相关噪声下声源定位的最佳参数估计问题&lt;br&gt;
    
    </summary>
    
      <category term="math" scheme="http://www.shong.win/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://www.shong.win/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>富士山下/爱情转移/春夏秋冬</title>
    <link href="http://www.shong.win/2017/03/12/fujisan/"/>
    <id>http://www.shong.win/2017/03/12/fujisan/</id>
    <published>2017-03-12T03:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=34187525&auto=1&height=66"></iframe><br><a id="more"></a></p><table><thead><tr><th style="text-align:center">富士山下</th><th style="text-align:center">爱情转移</th><th style="text-align:center">春夏秋冬</th><th style="text-align:center">日语翻译</th></tr></thead><tbody><tr><td style="text-align:center"><strong>陳奕迅</strong></td><td style="text-align:center"><strong>陈奕迅</strong></td><td style="text-align:center"><strong>荒木 毬菜</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">拦路雨偏似雪花</td><td style="text-align:center">徘徊过多少橱窗</td><td style="text-align:center">どれほど にぶさに</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">饮泣的你冻吗</td><td style="text-align:center">住过多少旅馆</td><td style="text-align:center">まけてたら</td><td style="text-align:center">要有多迟钝</td></tr><tr><td style="text-align:center">这风褛我给你磨到有襟花</td><td style="text-align:center">才会觉得分离也并不冤枉</td><td style="text-align:center">なみだにきづかないのか</td><td style="text-align:center">才不会察觉到掉下的眼泪</td></tr><tr><td style="text-align:center">连掉了迹也不怕</td><td style="text-align:center">感情是用来浏览</td><td style="text-align:center">どれほどプライド</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">怎么始终牵挂</td><td style="text-align:center">还是用来珍藏</td><td style="text-align:center">きずつけたら</td><td style="text-align:center">要有多受伤</td></tr><tr><td style="text-align:center">苦心选中今天想车你回家</td><td style="text-align:center">好让日子天天都过的难忘</td><td style="text-align:center">ほめことばにどうじないのか</td><td style="text-align:center">才不会被赞美的话所动心</td></tr><tr><td style="text-align:center">原谅我不再送花</td><td style="text-align:center">熬过了多久患难</td><td style="text-align:center">まっすぐなまま</td><td style="text-align:center">多亏了那么多弯路</td></tr><tr><td style="text-align:center">伤口应要结疤</td><td style="text-align:center">湿了多少眼眶</td><td style="text-align:center">すすめてたら</td><td style="text-align:center">最终才能与你</td></tr><tr><td style="text-align:center">花瓣铺满心里坟场才害怕</td><td style="text-align:center">才能知道伤感是爱的遗产</td><td style="text-align:center">そのてとははぐれていた</td><td style="text-align:center">走到了一起</td></tr><tr><td style="text-align:center">如若你非我不嫁</td><td style="text-align:center">流浪几张双人床</td><td style="text-align:center">あたたかいほお</td><td style="text-align:center">抚摸着你温暖的脸颊上</td></tr><tr><td style="text-align:center">彼此终必火化</td><td style="text-align:center">换过几次信仰</td><td style="text-align:center">ちいさなホクロ</td><td style="text-align:center">那颗小小的痣</td></tr><tr><td style="text-align:center">一生一世等一天需要代价</td><td style="text-align:center">才让戒指义无返顾的交换</td><td style="text-align:center">「もうすこしこのままでいよう」</td><td style="text-align:center">“再继续这样呆一会儿吧”</td></tr><tr><td style="text-align:center">谁都只得那双手</td><td style="text-align:center">把一个人的温暖</td><td style="text-align:center">まゆをひそめて</td><td style="text-align:center">你皱着眉头</td></tr><tr><td style="text-align:center">靠拥抱亦难任你拥有</td><td style="text-align:center">转移到另一个的胸膛</td><td style="text-align:center">きたいするあしたは</td><td style="text-align:center">所期待的明天</td></tr><tr><td style="text-align:center">要拥有必先懂失去怎接受</td><td style="text-align:center">让上次犯的错反省出梦想</td><td style="text-align:center">ぼくのいばしょがあるのか</td><td style="text-align:center">是否有我的容身之所呢</td></tr><tr><td style="text-align:center">曾沿着雪路浪游</td><td style="text-align:center">每个人都是这样</td><td style="text-align:center">タバコのけむり</td><td style="text-align:center">香烟的烟雾</td></tr><tr><td style="text-align:center">为何为好事泪流</td><td style="text-align:center">享受过提心吊胆</td><td style="text-align:center">ふたりのあいだに</td><td style="text-align:center">弥漫在我们中间</td></tr><tr><td style="text-align:center">谁能凭爱意要富士山私有</td><td style="text-align:center">才拒绝做爱情代罪的羔羊</td><td style="text-align:center">うそもみぬけないほどに</td><td style="text-align:center">看不清你善意的谎言</td></tr><tr><td style="text-align:center">何不把悲哀感觉</td><td style="text-align:center">回忆是抓不到的月光</td><td style="text-align:center">うしろからだきしめて</td><td style="text-align:center">假装从后面抱住</td></tr><tr><td style="text-align:center">假设是来自你虚构</td><td style="text-align:center">握紧就变黑暗</td><td style="text-align:center">「あいしてる」</td><td style="text-align:center">说声“我爱你”</td></tr><tr><td style="text-align:center">试管里找不到它染污眼眸</td><td style="text-align:center">等虚假的背影消失于晴朗</td><td style="text-align:center">かぜからきみをまもった</td><td style="text-align:center">只为了保护你不被风吹到</td></tr><tr><td style="text-align:center">前尘硬化像石头</td><td style="text-align:center">阳光在身上流转</td><td style="text-align:center">きおくおぼろげ</td><td style="text-align:center">逐渐模糊的记忆</td></tr><tr><td style="text-align:center">随缘地抛下便逃走</td><td style="text-align:center">等所有业障被原谅</td><td style="text-align:center">かみのにおいだけで</td><td style="text-align:center">凭着你头发的味道</td></tr><tr><td style="text-align:center">我绝不罕有</td><td style="text-align:center">爱情不停站</td><td style="text-align:center">「わたしも」と</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">往街里绕过一周</td><td style="text-align:center">想开往地老天荒</td><td style="text-align:center">かえしてくれる</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">我便化乌有</td><td style="text-align:center">需要多勇敢</td><td style="text-align:center">としんじてた</td><td style="text-align:center">坚信你会回应“我也爱你”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">情人节不要说穿</td><td style="text-align:center">烛光照亮了晚餐</td><td style="text-align:center">どれほどながい</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">只敢抚你发端</td><td style="text-align:center">照不出个答案</td><td style="text-align:center">しんごうまつと</td><td style="text-align:center">要等多长的信号灯</td></tr><tr><td style="text-align:center">这种姿态可会令你更心酸</td><td style="text-align:center">恋爱不是温馨的请客吃饭</td><td style="text-align:center">いそぎあしがとまれるの</td><td style="text-align:center">急促的脚步才能减缓</td></tr><tr><td style="text-align:center">留在汽车里取暖</td><td style="text-align:center">床单上铺满花瓣</td><td style="text-align:center">どれほどくらい</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">应该怎么规劝</td><td style="text-align:center">拥抱让他成长</td><td style="text-align:center">へやにいると</td><td style="text-align:center">要在多黑的屋子里</td></tr><tr><td style="text-align:center">怎么可以将手腕忍痛划损</td><td style="text-align:center">太拥挤就开到了别的土壤</td><td style="text-align:center">なくしたものがひかるの</td><td style="text-align:center">失去的东西才会亮光</td></tr><tr><td style="text-align:center">人活到几岁算短</td><td style="text-align:center">感情需要人接班</td><td style="text-align:center">まっすぐなまま</td><td style="text-align:center">多亏了那么多弯路</td></tr><tr><td style="text-align:center">失恋只有更短</td><td style="text-align:center">接近换来期望</td><td style="text-align:center">すすめてたら</td><td style="text-align:center">最终才能与你</td></tr><tr><td style="text-align:center">归家需要几里路谁能预算</td><td style="text-align:center">期望带来失望的恶性循环</td><td style="text-align:center">そのてとははぐれていた</td><td style="text-align:center">走到了一起</td></tr><tr><td style="text-align:center">忘掉我跟你恩怨</td><td style="text-align:center">短暂的总是浪漫</td><td style="text-align:center">このおもいでを</td><td style="text-align:center">现在的我只想</td></tr><tr><td style="text-align:center">樱花开了几转</td><td style="text-align:center">漫长总会不满</td><td style="text-align:center">のこしたいと</td><td style="text-align:center">留下这仅有的记忆</td></tr><tr><td style="text-align:center">东京之旅一早比一世遥远</td><td style="text-align:center">烧完美好青春换一个老伴</td><td style="text-align:center">しゅんかしゅうとうがとまるころ</td><td style="text-align:center">直到春夏秋冬停止那天</td></tr><tr><td style="text-align:center">谁都只得那双手</td><td style="text-align:center">把一个人的温暖</td><td style="text-align:center">まゆをひそめて</td><td style="text-align:center">你皱着眉头</td></tr><tr><td style="text-align:center">靠拥抱亦难任你拥有</td><td style="text-align:center">转移到另一个的胸膛</td><td style="text-align:center">きたいするあしたは</td><td style="text-align:center">所期待的明天</td></tr><tr><td style="text-align:center">要拥有必先懂失去怎接受</td><td style="text-align:center">让上次犯的错反省出梦想</td><td style="text-align:center">ぼくのいばしょがあるのか</td><td style="text-align:center">是否有我的容身之所呢</td></tr><tr><td style="text-align:center">曾沿着雪路浪游</td><td style="text-align:center">每个人都是这样</td><td style="text-align:center">タバコのけむり</td><td style="text-align:center">香烟的烟雾</td></tr><tr><td style="text-align:center">为何为好事泪流</td><td style="text-align:center">享受过提心吊胆</td><td style="text-align:center">ふたりのあいだに</td><td style="text-align:center">弥漫在我们中间</td></tr><tr><td style="text-align:center">谁能凭爱意要富士山私有</td><td style="text-align:center">才拒绝做爱情代罪的羔羊</td><td style="text-align:center">うそもみぬけないほどに</td><td style="text-align:center">看不清你善意的谎言</td></tr><tr><td style="text-align:center">何不把悲哀感觉</td><td style="text-align:center">回忆是抓不到的月光</td><td style="text-align:center">うしろからだきしめて</td><td style="text-align:center">假装从后面抱住</td></tr><tr><td style="text-align:center">假设是来自你虚构</td><td style="text-align:center">握紧就变黑暗</td><td style="text-align:center">「あいしてる」</td><td style="text-align:center">说声“我爱你”</td></tr><tr><td style="text-align:center">试管里找不到它染污眼眸</td><td style="text-align:center">等虚假的背影消失于晴朗</td><td style="text-align:center">かぜからきみをまもった</td><td style="text-align:center">只为了保护你不被风吹到</td></tr><tr><td style="text-align:center">前尘硬化像石头</td><td style="text-align:center">阳光在身上流转</td><td style="text-align:center">きおくおぼろげ</td><td style="text-align:center">逐渐模糊的记忆</td></tr><tr><td style="text-align:center">随缘地抛下便逃走</td><td style="text-align:center">等所有业障被原谅</td><td style="text-align:center">いきするこえだけで</td><td style="text-align:center">却凭着你呼吸的声音</td></tr><tr><td style="text-align:center">我绝不罕有</td><td style="text-align:center">爱情不停站</td><td style="text-align:center">「わたしも」と</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">往街里绕过一周</td><td style="text-align:center">想开往地老天荒</td><td style="text-align:center">かえしてくれる</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">我便化乌有</td><td style="text-align:center">需要多勇敢</td><td style="text-align:center">としんじてた</td><td style="text-align:center">坚信你会回应“我也爱你”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">谁都只得那双手</td><td style="text-align:center">把一个人的温暖</td><td style="text-align:center">もういちどあの</td><td style="text-align:center">如果再回到第一次与你</td></tr><tr><td style="text-align:center">靠拥抱亦难任你拥有</td><td style="text-align:center">转移到另一个的胸膛</td><td style="text-align:center">めがあうひもどれたら</td><td style="text-align:center">眼神相对的那天</td></tr><tr><td style="text-align:center">要拥有必先懂失去怎接受</td><td style="text-align:center">让上次犯的错反省出梦想</td><td style="text-align:center">わらってくれたのだろうか</td><td style="text-align:center">你还会对我微笑吗？</td></tr><tr><td style="text-align:center">曾沿着雪路浪游</td><td style="text-align:center">每个人都是这样</td><td style="text-align:center">ゆめもげんじつも</td><td style="text-align:center">如今已经分不清</td></tr><tr><td style="text-align:center">为何为好事泪流</td><td style="text-align:center">享受过提心吊胆</td><td style="text-align:center">わからないまま</td><td style="text-align:center">梦境与现实的我</td></tr><tr><td style="text-align:center">谁能凭爱意要富士山私有</td><td style="text-align:center">才拒绝做爱情代罪的羔羊</td><td style="text-align:center">またひとりあのきのした</td><td style="text-align:center">又一个人步履到那棵树下</td></tr><tr><td style="text-align:center">何不把悲哀感觉</td><td style="text-align:center">回忆是抓不到的月光</td><td style="text-align:center">うしろでだれか</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">假设是来自你虚构</td><td style="text-align:center">握紧就变黑暗</td><td style="text-align:center">そっとしたほはば</td><td style="text-align:center">身后不知是谁的步伐</td></tr><tr><td style="text-align:center">试管里找不到它染污眼眸</td><td style="text-align:center">等虚假的背影消失于晴朗</td><td style="text-align:center">おもいだせないやさしさ</td><td style="text-align:center">带着似曾相识的温柔</td></tr><tr><td style="text-align:center">前尘硬化像石头</td><td style="text-align:center">阳光在身上流转</td><td style="text-align:center">ほほえんでくれる</td><td style="text-align:center">没有半点疑虑</td></tr><tr><td style="text-align:center">随缘地抛下便逃走</td><td style="text-align:center">等所有业障被原谅</td><td style="text-align:center">あせることなく</td><td style="text-align:center">她面露微笑</td></tr><tr><td style="text-align:center">我绝不罕有</td><td style="text-align:center">爱情不停站</td><td style="text-align:center">「かえろう」と</td><td style="text-align:center">说着“回家吧”</td></tr><tr><td style="text-align:center">往街里绕过一周</td><td style="text-align:center">想开往地老天荒</td><td style="text-align:center">なぜかこのてを</td><td style="text-align:center">然后不知道为什么</td></tr><tr><td style="text-align:center">我便化乌有</td><td style="text-align:center">需要多勇敢</td><td style="text-align:center">にぎりしめた</td><td style="text-align:center">牵住我的手</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">你还嫌不够</td><td style="text-align:center">你不要失望</td><td style="text-align:center">めのしたの</td><td style="text-align:center">只是在她左眼下</td></tr><tr><td style="text-align:center">我把这陈年风褛</td><td style="text-align:center">荡气回肠是为了</td><td style="text-align:center">ちいさなホクロ</td><td style="text-align:center">那颗小小的痣</td></tr><tr><td style="text-align:center">送赠你解咒</td><td style="text-align:center">最美的平凡</td><td style="text-align:center">はどこかで</td><td style="text-align:center">好像在那里见过</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=34187525&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>The effect of source amplitude and phase in matched field source localization</title>
    <link href="http://www.shong.win/2017/02/24/graduate-project/The-effect-of-source-amplitude-and-phase-in-matched-field-source-localization/"/>
    <id>http://www.shong.win/2017/02/24/graduate-project/The-effect-of-source-amplitude-and-phase-in-matched-field-source-localization/</id>
    <published>2017-02-24T05:12:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>匹配场源定位中源振幅和相位的影响<br><a id="more"></a><br>传统的匹配场处理通常应用于定位未知振幅和相位的声源，信号源的频谱信息能够用最大似然估计和 Bartlett处理器来估计。本文提出了信号源频谱的最大后验概率，定位声源和噪声的方差估计，吉布斯采样后计算所有参数的联合后验概率分布。</p><p>匹配场：源信号和接收信号进行匹配<br>Bartlett 和线性处理器经常用MFP，计算源信号和接收信号的内积。</p><p>本文采用Bartlett 处理器，和简单的高斯白噪声环境。</p><p><a href="http://asa.scitation.org/doi/full/10.1121/1.2166927" target="_blank" rel="noopener">The effect of source amplitude and phase in matched field source localization</a></p><h1 id="最大似然估计"><a href="#最大似然估计" class="headerlink" title="最大似然估计"></a>最大似然估计</h1><p>$X=\alpha G(r,z_s)+W$</p><p>$G(r,z_s)$ :通过求解亥姆霍兹方程得到格林函数</p><p>振幅为1，相位为0，频率f，</p><p>传播环境完全已知，除了确定G的范围range-r和深度depth-z_s</p><p>$\alpha$：包含信号在传输是的振幅和相位的复数</p><p>W：符合均值为0，对角空间协方差矩阵为$\Sigma = 2\sigma ^2 I_{L\times L } ​$的高斯分布的加性噪声</p><p>接收到的信号能够用高斯分布来处理，所以选了高斯噪声环境</p><p>$p(X|r,z_s,\alpha) = \frac{1}{\sigma^{2L}(2\pi)^L} exp(-\frac{1}{2\sigma^2}(X-\alpha G(r,z_s))^*(X-\alpha G(r,z_s)))$</p><p>以上提供了参数$\alpha,r,z_s$的最大似然函数</p><p>$l(r,z_s,\alpha,\sigma^2|X)\propto  exp(-\frac{1}{2\sigma^2}(X-\alpha G(r,z_s))^*(X-\alpha G(r,z_s)))$</p><p>后两个为多余参数，在MFP中已知</p><p>$\hat{\alpha}=\frac{G^*(r,z_s)X}{||G(r,z_s)||^2}$</p><p>$l(r,z_s|X)\propto  (||X||^2-\frac{G^<em>XX^</em>G}{||G||^2})^{-L}$</p><p>$l_{r,z_s}$ 的最大化等价于对等式</p><p>$P(r,z_s)=\frac{G^<em>XX^</em>G}{||G||^2}$</p><p>最大化</p><p>P即是模糊表面</p><h1 id="MFP中吉布斯采样"><a href="#MFP中吉布斯采样" class="headerlink" title="MFP中吉布斯采样"></a>MFP中吉布斯采样</h1><p>通过这些参数的最大后验分布来进行估计</p><p>假设q向量包含了所有未知参数，最大后验分布为</p><p>$p(q|X)=\frac{l(q|X)p(q)}{p(X)}$</p><p>$p(q)$ 包含了所有先验知识</p><p>$l(q|X)$ 为参数的似然估计</p><p>$q=[r, z_s,\alpha, \sigma^2]^T$ </p><p>$\alpha$ 已知，其先验分布$p(\alpha) = C , -\infty &lt; Re(\alpha), Im(\alpha)&lt;\infty $</p><p>这个等式不包含瑞利参数，比瑞利Rayleigh 更普通</p><p>对于未知的源的range和depth，我们使用在区间$[r_1,r_2], [z_{s1},z_{s2}]$ 的先验概率</p><p>$p(r)=\frac{1}{r_2-r_1}$</p><p>$p(z_s)=\frac{1}{z_{s1}-z_{s2} }$</p><p>$\sigma$ 使用无信息的先验分布</p><p>$p(\sigma^2)=\frac{1}{\sigma}, 0&lt;\sigma&lt;\infty$</p><p>综上</p><p>$p(r,z_s,\alpha,\sigma^2|X)=M \frac{1}{\sigma^{2L+2} } exp((-\frac{1}{2\sigma^2})(X-\alpha G)^*(X-\alpha G)) $</p><p>M为常数</p><p>边缘分布</p><p>$p(r,z_s,|X)   =  \int _{\alpha } \int _{\sigma^2}p(r,z_s,\alpha,\sigma^2|X)d\sigma^2 d \alpha $</p><h1 id="源定位和源谱估计的吉布斯采样"><a href="#源定位和源谱估计的吉布斯采样" class="headerlink" title="源定位和源谱估计的吉布斯采样"></a>源定位和源谱估计的吉布斯采样</h1><p>通过吉布斯采样估计$p(r,z_s|X)$ ，无需计算$p(r,z_s,\alpha,\sigma^2|X)$ 和积分</p><p>固定其他参数，$p(\alpha |r,z_s,\sigma^2 ,X)=M_\alpha exp((-\frac{||G||^2}{2\sigma^2})(\alpha -G^<em>X / ||G||^2)^</em> (\alpha - G^*X / ||G||^2))$</p><p>$M_\alpha$：常数</p><p>$\alpha$：均值为 $G^*X / ||G||^2$，方差为$2\sigma^2 / ||G||^2$的正态分布</p><p>方差的条件后验估计为反$\chi^2$分布</p><p>$p(σ^2∣r,z_s,α,X))=\frac{1}{σ^{2L+2} }exp(−\frac{1}{2σ^2}∥X−αG(r,z_s)∥^2)$</p><p>推导出</p><p>$p(r,z_s∣α,σ^2,X))=K\ exp(−\frac{1}{2σ^2}∥X−αG(r,z_s)∥^2),$</p><p>K是常数</p><p>吉布斯采样起始于对未知参数的一系列随机初始化，然后根据一份样本确定range和depth的条件分布，然后求$\alpha$的高斯边缘后验分布，然后确定根据反$\chi^2$分布确定方差，然后进行迭代。</p><h1 id="性能评估"><a href="#性能评估" class="headerlink" title="性能评估"></a>性能评估</h1><p>使用合成数据进行模拟，24个水听器，600Hz的频率，信噪比为7-14dB，Bartlett处理器和本文提出的处理器进行对比，range为2km，depth为34m，实验接受的正确结果范围为range 1.8-2.2km，depth 28-40m，range搜索范围为0-5km，间隔0.02km；depth搜索范围为0-72m，间隔2m。</p><p><img src="http://asa.scitation.org/na101/home/literatum/publisher/aip/journals/content/jas/2006/jas.2006.119.issue-3/1.2166927/production/images/large/1.2166927.figures.f1.jpeg" alt=""></p><p>计算后验概率和最大似然估计</p><p><img src="http://asa.scitation.org/na101/home/literatum/publisher/aip/journals/content/jas/2006/jas.2006.119.issue-3/1.2166927/production/images/large/1.2166927.figures.f2.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;匹配场源定位中源振幅和相位的影响&lt;br&gt;
    
    </summary>
    
      <category term="math" scheme="http://www.shong.win/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://www.shong.win/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Active wideband higher-order raypath separation in multipath environment</title>
    <link href="http://www.shong.win/2017/02/21/graduate-project/Active-wideband-higher-order-raypath-separation-in-multipath-environment/"/>
    <id>http://www.shong.win/2017/02/21/graduate-project/Active-wideband-higher-order-raypath-separation-in-multipath-environment/</id>
    <published>2017-02-21T12:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p> 多路径环境下的有源宽带高阶信号分离</p><p>在线发布时间: January 2017</p><p>收稿时间: November 2016</p><a id="more"></a><p> <a href="http://asa.scitation.org/doi/10.1121/1.4972570" target="_blank" rel="noopener">Active wideband higher-order raypath separation in multipath environment</a></p><p><a href="http://asa.scitation.org/author/Jiang%252C+Longyu" target="_blank" rel="noopener">Longyu Jiang</a> 和  <a href="http://asa.scitation.org/author/Hong%252C+Yaping" target="_blank" rel="noopener">Yaping Hong</a> </p><ul><li>The Laboratory of Image Science and Technology, <a href="http://asa.scitation.org/action/doSearch?field1=Affiliation&amp;text1=Southeast%20University&amp;field2=AllField&amp;text2=&amp;Ppub=&amp;Ppub=&amp;AfterYear=&amp;BeforeYear=&amp;access=" target="_blank" rel="noopener">Southeast University</a>, Nanjing 210096, China    jly#seu.edu.cn, hongyaping#126.com</li></ul><p><a href="http://asa.scitation.org/author/Roux%252C+Philippe" target="_blank" rel="noopener">Philippe Roux</a></p><ul><li><a href="http://asa.scitation.org/action/doSearch?field1=Affiliation&amp;text1=Institut%20des%20Sciences%20de%20la%20Terre,%20Universit%C3%A9%20Joseph%20Fourier&amp;field2=AllField&amp;text2=&amp;Ppub=&amp;Ppub=&amp;AfterYear=&amp;BeforeYear=&amp;access=" target="_blank" rel="noopener">Institut des Sciences de la Terre, Université Joseph Fourier</a>, Centre National de la Recherche Scientifique, 1381 Rue de la Piscine, Saint-Martin d’Hères, France  philippe.roux#ujf-grenoble.fr</li></ul><p><a href="http://asa.scitation.org/author/Wu%252C+Jiasong" target="_blank" rel="noopener">Jiasong Wu</a> 和 <a href="http://asa.scitation.org/author/Shu%252C+Huazhong" target="_blank" rel="noopener">Huazhong Shu</a>b)</p><ul><li>The Laboratory of Image Science and Technology, <a href="http://asa.scitation.org/action/doSearch?field1=Affiliation&amp;text1=Southeast%20University&amp;field2=AllField&amp;text2=&amp;Ppub=&amp;Ppub=&amp;AfterYear=&amp;BeforeYear=&amp;access=" target="_blank" rel="noopener">Southeast University</a>, Nanjing 210096, China jswu#seu.edu.cn , shu.list#seu.edu.cn</li></ul><p>《美国声学学会杂志》<strong>141</strong>, EL38 (2017); doi: <a href="http://dx.doi.org/10.1121/1.4972570" target="_blank" rel="noopener">http://dx.doi.org/10.1121/1.4972570</a></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>多路径的信号传播是由水柱表面和底部的反射和折射引起的。</p><p>在这项研究中，提出了有源宽带高阶分离算法，是一种在海洋传统环境中能够在角度到时间域中分离有色噪声和信号。和传统算法进行对比，它更精确，实验的数值结果显示噪声抑制性能更佳，甚至不需要假设接收阵传感器数量不必大于发射阵信号源个数。</p><p>声场传播环境，声波的速度，水面和海底的反射和折射，导致了多路径的信号，这就像是一种特殊的透镜。在许多有源声纳或者海洋声层析的应用中，多路径分离或者定位是必要的。前人已经提出了许多分离多路径的方法。</p><p>根据时间反演原理，Roux等人发明了双波束形成算法（DBF），并且此算法用两个垂直发射/接收阵列来进行实验，能通过模拟两阵列之间的波束形成来识别单个信号的发射角/接收角/到达时间。</p><p>为了进一步提高波束形成算法的低分辨率性能，Jiang等人在浅海海洋声层析成像的背景下，推导出了一种高精度的平滑多信号分类主动大带算法（<strong>Smoothing-MUSICAL</strong>）方法。</p><p><strong>平滑MUSICAL</strong>是以信号的频谱长度为先验信息，将MUSIC算法扩展到MUSICAL中的宽带情形。此外smoothing-MUSICAL算法还结合了有源多信号分类大带（MUSICAL）算法和空间频率平滑技术，来分离在到达方向（DOA）-时空域上相干或完全相关的路径。实验结果显示这种算法能显著的改善分离性能，产生的杂质更少。</p><p>但是Roux和Jiang的算法都是基于以下假设：</p><ul><li>接收信号受到高斯白噪声影响，而不是存在于海洋环境中的有色噪声。</li><li>高斯信号的信息在一阶和二阶，非高斯过程包含的信息在大于二阶的高阶累积量中。</li></ul><p>所以有必要考虑如何分离在彩色噪声环境下的信号。</p><p>理论上高斯信号的所有信息都包含在一阶和二阶，非高斯过程的信号的信息在高阶累积量中。应用了高阶累积量而不是二阶的技术主要是得将彩色噪声纳入阵列处理技术的考虑范围。在过去的二十年间，越来越多的人着力于将高阶累计量应用到定位问题上。</p><p>Chen 和 Lin 开发了一种四阶算法，其性能在高斯噪声和非高斯噪声环境中比MUSICAL 算法都更佳。</p><p>Dogan 和 Mendel ， 率先阐释累积量是如何增加传感器阵列的有效孔径的，并在加性彩色噪声的不敏感性研究下有显著突破。</p><p>Gonen 等人利用 四阶累计量进行方向定位，来研究比接收器列传感器数量还多的信号的分解。</p><p>近来提出了使用2q阶(q&gt;2)的一系列阵列处理算法，能分辨率，模型误差的鲁棒性，和传感器阵列接收到的信号的数量。理论上随着q增加，分辨率增加，传感器阵列处理能力增加。</p><p>但其局限是其使用了窄带数据假设。因为在多径环境下，接收到的信号可能是宽带。</p><p>Bourennane 和 Bendjama 提出了宽带下使用高阶累积量的定位算法，但他只是用了高斯白噪声下的到达方向来进行定位声源，并且在近距离的阵列间信号定位失败。</p><p>在这课题中我们提出了一种海洋声层析环境下高阶有源宽带MUSIC算法，有源意味着发射的信号是已知的，频谱在我们提出的高分辨率算法中是先验信息。它能利用信号的到达时间作为附加参数，在到达方向-时间域上分离有噪声干扰的相近信号。</p><p>这篇论文的结构如下，第二段中我们研究高阶高分辨率有源算法，第三段中提出我们的仿真结果，第四段是结论和未来展望。</p><h1 id="高阶高分辨率有源算法"><a href="#高阶高分辨率有源算法" class="headerlink" title="高阶高分辨率有源算法"></a>高阶高分辨率有源算法</h1><p>如第一段中我们提到的，Jiang等人提出了一种海洋声层析环境下新型高分辨率阵列处理的smoothing-MUSICAL算法，能够分离完全相干的路径，算法建立两个假设下</p><ul><li>加性噪声是高斯白噪声</li><li>传感器数量N大于信号路径数P</li></ul><p>为了克服以上假设，我们在这段里将介绍一种四阶  smoothing-MUSICAL 算法</p><h2 id="信号模型"><a href="#信号模型" class="headerlink" title="信号模型"></a>信号模型</h2><p>P个信号路径到达M个传感器组成的垂直接收阵列，第m个传感器接收到的信号在时间域上表示为</p><p>（1）： $x_m(t)=\Sigma_{p=1}^P a_p e(t−\tau_{m,p})+n_m(t)$</p><p>其中</p><p>​    $e(t)$ ：信号源发射的信号</p><p>​    $a_p$：第m个水听器接受到的第p个路径的信号振幅</p><p>​    $n_m(t)$　：第m个传感器接收到的加性噪声</p><p>​    $\tau_{m,p} $:第p个信号在基准传感器和第m个传感器之间的传播延迟delay ，传播延迟满足此式：（2）：$\tau_{m,p} = T_p +t_m(\theta_p)　$</p><p>​    $T_p$ ：第p个信号路径在基准传感器上的到达时间</p><p>​    $t_m(\theta_p)$ ：基准传感器和第m个传感器之间的延迟delay ，是信号路径到达方向（角度）的函数</p><p>在频域上，（1）式可写为：</p><p>（3）： $x_m(ν)=\Sigma_{p=1}^P a_p e(ν) exp(−jν(Ψ_p+(m−1)Φ_p))+n_m(ν)$</p><p>其中 </p><p>​    $Ψ_p=2πT_p  $</p><p>​    $Φ_p=2πt_m(θ_p)=2π\frac{d sin θ_p}{c}$</p><p>​    d ： 邻近传感器之间的距离</p><p>​    c ：  声传播速度</p><p>​    $e(ν)$ ： 在频率为ν 时信号的振幅 （每个信号的振幅$a_p$ 是随机和不相关的）</p><h2 id="算法的原理"><a href="#算法的原理" class="headerlink" title="算法的原理"></a>算法的原理</h2><h3 id="宽带频谱矩阵估计"><a href="#宽带频谱矩阵估计" class="headerlink" title="宽带频谱矩阵估计"></a>宽带频谱矩阵估计</h3><p>我们假设信号使用的频率区间是F，（3）式在频率域可写作宽带频谱矩阵表达式</p><p>（4）： $x_g=H · A +n_g$</p><p>​    $x_g=[x^+(ν_1),x^+(ν_2),…,x^+(ν_F)]^+$  中各项 $x(ν_i)=[x_1(ν_i),x_2(ν_i),…,x_M(ν_i)]^+ $</p><p>​    x_g ：M × F  维大小的矩阵，包含所有传感器接收到的频率信息</p><p>​     $n_g=[n^+(ν_1),n^+(ν_2),…,n^+(ν_F)]^+$ 中各项$ n(ν_i)=[n_1(ν_i),n_2(ν_i),…,n_M(ν_i)]^+$ ：</p><p>​    $n_g$ ：$M × F$ 维大小的矩阵，包含每个频域的噪声信息</p><p>​     $A=[a_1,a_2,…,a_P]^+$ ：是P个信号的方向组成的向量</p><p>​    $H=[h_1,h_2,…,h_P]^+$  中各项 $h_p=[e(ν_i)e^{−2iπν_1τ_1p},…,e(ν_F)e^{−2iπν_Fτ_Mp}]^+ $</p><p>​    H： (<em>M</em> × <em>F</em>, <em>P</em>)维的矩阵，其项 $e^{−2iπν_1τ_1p}$ 描述了源信号和接收信号的传递函数</p><p>​    +：转置</p><p>接收信号的频谱矩阵可表示为：</p><p>（5）： $C=E{(x_g⊗x^∗_g)(x_g⊗x^∗_g)^H}−E{(x_g⊗x^∗_g)}E{(x_g⊗x*∗_g)^H}−E{(x_g x^H_g)}⊗E{(x_g x^H_g)^∗}$</p><p>其中</p><p>​    ⊗​ ： 克罗内克积（Kronecker product）作用于矩阵（可视为二阶张量），是张量积的特殊形式。而张量积作用于张量。</p><p>但是不同路径的信号是完全相干的，因为不同路径的信号是一系列的信号的延迟和副本。所以矩阵 ​ 缺秩。这将降低分离算法的性能，因为特征结构的高分辨率是基于和信号的导向矢量正交的最小特征值的特征向量。所以在 Jiang 的基础上，提出了一种空间-频率平滑处理来分离相干信号。</p><p>这种空间平滑算法首先将由M个传感器组成的 阵列[1,2,3,……,M]​</p><p>划分成$[1,…,k_s-1],[k_s,k_s+1,……,k_s+M-2k_s],[M-k_s+1,……,M]$；</p><p>​索引为k_s 的子天线区域包括了 $[k_s;k_s+1;k_s+M-2K_s]$ 范围内的传感器。 </p><p>频率平滑也将带宽在频域上划分成 $[1,…,k_F-1],[k_F,k_F+1,……,k_F+M-2k_F],[M-k_F+1,……,M]$ ； </p><p>​索引为k_f 的子带区域包括了 $[k_f;k_f+1;k_f+F-2K_f]$ 范围内的频率。 </p><p>​所以单个可观测矩阵x 可知，产生的一系列的按$\underline{x}_{ks,kfx}$递归的矩阵 $K=(2K_f+1)(2K_s+1)$ 可用下图描述</p><p><img src="http://asa.scitation.org/na101/home/literatum/publisher/aip/journals/content/jas/2017/jas.2017.141.issue-1/1.4972570/20170111/images/medium/1.4972570.figures.online.f1.jpg" alt="img"></p><p>（Fig.1）子天线区域的结构示例</p><p>​    (a) 空间平滑因子K_s = 1​时，M=7个传感器阵列被划分成3组；</p><p>​    (b) K_f=2​ 时频率F=10被划分成5组</p><p>使用平滑技术，我们能用下式估计宽带的频谱矩阵</p><p>（6）：$ \hat{C} =E{(\underline{x}_{g,k_s},k_f⊗\underline{x}^∗_{g,k_s,k_f})(\underline{x}_{g,k_s,k_f}⊗\underline{x}^∗_{g,k_s,k_f})^H}−E{(\underline{x}_{g,k_s,k_f}⊗\underline{x}^∗_{g,k_s,k_f})}E{(\underline{x}_{g,k_s,k_f}⊗\underline{x}^∗_{g,k_s,k_f})^H}−E{(\underline{x}_{g,k_s,k_f} \underline{x}^H_{g,k_s,k_f})}⊗E{(\underline{x}_{g,k_s,k_f} \underline{x}^H_{g,k_s,k_f})^∗}$</p><p>频谱矩阵估计的秩等于K，为了达到有效的分离噪声和信号，必须使K大于P</p><h2 id="信号子空间估计"><a href="#信号子空间估计" class="headerlink" title="信号子空间估计"></a>信号子空间估计</h2><p>假设信号和噪声不相干（加性噪声），我们得到下列关系式</p><p>（7）： \hat{C}=\hat{C}_s+\hat{C}_n</p><p>频谱矩阵具有 埃尔米特对称（Hermitian symmetry）  </p><p>（8）： \hat{C}=\hat{C}_*​</p><p>埃尔米特对称：n阶复方阵A的对称单元互为共轭，即A的共轭转置矩阵等于它本身，则A是埃尔米特矩阵(Hermitian Matrix)。显然埃尔米特矩阵是实对称阵的推广。</p><p>能够被特征向量分解(EVD)为</p><p>（9）： ​</p><p>其中</p><p>​    Λ=diag(λ<em>1,…,λ</em>{ {(MF)}^2})​ 是特征值组成的对角矩阵</p><p>​    <strong>U</strong>： (MF)^2×(2K_s+1)(2K_f+1)​大小的矩阵，其列向量 μ<em>1,…,μ</em>{ {(MF)}^2}​ 是\hat{C}​的正交特征向量。</p><p>特征向量μ_i​对应特征值\lambda_i​，特征值从大到小排序</p><p>（10）： λ_1≥λ<em>2⋯≥λ</em>{ {(MF)}^2}​</p><h2 id="噪声子空间上的投影"><a href="#噪声子空间上的投影" class="headerlink" title="噪声子空间上的投影"></a>噪声子空间上的投影</h2><p>在上面特征值分解的基础上，信号子空间是由 \hat{C}​ 的前 p^2​ 个特征向量张成的特征子空间。而它的补集，噪声子空间，由倒数的(MF)^2-p^2​ 的正交的特征向量张成的特征子空间。这些正交向量在噪声子空间上投影可估计为</p><p>（11）： \hat{C}_n=\Sigma _{k=p^2+1}^{(MF)^2}μ_k μ^∗_k​</p><p>最后，算法包含了下列函数的最值</p><p>（12）： P(θ,T)=\frac{1}{a(θ,T)^∗\hat{C}_n a(θ,T)}​</p><p>其中 </p><p>​    a(θ,T)​ ：基于宽带的四阶累积量的导向矢量，是b(θ,T)​ 和b(θ,T) ^ ∗​ 的克罗内克积 a(θ,T)=b(θ,T)⊗b(θ,T) ^ ∗​</p><p>​    b(θ,T)= \begin{pmatrix}{e(ν_1)e^{−2iπν_1T}d^+(ν<em>1,θ)} \…\\ {e(νF</em>)e^{−2iπν_FT}d^+(ν_F,θ)}\end{pmatrix}​</p><p>​    d(ν_i,θ)=[1,e^{−2iπν_iτ_{1,2}(θ)},…,e^{−2iπν_iτ_{1,M−1}(θ)}]^+​</p><p>​    d(ν_i,θ)​ 在窄带分析中是经典的导向矢量，包含了传感器和信号给定频率\theta​之间的相位延迟信息</p><h1 id="仿真"><a href="#仿真" class="headerlink" title="仿真"></a>仿真</h1><p>在这一段中国，我们提供了仿真来演示我们算法在非高斯有色噪声环境下，相干信号源的方向定位性能。仿真中使用到了等距的垂直阵列，传感器各向同性，传感器间相距半波长，发射信号的频率带包含了红色噪声（红色噪声指功率密度随着频率增加而递减的随机噪声）。仿真实验使用了一个单次观测。我们的仿真结果将和二阶、四阶统计量在同环境下进行对比。</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>使用了由六个传感器组成的垂直阵列的例子</p><p>在这一段我们将考虑想近的信号情况进行分离，我们假设五束信号到达了由六个水听器组成的等距接收阵列。选取第一个水听器作基准传感器</p><p>如图2(a) 2(b)显示，是smoothing-MUSICAL和四阶-smoothing-MUSICAL算法的分离结果，频率从3000-500Hz中取了25个值，信号是等功率的。每个点都对应着一个信号，黑色的十字点意为信号的理论值。对应这个点最大振幅的估计值在图2(b)中显示。</p><p>从左到右从上到下为第1，2，3，4，5个信号。而第2个和第4个信号到达后，图2(a)将比图2(b)更容易的侦测第5个信号的到达。而且五个信号在图2(b)中更分明，2(a)中有少许杂质污染波束形成结果。杂质仅由仿真时的有限采样，信号和噪声子空间的不完全分离造成。这种由于使用高阶累积量，对有色噪声和白噪声共有的抑制能力，已经在参考文献<a href="http://asa.scitation.org/doi/10.1121/1.4972570#" target="_blank" rel="noopener">Ref. 5</a>中得到了证明。到达方向角DOA由此式计算 ​</p><p><img src="http://asa.scitation.org/na101/home/literatum/publisher/aip/journals/content/jas/2017/jas.2017.141.issue-1/1.4972570/20170111/images/medium/1.4972570.figures.online.f2.jpg" alt="img"></p><p>(Fig 2.)性能分析（黑色十字点意为信号理论值）</p><p>​    (a)smoothing-MUSICAL算法的分离结果</p><p>​    (b)四阶-smoothing0MUSICAL算法的分离结果</p><p>​    (c)信噪比为20dB时，到达时间的均方根误差，a线代表四阶smoothing-MUSICAL算法，b线代表smoothing-MUSICAL算法</p><p>​    (d)信噪比为20dB时，延迟的均方根误差，a线代表四阶smoothing-MUSICAL算法，b线代表smoothing-MUSICAL算法</p><p>​    (e)信噪比为20dB时，smoothing-MUSICAL算法的延迟的均方根误差和带宽的关系，由10次独立实验测得</p><p>​    (f)信噪比为20dB时，四阶-smoothing-MUSICAL算法的延迟的均方根误差和带宽的关系，由10次独立实验测得</p><h2 id="性能定量分析"><a href="#性能定量分析" class="headerlink" title="性能定量分析"></a>性能定量分析</h2><p>在这一段，我们将用定量分析来佐证提出的算法的性能。对于已知方法，经常使用均方根误差来量化相关参数估计的特性。我们定义了到达时间​ ， p信号的延迟​ 的量化均方根误差</p><p>​    ​ ：独立实验的次数</p><p>​    ​ ： ​的估计</p><p>​    ​ ：​  的估计</p><p>假设一束信号 ​ , ​ ，被一个由四个各向同性的传感器组成的阵列接收到，传感器相距半波长。</p><p>图2(c)和2(d)显示了结果的均方根误差。相比于smoothing-MUSICAL算法，四阶smoothing-MUSICAL有更好的性能，尤其是到达时间的均方根误差更小。</p><p>在上面两段的讨论基础上，我们能得出结果，提出的算法不仅能得到更精确的探测结果，相比于smoothing-MUSICAL算法有着更好的噪声抑制能力。</p><h3 id="带宽对性能的影响"><a href="#带宽对性能的影响" class="headerlink" title="带宽对性能的影响"></a>带宽对性能的影响</h3><p>为了研究宽带对提出算法的性能的影响，我们假设一个高斯窗口正弦脉冲（中心频率为100Hz）被一个由四个各向同性传感器组成均匀线性分布阵列接收到，传感器相距半周长。到达时间和延迟是0.075 和 0.015 s。在此假设下，图2(e) 和 2(f) 用十个独立实验得到了带宽和均方根误差的关系。带宽大于0.2时，到达时间和延迟的均方根误差都在可接受范围内。</p><h2 id="比信号更多的传感器"><a href="#比信号更多的传感器" class="headerlink" title="比信号更多的传感器"></a>比信号更多的传感器</h2><p>在这一段，我们将对提出算法用比到达信号少的接收器来进行测试。我们假设有五束信号被四个传感器组成的垂直阵列接收到，信号是等功率的。信号的频率从3000-5000Hz中取了25个值，并且按信噪比等于20dB掺杂了红色噪声。</p><p>图3(a) 和 3(b) 为smoothing-MUSICAL算法和四阶-smoothing-MUSICAL算法的探测结果。黑色十字点位信号在角度到时间域的理论预期值。图3(a)中有两束信号丢失，而3(b)中5束信号泾渭分明。此外，这两种算法在峰值处存在偏差，而用我们的算法的偏差更小。到达方向角用此式计算 ​</p><p>这一段的模拟结果说明了当接收器阵列传感器个数小于信号数时，四阶-smoothing-MUSICAL算法仍能分离信号，而smoothing-MUSICAL算法不能探测到所有信号。传感器阵列的有效孔径能够因四阶累积量扩展到​ </p><p><img src="http://asa.scitation.org/na101/home/literatum/publisher/aip/journals/content/jas/2017/jas.2017.141.issue-1/1.4972570/20170111/images/medium/1.4972570.figures.online.f3.jpg" alt="img"></p><p>图3 结果对比</p><p>​    五束信号到达四个传感器组成的垂直阵列，信噪比为20dB，黑色十字为信号理论值。</p><p>​    (a)使用smoothing-MUSICAL算法的分离结果</p><p>​    (b)使用四阶-smoothing-MUSICAL算法的分离结果</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>在这项研究中，我们开发了一种基于高阶统计量的有源的宽带MUSIC算法。模拟结果显示，在有色噪声存在的情况下，相比二阶算法，能更精确的分离信号和噪声。另一个优势是使用比接收到信号数少的传感器阵列，性能也更好。未来，将研究发射器阵列到接收器阵列间此算法的扩展，而非仅对接收到的信号和接收器阵列的研究。</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p>感谢</p><p>​    中国国家自然科学基金会(Nos. 61401085 和 31400842)</p><p>​    中国科学院国家重点声学实验室(No. SKLA201604)</p><p>​    归侨学者科研基金会</p><p>对此项目的支持</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li>P. Roux , B. D. Cornuelle , W. Kuperman , and W. Hodgkiss , “ The structure of raylike arrivals in a shallow-water waveguide,” J. Acoust. Soc. Am. <strong>124</strong>(6), 3430–3439 (2008). <a href="https://doi.org/10.1121/1.2996330" target="_blank" rel="noopener">https://doi.org/10.1121/1.2996330</a> <strong>Google Scholar</strong>, <strong>Scitation</strong></li><li>L. Jiang , F. Aulanier , G. Le Touze , B. Nicolas , and J. Mars , “Raypath separation with high resolution processing,” in <em>IEEE OCEANS 2011</em>, Spain (2011), pp. 1–5. <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>Y. H. Chen and Y. S. Lin , “ Doa estimation by fourth-order cumulants in unknown noise environments,” in <em>IEEE International Conference on Acoustics, Speech, and Signal Processing, 1993. ICASSP-93</em> (1993), Vol. <strong>4</strong>, pp. 296–299. <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>M. C. Dogan and J. M. Mendel , “ Applications of cumulants to array processing. I. Aperture extension and array calibration,” IEEE Trans. Signal Processing <strong>43</strong>(5), 1200–1216 (1995). <a href="https://doi.org/10.1109/78.382404" target="_blank" rel="noopener">https://doi.org/10.1109/78.382404</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>M. C. Dougan and J. M. Mendel , “ Applications of cumulants to array processing. II. Non-Gaussian noise suppression,” IEEE Trans. Signal Processing <strong>43</strong>(7), 1663–1676 (1995). <a href="https://doi.org/10.1109/78.398727" target="_blank" rel="noopener">https://doi.org/10.1109/78.398727</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>E. Gonen , J. M. Mendel , and M. C. Dogan , “ Applications of cumulants to array processing. iv. direction finding in coherent signals case,” IEEE Trans. Signal Processing <strong>45</strong>(9), 2265–2276 (1997). <a href="https://doi.org/10.1109/78.622949" target="_blank" rel="noopener">https://doi.org/10.1109/78.622949</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>P. Chevalier , A. Ferreol , and L. Albera , “ High-resolution direction finding from higher order statistics: The 2q-music algorithm,” IEEE Trans. Signal Processing <strong>54</strong>(8), 2986–2997 (2006). <a href="https://doi.org/10.1109/TSP.2006.877661" target="_blank" rel="noopener">https://doi.org/10.1109/TSP.2006.877661</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>G. Birot , L. Albera , and P. Chevalier , “ Sequential high-resolution direction finding from higher order statistics,” IEEE Trans. Signal Processing <strong>58</strong>(8), 4144–4155 (2010). <a href="https://doi.org/10.1109/TSP.2010.2049569" target="_blank" rel="noopener">https://doi.org/10.1109/TSP.2010.2049569</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>P. Pal and P. Vaidyanathan , “ Multiple level nested array: An efficient geometry for 2<em>q</em>th order cumulant based array processing,” IEEE Trans. Signal Processing <strong>60</strong>(3), 1253–1269 (2012). <a href="https://doi.org/10.1109/TSP.2011.2178410" target="_blank" rel="noopener">https://doi.org/10.1109/TSP.2011.2178410</a> <strong>Google Scholar</strong>, <strong>CrossRef</strong></li><li>S. Bourennane and A. Bendjama , “ Locating wide band acoustic sources using higher order statistics,” Appl. Acoust. <strong>63</strong>(3), 235–251 (2002). <a href="https://doi.org/10.1016/S0003-682X(01" target="_blank" rel="noopener">https://doi.org/10.1016/S0003-682X(01)00039-1</a>00039-1)<strong>Google Scholar</strong>, <strong><strong>CrossRef</strong></strong></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 多路径环境下的有源宽带高阶信号分离&lt;/p&gt;
&lt;p&gt;在线发布时间: January 2017&lt;/p&gt;
&lt;p&gt;收稿时间: November 2016&lt;/p&gt;
    
    </summary>
    
      <category term="math" scheme="http://www.shong.win/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://www.shong.win/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>深入理解线性代数</title>
    <link href="http://www.shong.win/2017/02/20/linear-algebra/linear-algebra/"/>
    <id>http://www.shong.win/2017/02/20/linear-algebra/linear-algebra/</id>
    <published>2017-02-20T15:25:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>本文为台交大周志成教授<a href="https://ccjou.wordpress.com/" target="_blank" rel="noopener">ccjou.wordpress.com/</a> 的阅读笔记和总结，感谢周志成教授。</p><p>//TODO<br><a id="more"></a><br><a href="https://ccjou.wordpress.com/%E9%96%B1%E8%AE%80%E5%B0%8E%E5%BC%95/%E5%BC%B7%E6%89%93%E6%8E%A8%E8%96%A6%E6%96%87%E7%AB%A0/" target="_blank" rel="noopener">強打推薦文章</a></p><p><a href="https://ccjou.wordpress.com/%E5%B0%88%E9%A1%8C%E6%8E%A2%E7%A9%B6/" target="_blank" rel="noopener">专题研究</a></p><p><a href="https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F" target="_blank" rel="noopener">LaTeX数学公式</a></p><h1 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a><a href="https://ccjou.wordpress.com/2010/06/18/%E7%B7%9A%E6%80%A7%E4%BB%A3%E6%95%B8%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A0%82%E8%AA%B2-%E7%9F%A9%E9%99%A3%E4%B9%98%E6%B3%95%E7%9A%84%E5%AE%9A%E7%BE%A9/" target="_blank" rel="noopener">矩阵乘法</a></h1><p>$f\begin{pmatrix}x  \y \end{pmatrix} = \begin{pmatrix}ax+by  \cx+dy  \end{pmatrix}$</p><p>$g\begin{pmatrix}x  \y \end{pmatrix} = \begin{pmatrix}px+qy  \rx+sy \end{pmatrix}$</p><p>$h\begin{pmatrix}x  \y \end{pmatrix} =f \begin{pmatrix} \begin{pmatrix}x  \y  \end{pmatrix}  \end{pmatrix}=f \begin{pmatrix} px+qy\ rx+sy  \end{pmatrix} = \begin{pmatrix} a(px+qy)+b(rx+sy) \ c(px+qy)+d(rx+sy)\end{pmatrix}=\begin{pmatrix}(ap+br)x+(aq+bs)y\ (cp+dr)x+(cq+ds)y\end{pmatrix}$</p><p>$F=\begin{bmatrix}a&amp;b\c&amp;d\end{bmatrix}$</p><p>$G=\begin{bmatrix}p&amp;q\r&amp;s\end{bmatrix}$</p><p>$H=\begin{bmatrix}ap+br&amp;aq+bs\cp+dr&amp;cq+ds\end{bmatrix}$</p><p>$F\cdot G=H $</p><p>线性复合映射</p><h1 id="左乘右乘"><a href="#左乘右乘" class="headerlink" title="左乘右乘"></a><a href="https://ccjou.wordpress.com/2010/12/24/%E5%B7%A6%E4%B9%98%E9%82%84%E6%98%AF%E5%8F%B3%E4%B9%98%EF%BC%8C%E9%80%99%E5%B0%B1%E6%98%AF%E5%95%8F%E9%A1%8C%E6%89%80%E5%9C%A8/" target="_blank" rel="noopener">左乘右乘</a></h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为台交大周志成教授&lt;a href=&quot;https://ccjou.wordpress.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ccjou.wordpress.com/&lt;/a&gt; 的阅读笔记和总结，感谢周志成教授。&lt;/p&gt;
&lt;p&gt;//TODO&lt;br&gt;
    
    </summary>
    
      <category term="math" scheme="http://www.shong.win/categories/math/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo 进阶与优化</title>
    <link href="http://www.shong.win/2017/02/20/hexo-advanced/"/>
    <id>http://www.shong.win/2017/02/20/hexo-advanced/</id>
    <published>2017-02-20T06:39:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>在经过申请域名到搭建hexo，以及利用AppVeyor实现持续集成，hexo已经实现了基本的编辑模式，就是我push文章的md文档，然后会自动发布hexo生成的静态网页，只需要git环境。接下来我们对博客进行优化，尝试各种插件。<br><a id="more"></a></p><ul><li><a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">qiniu sync</a><br>同步资源文件到七牛，能加速一些资源。</li></ul><ul><li>SEO 搜索引擎优化<br>我们发现百度和谷歌并没有收录到此博客，于是我们去提交我们的站点</li></ul><p><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">Google搜索引擎提交入口</a></p><p><a href="http://www.baidu.com/search/url_submit.htm" target="_blank" rel="noopener">百度搜索引擎入口</a></p><blockquote><p>提供三种验证方式：文件验证、html标签验证、CNAME验证。<br>　　1.文件验证：您需要下载验证文件，将文件上传至您的服务器，放置于域名根目录下。<br>　　2.html标签验证：将html标签添加至网站首页html代码的<head>标签与</head>标签之间。<br>　　3.CNAME验证：您需要登录域名提供商或托管服务提供商的网站，添加新的DNS记录。<br>验证完成后，我们将会认为您是网站的拥有者。为使您的网站一直保持验证通过的状态，请保留验证的文件、html标签或CNAME记录，我们会去定期检查验证记录。</p></blockquote><p>建议先使用文件验证，只需要从网上下载验证的html，然后同步到git仓库根目录下，就能成功。</p><ul><li>提交sitemap<br>利用生成站点地图的插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li></ul><p>在博客目录的_config.yml中添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>生成xml文件，然后让搜索引擎去访问，地址是</p><p>博客地址/sitemap.xml<br>和 博客地址/baidusitemap.xml</p><p>在这里 你可以进行站长管理 <a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">https://www.google.com/webmasters/tools/home?hl=zh-CN</a></p><p><a href="http://zhanzhang.baidu.com/dashboard/index?site=http://www.shong.win/" target="_blank" rel="noopener">http://zhanzhang.baidu.com/dashboard/index?site=http://www.shong.win/</a></p><ul><li>CDN加速</li></ul><p><a href="https://su.baidu.com/" target="_blank" rel="noopener">百度云加速</a></p><p>更换DNS，或者设置CNAME记录</p><ul><li><p>访问量计数<br><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a><br>在主题的某个js文件下插入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">           &lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;次&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>RSS<br>我记得以前看到一句话，叫做 </p><blockquote><p>支持RSS，是美德。<br>会用的人当然很喜欢RSS。<br>我们可以利用rss生成插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>装完hexo-generator-feed后，将其配置到根目录的_config.yml<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></p><p>然后你便能在 博客地址/atom.xml 看到生成的rss了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在经过申请域名到搭建hexo，以及利用AppVeyor实现持续集成，hexo已经实现了基本的编辑模式，就是我push文章的md文档，然后会自动发布hexo生成的静态网页，只需要git环境。接下来我们对博客进行优化，尝试各种插件。&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="hexo" scheme="http://www.shong.win/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo利用AppVeyor持续集成</title>
    <link href="http://www.shong.win/2017/02/19/hexo-ci/"/>
    <id>http://www.shong.win/2017/02/19/hexo-ci/</id>
    <published>2017-02-19T17:18:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>在第一天尝试了hexo之后，觉得这个静态博客远比不上wordpress托管到主机上的博客方便，因为太依赖本机环境，需要nodejs和git，每次更新后需要自己生成静态页面（虽然也就两行代码的事情），这一点都不cool！<br>并且有一大弊端，当你转移电脑的时候，你需要转移你根目录下很多配置文件和之前的md文件，（图片等资源文件我是利用插件同步到了七牛的，所以资源文件不用担心），这也需要备份！（这个时候我想到了利用我Github Pages的同一个仓库，通过建不同的分支来实现，比如我是username.github.io仓库，master分支为hexo生成同步的web展示页分支，我新建一个hexo分支，就是包含了我根目录下的themes/, source/ ,_config.yml,package.json 然后就能在其他环境下重新搭建hexo）</p><p>为了达到自动更新和在线编辑的目的，我遍寻方法。<br><a id="more"></a></p><ul><li>ide.coding.net</li></ul><blockquote><p>Coding WebIDE 是 Coding 自主研发的在线集成开发环境。用户可以通过 WebIDE 创建项目的工作空间，进行在线开发，调试等操作。与此同时，WebIDE 还提供了可分享的开发环境功能，用户可以保存当前的 Terminal 环境，分享给团队的其他成员。<br><a href="http://garth.im/2015/04/hexo-on-coding-net-webide/" target="_blank" rel="noopener">利用coding WebIDE远程hexo教程</a></p></blockquote><ul><li>绿色版本的git和hexo</li></ul><p>好吧这依旧不酷。。。。就是拷进U盘而已</p><ul><li>百度云/Dropbox同步</li></ul><p>没差，没有运行环境，也需要重新配置。</p><ul><li>利用<a href="www.appveyor.com">AppVeyor</a>远端<strong>持续集成</strong>！</li></ul><p>上一次接触到持续集成这个概念，还是暑假我实习的时候，当时是我们利用公司自己搭的gitlab，利用git提交代码到服务器主机，也有ftp，然后主机自己会把汇集在一起的代码进行检测，检测通过后发布。（当时去查了下持续集成，持续发布等的概念。。。也算是学到的知识吧2333）</p><p>现在！我们也可以利用持续集成，通过push md文档到git，远端自己pull，然后自己hexo，然后push到我的github pages的仓库。（这里我依旧利用了两个分支，master分支发布，hexo分支编辑。）</p><p>当时主要是看到了<a href="https://formulahendry.github.io/2016/12/04/hexo-ci/" target="_blank" rel="noopener">这篇文章</a>，介绍了<a href="www.appveyor.com">AppVeyor</a>，当然后面也有查阅到<a href="http://www.jianshu.com/p/fff7b3384f46" target="_blank" rel="noopener">使用Travis自动部署Hexo</a>，而且AppVeyor是唯一支持Windows的服务商。。（虽然hexo也并没有必须windows？？？）</p><p>下面介绍我使用appveyor趟的坑</p><ol><li>注册登陆AppVeyor<br>free for opensource project</li><li>appveyor新建project<br>Github授权，关联相关repo（更新文档的repo）（我都是在<a href="http://github.com/yvon-shong/blog" target="_blank" rel="noopener">/blog</a> ）<br>设置项目</li></ol><ul><li>setting-general<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/hexo-ci/setting-general.jpg" alt="setting-general.jpg"></li><li>setting-env<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/hexo-ci/setting-env.jpg" alt="setting-env.jpg"></li></ul><ol start="3"><li>配置appveyor.yml到文档repo</li></ol><p>需要利用GitHub Access Token，这玩意儿相当于你的git的密钥，<a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/" target="_blank" rel="noopener">GitHub上生成token的相关官方文档</a></p><p>然后由于你yml是在github上公开的，所以你的token必须利用appveyor的<a href="https://ci.appveyor.com/tools/encrypt" target="_blank" rel="noopener">加密工具进行加密</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">clone_depth:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="attr"> access_token:</span></span><br><span class="line"><span class="attr">    secure:</span> </span><br><span class="line">    <span class="string">【替换成自己加密后的GitHub</span> <span class="string">Access</span> <span class="string">Token】</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">node</span> <span class="bullet">--version</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="bullet">--version</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="bullet">-g</span></span><br><span class="line"><span class="attr">build_script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line"><span class="attr">artifacts:</span></span><br><span class="line"><span class="attr">- path:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">on_success:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">credential.helper</span> <span class="string">store</span></span><br><span class="line"><span class="attr">- ps:</span> <span class="string">Add-Content</span> <span class="string">"$env:USERPROFILE\.git-credentials"</span> <span class="string">"https://$($env:access_token):x-oauth-basic@github.com`n"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.email</span> <span class="string">"%GIT_USER_EMAIL%"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.name</span> <span class="string">"%GIT_USER_NAME%"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="bullet">--depth</span> <span class="number">5</span> <span class="bullet">-q</span> <span class="bullet">--branch=%TARGET_BRANCH%</span> <span class="string">%STATIC_SITE_REPO%</span> <span class="string">%TEMP%\static-site</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">cd</span> <span class="string">%TEMP%\static-site</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">del</span> <span class="string">*</span> <span class="string">/f</span> <span class="string">/q</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">for</span> <span class="string">/d</span> <span class="string">%%p</span> <span class="string">IN</span> <span class="string">(*)</span> <span class="string">do</span> <span class="string">rmdir</span> <span class="string">"%%p"</span> <span class="string">/s</span> <span class="string">/q</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">SETLOCAL</span> <span class="string">EnableDelayedExpansion</span> <span class="string">&amp;</span> <span class="string">robocopy</span> <span class="string">"%APPVEYOR_BUILD_FOLDER%\public"</span> <span class="string">"%TEMP%\static-site"</span> <span class="string">/e</span> <span class="string">&amp;</span> <span class="string">IF</span> <span class="string">!ERRORLEVEL!</span> <span class="string">EQU</span> <span class="number">1</span> <span class="string">(exit</span> <span class="number">0</span><span class="string">)</span> <span class="string">ELSE</span> <span class="string">(IF</span> <span class="string">!ERRORLEVEL!</span> <span class="string">EQU</span> <span class="number">3</span> <span class="string">(exit</span> <span class="number">0</span><span class="string">)</span> <span class="string">ELSE</span> <span class="string">(exit</span> <span class="number">1</span><span class="string">))</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="bullet">-A</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">if</span> <span class="string">"%APPVEYOR_REPO_BRANCH%"</span><span class="string">=="master"</span> <span class="string">if</span> <span class="string">not</span> <span class="string">defined</span> <span class="string">APPVEYOR_PULL_REQUEST_NUMBER</span> <span class="string">(git</span> <span class="string">diff</span> <span class="bullet">--quiet</span> <span class="bullet">--exit-code</span> <span class="bullet">--cached</span> <span class="string">||</span> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-m</span> <span class="string">"Update Static Site"</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">%TARGET_BRANCH%</span> <span class="string">&amp;&amp;</span> <span class="string">appveyor</span> <span class="string">AddMessage</span> <span class="string">"Static Site Updated"</span><span class="string">)</span></span><br></pre></td></tr></table></figure><p>这是我第二次接触到yml，yml可以转换成json，语法严格，连冒号后空格都要限制必须只能一个。。。</p><p>yml仔细一看，都是bash操作啊！</p><ol start="4"><li>基本完成！<br>好吧这是网上的博主。。。我是又遇到bug了（配置什么的，最烦了！）<br>当时已经在appveyor上build了，遇到无数次报错！</li></ol><ul><li><p>拉取失败过<br>项目配置的branch有误，更新文档的repo的branch才有yml </p></li><li><p>hexo generate成功了<br>然后毫无反应。。。。我也不知道为什么</p></li><li><p>仔细查看yml<br>我查看yml，发现</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build_script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure></li></ul><p>欸只有generate呢？我就擅自加了个hexo deploy<br>然后遇到了权限报错，回想了一下hexo在部署的时候，我是需要手动输入git的密钥的。。。<br>看来是git上有问题，可是我明明有token啊？<br>我在查阅相关key配置时，发现有个东西叫credential？？诶yml文档里面也有这个欸！</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">credential.helper</span> <span class="string">store</span></span><br><span class="line"><span class="attr">- ps:</span> <span class="string">Add-Content</span> <span class="string">"$env:USERPROFILE\.git-credentials"</span> <span class="string">"https://$($env:access_token):x-oauth-basic@github.com`n"</span></span><br></pre></td></tr></table></figure><p>这里yml将环境变量，我传进去的access_token用到了，这里应该就是配置ssh免密。<br>于是我相通了，不应该用hexo自带的部署，直接用git bash命令上传，于是我把后面部分修改成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="bullet">-A</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-m</span> <span class="string">"Update Static Site"</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">%TARGET_BRANCH%</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">appveyor</span> <span class="string">AddMessage</span> <span class="string">"Static Site Updated"</span></span><br></pre></td></tr></table></figure><p>这里又回顾了一波git bash命令（通常都用sourcetree的我。。。）</p><p>然后终于成功了！！！<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/hexo-ci/success.jpg" alt="success"></p><p>至此，接下来只需要深入了解appveyor的自动集成周期等更详细的信息就行了。<br>appveyor还可以根据你git更新打的tag来触发！欢迎尝试！</p><p>（凌晨一点终于搞完hexo持续集成，然后又花了一个小时写博客。。。）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在第一天尝试了hexo之后，觉得这个静态博客远比不上wordpress托管到主机上的博客方便，因为太依赖本机环境，需要nodejs和git，每次更新后需要自己生成静态页面（虽然也就两行代码的事情），这一点都不cool！&lt;br&gt;并且有一大弊端，当你转移电脑的时候，你需要转移你根目录下很多配置文件和之前的md文件，（图片等资源文件我是利用插件同步到了七牛的，所以资源文件不用担心），这也需要备份！（这个时候我想到了利用我Github Pages的同一个仓库，通过建不同的分支来实现，比如我是username.github.io仓库，master分支为hexo生成同步的web展示页分支，我新建一个hexo分支，就是包含了我根目录下的themes/, source/ ,_config.yml,package.json 然后就能在其他环境下重新搭建hexo）&lt;/p&gt;
&lt;p&gt;为了达到自动更新和在线编辑的目的，我遍寻方法。&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="git" scheme="http://www.shong.win/tags/git/"/>
    
      <category term="hexo" scheme="http://www.shong.win/tags/hexo/"/>
    
      <category term="appveyor" scheme="http://www.shong.win/tags/appveyor/"/>
    
  </entry>
  
  <entry>
    <title>Hello world on Hexo, my new personal blog.</title>
    <link href="http://www.shong.win/2017/02/17/hello-world-on-hexo/"/>
    <id>http://www.shong.win/2017/02/17/hello-world-on-hexo/</id>
    <published>2017-02-17T15:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>利用Hexo在Github Pages上搭建个人博客<br><a id="more"></a><br>之前在腾讯云校园活动里购买了个一年.cn域名，于是用上了一阵子的腾讯云，用wordpress搭了个博客，可是腾讯云经常宕机需要跑到后台去重启（是的我就是那么简单粗暴😂），一年到头也没宣传也没分享没更什么文章，前几天觉得Github能直接给每个仓库开github pages，觉得太有用了，脑子一热，又打算重新搭博客了。<br>挑来挑去，最后买了shong.win十年域名，win可以理解为微软粉嘛，并利用hexo在github上搭静态博客。<br>这篇文章主要分享下搭博客的过程。</p><!-- more --><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>在这里根据续费查询域名商以及挑选后缀<br><a href="http://www.domain265.com/renew/" target="_blank" rel="noopener">在这里找到续费域名最便宜的域名商</a><br>最后选择了在<a href="http://www.west.cn" target="_blank" rel="noopener">西部数码</a> 购买shong.win域名，十年。</p><h3 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h3><p>在域名管理处增加url跳转，比如blog.shong.win 跳转到<a href="http://www.shong.win/blog">www.shong.win/blog</a> 这样就实现了子域名。</p><h2 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h2><p>有了域名就可以作邮箱， .win域名由于不太常见，腾讯企业邮箱不支持，所幸的是网易域名邮箱支持<a href="http://app.ym.163.com/ym/help/help.html" target="_blank" rel="noopener">163域名邮箱</a>。并在域名管理处增加MX记录，起效后便能使用邮箱了。</p><h2 id="Github-Page"><a href="#Github-Page" class="headerlink" title="Github Page"></a>Github Page</h2><p>Github Page是Github自带的功能，能够直接给仓库开展示页面，网址是username.github.io/reponame<br>在github中创建username.github.io仓库，然后便能开启pages功能，我们在这个仓库下添加一个名为CNAME无后缀的文件，内容是购买的域名，并在域名管理处增加记录，www的CNAME记录，指向pages仓库。然后便能使域名跳转到pages仓库的页面了。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>由于在pages仓库里面自己写每个web的话太麻烦了，我们利用在本地nodejs环境下搭建<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>，hexo会自动将其环境下指定的markdown文件渲染成博客文章。自带首页，查询等一系列功能。详情请参见网上别人写的<a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="noopener">更详细的中文教程</a></p><h3 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h3><p>然后我们给hexo更换主题，主题的配置也十分简单，参见文档<a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="noopener">hexo.io/zh-cn/docs/themes.html</a></p><p>我使用的是hexo-theme-yilia</p><h3 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h3><p>hexo可以使用很多插件，并且内置了多说（让游客可以登录社交媒体账户对你的博文进行评论）<a href="https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E5%A4%9A%E8%AF%B4-DISQUS" target="_blank" rel="noopener">配置文档</a><br>也可以使用七牛同步你的照片和文件，减少对github仓库的占用，<a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">配置hexo-qiniu-sync</a></p><p>接下来就可以愉快写博客啦！</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Sync-Pic-with-qiniu"><a href="#Sync-Pic-with-qiniu" class="headerlink" title="Sync Pic with qiniu"></a>Sync Pic with qiniu</h3><p>七牛指定了 /static/image/ 这个文件为同步文件夹。</p><p>在文章中引用照片可以者直接利用七牛给的网址前缀，文章中直接在图片地址的前面加七牛前缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](http://personalname.bkt.clouddn.com/static/image/folder/filename.jpg)</span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="个人觉得这个博客的好处"><a href="#个人觉得这个博客的好处" class="headerlink" title="个人觉得这个博客的好处"></a>个人觉得这个博客的好处</h2><p>搭完网站后，我便将自己以前在自己开的微信公众号啊，豆瓣啊，知乎专栏啊，空间啊什么四处写的文章都迁移过来了，毕竟自己掌控的东西更能自主一点。</p><ul><li>首先是支持直接将Markdown渲染成web。</li><li>自己写的博客，能够在发布后随时更改错别字。</li><li>可以迁移之前写的文章。</li><li>hexo丰富的插件，能够有多说的评论，主题自带的打赏功能，搜索功能，tag，categories等功能。</li></ul><h2 id="下一阶段"><a href="#下一阶段" class="headerlink" title="下一阶段"></a>下一阶段</h2><p>接下来想尝试hexo的其他插件，并利用<a href="http://coding.net" target="_blank" rel="noopener">coding</a>试一试coding的功能，比如web IDE，增加coding.shong.win<br>后面可以再尝试在Microsoft Azure上搭建ss（之前一直失败。。。），就能充分利用子域名指向ip实现各种功能啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用Hexo在Github Pages上搭建个人博客&lt;br&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="git" scheme="http://www.shong.win/tags/git/"/>
    
      <category term="hexo" scheme="http://www.shong.win/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Gaussian Spatial Filter in OpenCV</title>
    <link href="http://www.shong.win/2017/02/01/gaussian-spatial-filter/"/>
    <id>http://www.shong.win/2017/02/01/gaussian-spatial-filter/</id>
    <published>2017-02-01T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>Research in the Gaussian spatial filter to proccess different pictures, color pictures with different noises(Gaussian noise and Salt &amp; Pepper noise) and gray pictures with different noises. Then I will try different parameter, sigma, in Gaussian function.</p><a id="more"></a><h1 id="Flow"><a href="#Flow" class="headerlink" title="Flow"></a>Flow</h1><p>I use MATLAB to create some pictures as above, <a href="create_picture.m">you can see it in this GitHub/Yvon-Shong/Waseda repo</a>. </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">P=imread(<span class="string">'pic0.jpg'</span>);         </span><br><span class="line">imshow(P,[])      </span><br><span class="line"></span><br><span class="line">P1=imnoise(P,<span class="string">'gaussian'</span>,<span class="number">0.02</span>);     </span><br><span class="line">imshow(P1,[])   </span><br><span class="line">imwrite(P1,<span class="string">'D:\document\Waseda\Video_Signal_Processing\img\1.1.jpg'</span>);</span><br><span class="line"></span><br><span class="line">P2=imnoise(P,<span class="string">'salt &amp; pepper'</span>,<span class="number">0.02</span>); </span><br><span class="line">imshow(P2,[]) </span><br><span class="line">imwrite(P2,<span class="string">'D:\document\Waseda\Video_Signal_Processing\img\1.2.jpg'</span>);</span><br><span class="line"></span><br><span class="line">G=rgb2gray(P);</span><br><span class="line">imshow(G,[])</span><br><span class="line">imwrite(G,<span class="string">'D:\document\Waseda\Video_Signal_Processing\img\2.0.jpg'</span>);</span><br><span class="line"></span><br><span class="line">G1=imnoise(G,<span class="string">'gaussian'</span>,<span class="number">0.02</span>);</span><br><span class="line">imshow(G1,[])    </span><br><span class="line">imwrite(G1,<span class="string">'D:\document\Waseda\Video_Signal_Processing\img\2.1.jpg'</span>);</span><br><span class="line"></span><br><span class="line">G2=imnoise(G,<span class="string">'salt &amp; pepper'</span>,<span class="number">0.02</span>);</span><br><span class="line">imshow(G2,[]) </span><br><span class="line">imwrite(G2,<span class="string">'D:\document\Waseda\Video_Signal_Processing\img\2.2.jpg'</span>);</span><br></pre></td></tr></table></figure><p>Then I want to compare the processed image with the original algorithm in OpenCV. So in the cpp file writtern by me, I also create the picture by OpenCV.<br>Of course, I use the same Gaussian function with the same sigma in x and y axis.</p><p>I use OpenCV imwrite to output the pictures and show this picture the same time in the report by MATLAB.</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">imshow(<span class="string">'1.1.jpg'</span>)</span><br><span class="line">title(<span class="string">'Salt&amp;PepperNoise(color)'</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">imshow(<span class="string">'1.1.DIYfilter.jpg'</span>)</span><br><span class="line">title(<span class="string">'DIYFilter'</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">imshow(<span class="string">'1.1.opencvfilter.jpg'</span>)</span><br><span class="line">title(<span class="string">'OpenCVFilter'</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">imshow(<span class="string">'1.2.jpg'</span>)</span><br><span class="line">title(<span class="string">'GaussianNoise(color)'</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">imshow(<span class="string">'1.2.DIYfilter.jpg'</span>)</span><br><span class="line">title(<span class="string">'DIYFilter'</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>)</span><br><span class="line">imshow(<span class="string">'1.2.opencvfilter.jpg'</span>)</span><br><span class="line">title(<span class="string">'OpenCVFilter'</span>)</span><br></pre></td></tr></table></figure><h1 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h1><h2 id="Basic-concepts"><a href="#Basic-concepts" class="headerlink" title="Basic concepts"></a>Basic concepts</h2><h3 id="Gaussian-fucntion"><a href="#Gaussian-fucntion" class="headerlink" title="Gaussian fucntion"></a>Gaussian fucntion</h3><p>$G(x)=\frac{1}{\sqrt{2\pi }\sigma} e^{-\frac{x^2}{2\sigma^2}}$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/gaussian.jpg" alt=""></p><h3 id="2D-Gaussian-fucntion"><a href="#2D-Gaussian-fucntion" class="headerlink" title="2D-Gaussian fucntion"></a>2D-Gaussian fucntion</h3><p>$G(x,y)=\frac{1}{\sqrt{2\pi }\sigma^2} e^{-\frac{x^2+y^2}{2\sigma^2}}$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/2d-gaussian.jpg" alt=""></p><h3 id="Gaussian-kernel"><a href="#Gaussian-kernel" class="headerlink" title="Gaussian kernel"></a>Gaussian kernel</h3><h3 id="Discrete-Algorithm"><a href="#Discrete-Algorithm" class="headerlink" title="Discrete Algorithm"></a>Discrete Algorithm</h3><p>$H_{i,j}=\frac{1}{\sqrt{2\pi }\sigma^2} e^{-\frac{(i-k-1)^2+(j-k-1)^2}{2\sigma^2}}$</p><p>I use 5*5 grid Gaussian kernel with sigma=1.</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/0.jpg" alt=""></p><h3 id="Gaussian-function-in-OpenCV"><a href="#Gaussian-function-in-OpenCV" class="headerlink" title="Gaussian function in OpenCV"></a>Gaussian function in OpenCV</h3><p>function prototype<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GaussianBlur</span><span class="params">(InputArray src,OutputArray dst, Size ksize, <span class="keyword">double</span> sigmaX, <span class="keyword">double</span> sigmaY=<span class="number">0</span>, intborderType=BORDER_DEFAULT )</span></span></span><br></pre></td></tr></table></figure></p><h3 id="Gauss-filtering-smoothing-feature"><a href="#Gauss-filtering-smoothing-feature" class="headerlink" title="Gauss filtering (smoothing) feature"></a>Gauss filtering (smoothing) feature</h3><p>After the completion of the Gauss kernel, the Gauss filter is used to perform the standard convolution.</p><ul><li><p>the convolution of a Gauss function with another Gauss function is still a Gauss function, A*B=C, the square of the standard deviation of C is the square of the standard deviation of the sum of A and B. It is to say that the convolution of Gauss function is wider, blur effect is more obvious (intuitively, for Gauss fuzzy operation, the image will become increasingly blurred). The convolution of two dimensional Gauss function can be divided into two steps to carry out, the first will be the image convolution with one-dimensional Gauss function, and then the same one-dimensional Gauss function convolutes in the vertical direction. Therefore, computation of two-dimensional Gauss filter grows with filtering template width linearly, instead of square.</p></li><li><p>Fourier transform of Gauss function is still a Gauss function, if the original Gauss function is wider (greater standard deviation), Gauss function after transformation will be more narrow (the smaller the standard deviation), that is to say a wider Gauss function, the effect of low pass filter will be more obvious, the processed image detail will be more fuzzy. To make the digital image Gauss blur, that is, we should use a convolution kernel in the distribution of the Gauss function to do convolution operation with the image. We should make sure the size of the standard deviation, the size of the convolution kernel, the size of the final scale factor. The sigma is bigger, Gauss filter band is wider, the degree of smoothing is better.</p></li></ul><h2 id="Comparision"><a href="#Comparision" class="headerlink" title="Comparision"></a>Comparision</h2><h3 id="Color-picture"><a href="#Color-picture" class="headerlink" title="Color picture"></a>Color picture</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/1.0.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/color.jpg" alt=""></p><p>So you can see that the result in color picture is really bad, maybe because the noise effect in 3 channels is different, so I use the DIY filter to proccess it, and get the bad result.</p><h3 id="Gray-picture"><a href="#Gray-picture" class="headerlink" title="Gray picture"></a>Gray picture</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/2.0.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/gray.jpg" alt=""></p><p>You can see that the effect of DIY filter is similar with the original algorithm in OpenCV. But we should pay more attention on the border in DIY filter, you can see the result on the border in DIY filter is really bad, because I have not haddled with the border in the algorithm.</p><h3 id="Gaussian-kernel-1"><a href="#Gaussian-kernel-1" class="headerlink" title="Gaussian kernel"></a>Gaussian kernel</h3><p>When we use different Gaussian kernel, we can get different result. As you can see it in the formula of Gaussian function, you can see the effect of the sigma.<br>So I will try different sigma to proccess the gray picture with Gaussian Noise. </p><ul><li>when sigma is 10:<br>the Gaussian kernel makes the picture mixed with its neighbor field averagely. It is a total black picture except the border of the picture.<br>Its Gaussian kernel module is as follow:</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/sigma10kernel.jpg" alt=""></p><ul><li>when sigma is 1:</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/0.jpg" alt=""></p><p>The result has been shown as above. </p><ul><li>when sigma is 0.01:</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/sigma0.1kernel.jpg" alt=""></p><p>You can see the kernel is out of control, with very very big number in the middle.</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/gaussian-spatial-filter/img/sigma0.1diy.jpg" alt=""></p><p>So you can see that the sigma is of vital importance for Gaussian function. If it is near 1, the effect will be better.</p><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cv.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;highgui.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line">Mat image;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;Vec3b&gt; row;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;row&gt; mat;</span><br><span class="line">mat in, tmp, output;</span><br><span class="line"><span class="keyword">double</span> kernel[<span class="number">10</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">double</span> mins = <span class="number">999999999</span>;</span><br><span class="line"><span class="keyword">int</span> w, h;</span><br><span class="line"><span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Vec3b <span class="title">guessbour</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> sum0 = <span class="number">0</span>, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;<span class="number">5</span>; j++) &#123;</span><br><span class="line">Vec3b  tt = tmp[x - <span class="number">2</span> + i][y - <span class="number">2</span> + j];</span><br><span class="line">sum0 += tt[<span class="number">0</span>] * kernel[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line">sum1 += tt[<span class="number">1</span>] * kernel[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line">sum2 += tt[<span class="number">0</span>] * kernel[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">Vec3b tt;</span><br><span class="line">tt[<span class="number">0</span>] = sum0*mins;</span><br><span class="line">tt[<span class="number">1</span>] = sum1*mins;</span><br><span class="line">tt[<span class="number">2</span>] = sum2*mins;</span><br><span class="line"><span class="keyword">return</span> tt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">smooth</span><span class="params">(<span class="keyword">int</span> iterations)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tmp.resize(h), output.resize(h);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;h; i++) &#123;</span><br><span class="line">tmp[i].resize(w), output[i].resize(w);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;w; j++) &#123;</span><br><span class="line">output[i][j] = tmp[i][j] = in[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (iterations--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i&lt;h - <span class="number">2</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j&lt;w - <span class="number">2</span>; j++)</span><br><span class="line">output[i][j] = guessbour(i, j);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;h; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;w; j++) &#123;</span><br><span class="line">tmp[i][j] = output[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Mat res;</span><br><span class="line">res.create(h, w, image.type());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;h; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;w; j++)</span><br><span class="line">res.at&lt;Vec3b&gt;(i, j) = output[i][j];</span><br><span class="line">namedWindow(<span class="string">"DIYfilter"</span>);</span><br><span class="line">imshow(<span class="string">"DIYfilter"</span>, res);</span><br><span class="line">imwrite(<span class="string">"D:\\\\document\\Waseda\\Video_Signal_Processing\\img\\DIYfilter.jpg"</span>, res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">double</span> mid = <span class="built_in">floor</span>((n + <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">double</span> sigma = <span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> ttt = ((i - mid)*(i - mid) + (j - mid)*(j - mid)) / (<span class="number">2</span> * sigma*sigma);</span><br><span class="line"><span class="keyword">double</span> t = <span class="built_in">exp</span>(-(ttt));</span><br><span class="line"><span class="keyword">double</span>  a = t / (<span class="number">2</span> * pi*sigma*sigma);</span><br><span class="line"><span class="keyword">if</span> (a&lt;mins)</span><br><span class="line">mins = a;</span><br><span class="line">kernel[i][j] = a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">kernel[i][j] /= mins;</span><br><span class="line">kernel[i][j] = <span class="built_in">ceil</span>(kernel[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf "</span>, (kernel[i][j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">h = image.rows, w = image.cols;</span><br><span class="line"></span><br><span class="line">in.resize(h);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;h; i++)</span><br><span class="line">&#123;</span><br><span class="line">in[i].resize(w);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;w; j++)</span><br><span class="line">&#123;</span><br><span class="line">in[i][j] = image.at&lt;Vec3b&gt;(i, j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">smooth(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solveinopencv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">namedWindow(<span class="string">"original"</span>);</span><br><span class="line">namedWindow(<span class="string">"opencvfilter"</span>);</span><br><span class="line">imshow(<span class="string">"original"</span>, image);</span><br><span class="line">Mat out;</span><br><span class="line">GaussianBlur(image, out, Size(<span class="number">5</span>, <span class="number">5</span>), <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">imshow(<span class="string">"opencvfilter"</span>, out);</span><br><span class="line">imwrite(<span class="string">"D:\\\\document\\Waseda\\Video_Signal_Processing\\img\\opencvfilter.jpg"</span>, out);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">image = imread(<span class="string">"D:\\\\document\\Waseda\\Video_Signal_Processing\\img\\2.2.jpg"</span>);</span><br><span class="line"><span class="keyword">if</span> (!image.data) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"no image data"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line">solve();</span><br><span class="line"></span><br><span class="line">solveinopencv();</span><br><span class="line"></span><br><span class="line">waitKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Configuring-the-environment"><a href="#Configuring-the-environment" class="headerlink" title="Configuring the environment"></a>Configuring the environment</h1><p><a href="http://opencv.org/" target="_blank" rel="noopener">OpenCV 3.1</a> + Visual Studio 2015</p><p>And we unzip it to C:/opencv</p><h3 id="Add-to-system-environment-variables"><a href="#Add-to-system-environment-variables" class="headerlink" title="Add to system environment variables"></a>Add to system environment variables</h3><p>This computer&gt;&gt;right click&gt;&gt;Properties&gt;&gt;Advanced system settings&gt;&gt;Environment Variables…&gt;&gt;Path&gt;&gt;Edit&gt;&gt;New&gt;&gt;add C:/opencv/build/x64/vc14/bin</p><h3 id="Configure-the-VS-2015"><a href="#Configure-the-VS-2015" class="headerlink" title="Configure the VS 2015"></a>Configure the VS 2015</h3><ol><li>Build a Windows ConsoleApplication project</li><li>Be sure about the <strong>Debug Mode</strong> AND <strong>x64</strong></li><li><p>Then open the PropertySheet properties page in VS2015<br>VC++ Directory&gt;&gt;Include Directory</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\opencv\build\include;</span><br><span class="line">C:\opencv\build\include\opencv;</span><br><span class="line">C:\opencv\build\include\opencv2;</span><br></pre></td></tr></table></figure></li><li><p>VC++ Directory&gt;&gt;Library Directory</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\opencv\build\x64\vc14\lib;</span><br></pre></td></tr></table></figure></li><li><p>Linker&gt;&gt;input&gt;&gt;Additional Dependency</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opencv_world310d.lib</span><br></pre></td></tr></table></figure><p> When in <strong>Release Mode</strong> we should add </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opencv_world310.lib</span><br></pre></td></tr></table></figure></li></ol><h3 id="Import-the-PopertySheet-file"><a href="#Import-the-PopertySheet-file" class="headerlink" title="Import the PopertySheet file"></a>Import the PopertySheet file</h3><p>Also we can import the <a href="gaussian-spatial-filter/DebugPropertySheet.props">DebugPropertySheet.props</a> to configure the environment of OpenCV in Visual Studio 2015 of Debug Mode.</p><p><a href="gaussian-spatial-filter/ReleasePropertySheet.props">ReleasePropertySheet.props</a> for Release Mode</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>When using OpenCV to process image and debug, there will be some error about running out of memory or crashing. It results from the path of image. We should use<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;D:\\\\pic.jpg&quot;</span><br></pre></td></tr></table></figure></p><p>instead of<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;D:\\pic.jpg&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Research in the Gaussian spatial filter to proccess different pictures, color pictures with different noises(Gaussian noise and Salt &amp;amp; Pepper noise) and gray pictures with different noises. Then I will try different parameter, sigma, in Gaussian function.&lt;/p&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="cpp" scheme="http://www.shong.win/tags/cpp/"/>
    
      <category term="opencv" scheme="http://www.shong.win/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>2016年 MSP 的创新之旅</title>
    <link href="http://www.shong.win/2017/01/23/Imagine-Tour-of-MSPChina-in-2016/"/>
    <id>http://www.shong.win/2017/01/23/Imagine-Tour-of-MSPChina-in-2016/</id>
    <published>2017-01-23T15:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>时值中国的岁末年关，2017 年已经逐渐拉开了她的序幕。当回首 2016 年，作为 MSP ，这一年里，我们做了什么？让软妹来带大家走近，这一年来，那些可以看到的成长。</p><p>微软创新杯在中国的宣传时有一个称号，叫做创新之旅，它讲的是一群工程师，设计师，项目管理者等人，在创新的驱动下，用代码谱写，用 PS 绘制，无数策划，一起描绘迸发的灵感。对于微软创新杯的参赛者来说，这一年，在创新之旅上走得更坚定，而对于 MSP (Microsoft Student Partners) 呢？<br><a id="more"></a></p><h2 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h2><p>4 月末，在经历了几轮微软创新杯区域赛，省赛后，中国区总决赛在海南三亚举行，当时几十位天南海北的 MSP，赶赴三亚，参与 MSP China Summit 和报道 IC China Local Final 这场盛事。</p><p>海南炎热的天，为信仰燃烧青春的我们，分组跟进参赛选手，拍摄比赛和大会素材，在网络上进行写稿播报，甚至通宵剪辑视频。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/chinafinal.jpg" alt=""><br><em>微软创新杯中国区总决赛开幕</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/chinafinal.jpg" alt=""><br><em>来自全国各地的 MSP</em></p><p><strong><em>更多关于我们剪辑的视频，请访问<a href="http://list.youku.com/albumlist/show/id_27159022.html?spm=a2h0j.8191423.module_basic_info.5~5!2~5~5~5~5~A" target="_blank" rel="noopener">微软妹叫你来三亚 优酷播单</a></em></strong></p><hr><p>7月，中国区的两名优秀 MSP，同角逐出的 IC 中国区冠军远赴美国西雅图，微软总部，参加MSP Global Summit 和全球总决赛。</p><p>最终来自中国的由东北大学、北京师范大学、UC Berkeley 联合组队完成的 BoneyCare 项目从众多参赛项目中脱颖而出，获得组委会特设的 Ability Award 奖项。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/worldfinal2.jpg" alt=""></p><p><em>创新杯决赛现场的中国国旗</em></p><p>BoneyCare 是一款基于云端语音识别技术和波形分析技术的口吃辅助治疗 App，结合口吃治疗的传统模式进行 “朗读训练” ，通过提供文章供用户朗读，将语音传至云端并进行分析，同时反馈给用户个性化的评价和指导意见。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/worldfinal1.jpg" alt=""><br><em>BoneyCare 团队</em></p><p>自去年设立，Ability Award 旨在奖励致力于改善残障人士生活的团队项目，有潜力让世界更加包容亲近。BoneyCare 团队未来将重新回到雷德蒙德，在微软专家的帮助下完善自己的项目。</p><p>如今又是新的一年了，而我们又在为2017年的微软创新杯积蓄着力量，开始了新一轮了校园宣传，不同于往年，我们开创了式新的形，借助B站直播 ImageTour 主题讲座，用弹幕来进行互动。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/show1.jpg" alt=""><br><em>Imagine Tour 主题讲座宣传海报</em></p><p><strong><em>关于 Imagine Tour 主题讲座请访问 <a href="http://aka.ms/ICChina" target="_blank" rel="noopener">http://aka.ms/ICChina</a></em></strong></p><h2 id="在路上"><a href="#在路上" class="headerlink" title="在路上"></a>在路上</h2><p>MSP 其实不仅仅是一个围绕着创新杯而展开的组织，记得在中国区总决赛的时候，我们要为最后一天的晚会进行排舞，在夜晚的楼下，在卫生间对着镜子，练习，编排动作，最后在晚会前教会他人，或许，这对我们来说也是一种成长吧。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/chinafinal3.jpg" alt=""><br><em>来自深圳万科梅沙书院的高中生MSP与来自南京东南大学的MSP在台上领舞</em></p><p>所以，其实我更想讲的是，在这一年的创新之旅中，关于我们进步的故事。</p><p>在线下，我们更为他人的创新贡献着我们渺小的力量，我们发动身边的同学一起共同观赏关于技术的盛宴——微软 Connect 大会；我们带领大家去动手实践，组织编程一小时活动，在编程中发现乐趣；我们试图用热情，去宣传 MSP，让更多的人加入我们这个大家庭。</p><h3 id="Connect-大会"><a href="#Connect-大会" class="headerlink" title="Connect 大会"></a>Connect 大会</h3><p>Build 2016 大会的时候，微软粉丝就像是在过年，在微博上发动态，在微信群里刷弹幕，更有微软科技媒体组织B站的同声传译，和邀请嘉宾进行点评。而更技术向的 Connect 大会不同于这种发自于对微软的热爱而自行进行观看的活动，作为 MSP，要组织大家聚在一起观看视频直播，这个形式其实是有一些难度的，</p><p>从很多MSP的反馈来看，范围不够广，不够吸引人，一直都是线下活动中最突出的矛盾。</p><p>可是 MSP 是来自群众，走到群众中去也十分容易，于是我们便以寝室为单位，带动身边的同学，一起进行观看。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/connect.jpg" alt=""><br><em>根据反馈而制成活动照片墙，覆盖近20所高校</em></p><h3 id="Hour-of-Code"><a href="#Hour-of-Code" class="headerlink" title="Hour of Code"></a>Hour of Code</h3><p>这是一个工程师能利用编程改变世界的时代，程序已经逐步渗入我们的日常生活中，更有人呼吁，将编程纳入小学教学。当风靡全球的游戏——“我的世界”，和编程结合在一起，会发生怎样“添码行空”的故事？</p><p>我们逐渐进步，在更大的范围内推广我们的活动。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/hoc1.jpg" alt=""><br><em>电子科技大学</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/hoc2.jpg" alt=""><br><em>河北建筑工程学院</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/hoc3.jpg" alt=""><br><em>福建警察学院</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/hoc4.jpg" alt=""><br><em>海南大学</em></p><p>我们开始去感染更多的人，甚至是非计算机领域专业的同学，让他们开始涉猎计算机科学，埋下对编程兴趣的萌芽。</p><p>于是，我们开始走向更广大的舞台，我们会举办更大的会议；</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/recruitment1.jpg" alt=""><br><em>MSP Recruitment 大连理工大学</em></p><p> 我们召集更多的人，我们走向户外。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/ic.jpg" alt=""><br><em>MSP Recruitment 大连理工大学</em></p><p>不满足于 Build2016 般线上的狂欢，我们开始线下面基，前往北京参加 Microsoft Ignite China 微软技术大会。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/ignite1.jpg" alt=""><br><em>Microsoft Ignite China 微软技术大会开幕</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/ignite2.jpg" alt=""><br><em>微软技术大会期间相约在一起的 MSP</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/ignite3.jpg" alt=""><br><em>微软技术大会分会场</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/ignite4.jpg" alt=""><br><em>微软技术大会·来自全国各地的 MSP</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/centerone1.jpg" alt=""><br><em>MSP参观微软大楼的 Center One</em></p><p>甚至，我们开始走出国门，我们借助网络，和派去西雅图的伙伴，联络起其他国家的 MSP。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/worldfinal3.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/worldfinal6.jpg" alt=""></p><p><em>7月 World Final &amp; MSP Global Summit</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/mvp2.jpg" alt=""><br><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/mvp1.jpg" alt=""><br><em>11月 MSP in MVP Summit</em></p><p>也正是在 World Final 和 MSP Summit 的两次西雅图之行中，我们参与了原先亚太地区 MSP 兴起的 msp-times 项目，开始逐渐面向范围更大更广阔的世界。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Imagine-Tour-of-MSPChina-in-2016/msptimes.jpg" alt=""></p><p><em>MSP Times网站首页</em></p><p>最开始喜欢上微软的原因是觉得“科技予力众生”(Empower Us All)，这个概念真的太酷了。后来加入了 MSP，一起迈上了创新之旅，在这途中，曾被三亚秀丽的景色吸引，也曾艳羡去西雅图大本营的伙伴，然而我觉得最重要的，不是收集到的多少微软纪念品文化衫，而是认识的其他 MSP 啊，“在同一片天空下，我们彼此，为着共同喜爱的东西，一起进步，即使相隔很远，我们也会有机会见面，我们也会分享喜好，分享彼此的生活，到见面的时候，像是认识多年的老友。”</p><p>这一切的一切，都起源于迈上创新之旅的那一步。 </p><p>2016 年的创新之旅，有关于微软创新杯的盛大赛事，也有关于 MSP 成长的故事。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时值中国的岁末年关，2017 年已经逐渐拉开了她的序幕。当回首 2016 年，作为 MSP ，这一年里，我们做了什么？让软妹来带大家走近，这一年来，那些可以看到的成长。&lt;/p&gt;
&lt;p&gt;微软创新杯在中国的宣传时有一个称号，叫做创新之旅，它讲的是一群工程师，设计师，项目管理者等人，在创新的驱动下，用代码谱写，用 PS 绘制，无数策划，一起描绘迸发的灵感。对于微软创新杯的参赛者来说，这一年，在创新之旅上走得更坚定，而对于 MSP (Microsoft Student Partners) 呢？&lt;br&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
      <category term="microsoft" scheme="http://www.shong.win/tags/microsoft/"/>
    
  </entry>
  
  <entry>
    <title>Matched Field Processing</title>
    <link href="http://www.shong.win/2017/01/08/graduate-project/mfp/"/>
    <id>http://www.shong.win/2017/01/08/graduate-project/mfp/</id>
    <published>2017-01-08T12:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>匹配场处理<br><a id="more"></a></p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>被动定位</p><ul><li>海洋噪声</li><li>潜艇降噪技术提高 辐射噪声越来越低</li><li>探测水下静止目标</li></ul><p>主动定位</p><ul><li>信道影响十分复杂</li><li>背景干扰严重而且复杂</li><li>常规的检测方法不能很好的满足性能要求</li></ul><p>声源 - 海洋信道 - 水听器阵列</p><p>知二求一</p><p>匹配场反演</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/mfp/mfp.png" alt="mfp"></p><p>但这三者都有不确定性和随机性 必须利用信号处理方法进行参数估计</p><p>匹配场定位：利用水听器阵列接收的信号数据，与假设声源经信道模型传播后得到的理论数据，按照一定方法进行相关运算来估计声源的位置。</p><p>首先将水听器阵列接收到的数据经过傅里叶变换后计算频域协方差矩阵</p><p>假设声场中某一位置由目标，已知海洋声场环境参数时，利用现有的声场模型可以计算出该目标声源长生的声信号在接收水听器阵列的声场值，通常称之为拷贝场向量</p><p>最后将拷贝场向量和测量信号的协方差矩阵进行匹配运算从而输出定位模糊表面，如果实际目标位置与假设声源位置一致，则匹配处理器有最大值输出，这样可以从定位模糊表面上独处目标的位置。</p><p>匹配场定位有两个重要环节，一是匹配声场的计算，二是匹配处理器的设计。拷贝声场可利用现有的声场模型计算得到。</p><p>那篇文章利用的是<strong>抛物方程模型</strong></p><h1 id="声传播模型的理论基础"><a href="#声传播模型的理论基础" class="headerlink" title="声传播模型的理论基础"></a>声传播模型的理论基础</h1><h2 id="声场模型"><a href="#声场模型" class="headerlink" title="声场模型"></a>声场模型</h2><p>从不同的物理角度看待波动方程，可以建立不同的声场模型，对应不同的数值解算方法</p><ul><li>简正波模型</li><li>射线理论模型</li><li>抛物线方程模型</li><li>快速场模型</li><li>多途展开模型</li></ul><p>声波在水介质中的传播规律可用波动方程来加以描述，当初始条件和边界条件确知时，波动方程有唯一确定解。解析解难求，通过给定初始条件和边界条件来求解波动方程的数值解。</p><h3 id="理想流体介质中的波动方程"><a href="#理想流体介质中的波动方程" class="headerlink" title="理想流体介质中的波动方程"></a>理想流体介质中的波动方程</h3><p>理想流体小振幅假定-&gt;欧拉方程和连续性方程</p><p>$\frac{d\vec{u} }{dt}+\frac{1}{\rho} grad p=0 $</p><p>$\frac{d\rho}{dt}+\rho div u=0 $</p><p>u为质点震动速度矢量，p为声压，$\rho$ 为密度，考虑小振幅，忽略二阶小量</p><p>$\frac{\partial\vec{u} }{\partial t}+\frac{1}{\rho} grad p=0$</p><p>$\frac{\partial \rho}{\partial t}+\rho c^2div u=0$</p><p>引入绝热声速</p><p>$c^2\equiv (\frac{\partial p}{\partial \rho})$</p><p>得到关于p的微分方程</p><p>$pdiv(\frac{1}{\rho}grad p)=\frac{1}{c^2} \frac{\partial ^2 p}{\partial ^2 t}$</p><p>密度均匀=&gt; $\Delta p -\frac{1}{c^2}\frac{\partial^2 p}{\partial ^2 t}=0$</p><p>考虑简谐过程中时间因子$e^(i\omega t)$ 略去不写 $\Delta p+k^2p=0$</p><p>非均匀介质中，$\rho$ , $c$  均是空间函数，不能直接得到关于p的波动方程，引入波函数 $\Psi =\frac{1}{\sqrt(\rho)}p $</p><p>$\Delta \psi +K^2(x,y,z)\psi =0 $</p><p>声场的基本方程</p><p>均匀介质 $\Delta p -\frac{1}{c^2}\frac{\partial^2 p}{\partial ^2 t}=0 $</p><p>非均匀介质 $\Delta \psi +K^2(x,y,z)\psi =0 $</p><h3 id="波动方程中的定解条件"><a href="#波动方程中的定解条件" class="headerlink" title="波动方程中的定解条件"></a>波动方程中的定解条件</h3><p>波动方程给出声波传播遵循的普遍规律，它必须结合物理问题应满足的具体有条件才能给出某一物理问题的解答。</p><p>声场问题中，边界条件是反映边界对波动的响应，规定了波函数$\Psi$ 在边界$\Sigma$上满足一个事先已知的确定的关系式，这一关系式由其所包含的物理内容而直接影响场的性质，并使其具有唯一确定的性质。</p><ul><li><p>绝对软边界</p><p>边界压力为零，水面平静时=&gt;齐次第一类边界条件$p|_{\Sigma} = 0 $</p><p>如果给定压力分布=&gt;非齐次第一类边界条件$p|_{\Sigma} = f_1(\Sigma) $</p></li><li><p>绝对硬边界</p><p>平坦岩石水底</p><p>边界上的质点法向振速为0 =&gt;齐次第一类边界条件 $u_n |_\Sigma = 0 $</p><p>给定边界条件上的质点振速分布=&gt;非齐次第一类边界条件 $u_n |_\Sigma = f_2(\Sigma) $</p></li><li><p>阻抗边界</p><p>第三类边界条件$\frac{p}{u_n}|_\Sigma = Z $</p></li><li><p>边界上发生$\rho$ 和 $c$ 的有限间断</p><p>实质上不是边界，而只是介质分布有跃变的界面，再次类界面两边都有波场存在，所要求的是在此界面处应满足声场的连续性条件</p></li><li><p>辐射条件或熄灭条件</p><p>如果波场的问题包括有无穷点在内时，若在无穷远点没有附加条件，则解也不是唯一的。</p></li></ul><h3 id="简正波模型"><a href="#简正波模型" class="headerlink" title="简正波模型"></a>简正波模型</h3><p>简正波模型假设海洋声场环境与距离无关，然后利用坟里变量法求解波动方程</p><p>简化海洋模型：硬质海底，水深为常数</p><p>声速$c(s)$与介质密度$\rho(z)$是只与深度有关的函数</p><p>点声源位于$Z_s$ 处，声场满足非齐次赫姆兹方程，由于是圆柱对称，写为</p><p>$\frac{1}{r} \frac{\partial p}{\partial r}(r\frac{\partial p}{\partial r})+\rho(z)\frac{\partial }{\partial z}(\frac{1}{\rho(z)}\frac{\partial \rho}{\partial z})+\frac{\omega}{c^2(z)}p=-\frac {\delta (r)\delta (z-z_s)}{2\pi r}$</p><p>（还没太看懂）</p><h3 id="射线理论模型"><a href="#射线理论模型" class="headerlink" title="射线理论模型"></a>射线理论模型</h3><p>声场中的每一根声线是从声源或由它的海面和海底形成的虚拟声源发射出来的，声线沿着声线管束传播，空间中的某点的声场是通过该点的所有声线所围城的管束的能量总和。</p><p>利用声线理论前提：</p><ul><li>存在波阵面，而且在波阵面上的解的相位时间或时间函数是常数</li><li>存在射线，它能描述从声源发出的声嗯那个是怎样达到空间某一点的</li></ul><p>射线理论模型是根据声线计算传播损失，始于赫姆霍兹方程，声速在实际声源波场范围内平缓变化的假定下，作为波动方程的渐进极限解推导出来</p><p>波动方程$\nabla^2 p -\frac{1}{c^2}\frac{\partial^2 p}{\partial ^2 t}=0 $</p><p>声速$c=c(x,y,z)$</p><p>若有如下形式的解存在</p><p>$p(x,y,z,t)=A(x,y,z)e^{j[\omega t-k(x,y,z)\phi(x,y,z)]}=A(x,y,z)e^{j[\omega t-k_0\phi(x,y,z)]}$</p><p>$A$是振幅，是坐标的函数；$k$为波数，$k=\frac{\omega}{c_0}·\frac{c_0}{c(x,y,z)}=k_0n(x,y,z)$，$n(x,y,z)$为折射率；$k_0\phi(x,y,z)$是相位值；$\phi(x,y,z)$为程函，它是长度量纲。把形式解带入到波动方程得到</p><p>$\frac{\nabla^2 A}{A}-(\frac{\omega}{c_0})^2\nabla \phi \bullet \nabla \phi + (\frac{\omega}{c})^2-j\frac{\omega}{c_0}(\frac{2\nabla A}{A}\bullet \nabla\phi+\nabla^2\phi )=0$</p><p>方程实部和虚部都要等于零，则有</p><p>$\frac{\nabla^2 A}{A}-(\frac{\omega}{c_0})^2\nabla \phi \bullet \nabla \phi + (\frac{\omega}{c})^2 = 0$</p><p>强度方程 $\frac{2\nabla A}{A}\bullet \nabla\phi+\nabla^2\phi =0$ 决定声线轨迹上每点的振幅</p><p>当$\frac{\nabla^2 A}{A}&lt;&lt;k^2$时</p><p>程函方程 $(\nabla\phi)^2=(\frac{c_0}{c})^2=n^2(x,y,z)$</p><p>矢量形式 $\frac{d}{ds}\nabla\phi=\nabla n$</p><h3 id="谱积分模型"><a href="#谱积分模型" class="headerlink" title="谱积分模型"></a>谱积分模型</h3><p>假定传输介质时柱面对称的，且具有水平分层结构（即环境变化与距离无关）。</p><h3 id="多途扩展模型"><a href="#多途扩展模型" class="headerlink" title="多途扩展模型"></a>多途扩展模型</h3><p>将波动方程的积分解表示为有限个局部积分的和，期中每个局部积分对应一条特定的声线传播路径。</p><h3 id="抛物线近似法"><a href="#抛物线近似法" class="headerlink" title="抛物线近似法"></a>抛物线近似法</h3><p>基于傅里叶变换的有效的数值计算方法，可用解决海洋声学中与距离有关的传播问题</p><p>抛物线近似方法实际上是解类似于亥姆霍兹方程的抛物型方程。它假定接收的声场是仅来自于声源处的一个小角度圆锥范围内，即要求声能传播集中在垂直方向上一个小角度内传播。实际计算表明，不同掠射角的抛物近似法的计算精度不同，掠射角较窄时抛物方程近似误差较大。</p><h3 id="声场模型一览表"><a href="#声场模型一览表" class="headerlink" title="声场模型一览表"></a>声场模型一览表</h3><table><thead><tr><th>模型</th><th>表达式</th><th>适用条件</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>简正波模型</td><td>$\phi =F(z)G(r)$ $F(z)$ 为格林函数，$G(r)$ 为汉克尔函数</td><td>低频，远场，距离大于几倍水深</td><td>计算声场结果较精确</td><td>高频深水时计算量大，非水平分层介不适用</td></tr><tr><td>射线模型</td><td>$\phi =F(x,y,z)e^{rG(x,y,z)}$</td><td>高频，近场，距离小于几倍水深</td><td>简单，直观</td><td>不适用于远场</td></tr><tr><td>谱积分模型</td><td>将简正波模型的汉克尔函数用渐进展开式的第一项代替$p(r,z) =\int G(k,z)J_0(kr)kdk$</td><td>近场</td><td>精确可用FFT加快运算速度，可方便的计算脉冲声源</td><td>时效性较低，只限于与距离无关的环境</td></tr><tr><td>多途扩展模型</td><td>$\phi = A(z)e^{j\Phi(z)}$</td><td>高频深水，声速随深度变化不大</td><td>算法简单</td><td>不容易考虑信道参数与距离有关的情况</td></tr><tr><td>抛物方程模型</td><td>用抛物方程来近似波动方程，$\phi =F(z)G(r)$ ，$F(z)$ 为格林函数，$G(r)$ 为汉克尔函数</td><td>低频，远场</td><td>适用与信道参数与距离有关的环境中</td><td>相对误差随距离增加而累计</td></tr></tbody></table><h2 id="常用的匹配场定位处理器"><a href="#常用的匹配场定位处理器" class="headerlink" title="常用的匹配场定位处理器"></a>常用的匹配场定位处理器</h2><h3 id="线性匹配场处理器"><a href="#线性匹配场处理器" class="headerlink" title="线性匹配场处理器"></a>线性匹配场处理器</h3><p>Bartlett处理器 常规处理器</p><p>它的输出功率P</p><p>$P(r,z)=W^H(r,z)KW(r,z)$</p><p>权向量$W(r,z)=V(r,z)/N$，其中拷贝场向量V通过模型计算得到，N是水听器格数，K是N·N的测量数据的互谱密度矩阵</p><h3 id="自适应匹配场处理器"><a href="#自适应匹配场处理器" class="headerlink" title="自适应匹配场处理器"></a>自适应匹配场处理器</h3><p>输出功率P</p><p>$P(r,z)=W^H(r,z)KW(r,z)$</p><p>MVDR自适应匹配处理器的权向量$W(r,z)=\frac{K^{-1}V(r,z)}{V^H(r,z)K^{-1}V(r,z)}$</p><p>对应的输出功率为$P_A(r,z)=\frac{1}{V^H(r,z)K^{-1}V(r,z)}$</p><h1 id="基于MUSIC算法的匹配场定位"><a href="#基于MUSIC算法的匹配场定位" class="headerlink" title="基于MUSIC算法的匹配场定位"></a>基于MUSIC算法的匹配场定位</h1><h2 id="信号模型"><a href="#信号模型" class="headerlink" title="信号模型"></a>信号模型</h2><p>水听器阵列由N个水听器组成，在声场中由K(K&lt;N)个窄带远场声源$S_1(t),S_2(t)…S_k(t)$分别位于声场中$(r_1,z_1),(r_2,z_2)……(r_K,z_K)$ 处，各声源互不相关。则第i个水听器接收到的信号为</p><p>$x_i (n)=\sum_{k=1}^K S_k(n)h_i(r_k,z_k)+n_i(n)$ ; $ i=1,2,…,N$</p><p>其中$n_i(n)$为第i个水听器的加性噪声，噪声为高斯白噪声</p><p>写成矩阵形式</p><p>$X(n)=H(r,z)S(n)+N(n)$</p><p>其中</p><p>$X(n)=[x_1(n),x_2(n),…,x_N(n)]^T$</p><p>$S(n)=[s_1(n),s_2(n),…,s_K(n)]^T$</p><p>$N(n)=[n_1(n),n_2(n),…,n_N(n)]^T$</p><p>$H=[h(r_1,z_1),h(r_2,z_2),…,h(r_K,z_K)]^T$</p><p>它是N·K权矩阵，表示不同位置的声源在水听器阵元上的延迟和幅度信息</p><p>其中 $h(r_k,z_k)=[h_1(r_k,z_k),h_2(r_k,z_k),…,h_N(r_k,z_k)]^T$</p><p>$h_i(r_k,z_k)$ 是通过声传播模型计算出来的第k个目标声源在第i个水听器处的信道响应。同时要将$h(r_k,z_k)$ 归一化=&gt;</p><p>$ ||h(r_k,z_k)||=1$</p><p>$ ||h(r_k,z_k)||=\sqrt{h_1(r_k,z_k)+h_2(r_k,z_k)+…+h_N(r_k,z_k)}$</p><h2 id="基于MUSIC算法的匹配场处理器"><a href="#基于MUSIC算法的匹配场处理器" class="headerlink" title="基于MUSIC算法的匹配场处理器"></a>基于MUSIC算法的匹配场处理器</h2><p>根据上面的数据模型，阵列输出的协方差矩阵为</p><p>$R=HR_S H^H+\sigma^2_n I$</p><p>$R_S=E[S(n)S^H(n)]$ 是信号源的协方差矩阵，根据假设条件信号源互不相关，则$R_S$是满秩矩阵，其秩为K，H秩也为K，$HR_SH^H$ 为半正定矩阵。它具有K个非零特征值: $\mu_1\ge \mu_2\ge ···\ge \mu_k&gt;0 $</p><p>那么R的N个特征值为</p><p>$\lambda _k = \begin{cases} \mu_k+\sigma^2_n ; k=1,2,…,K \ \sigma^2_n ; k=K+1,…,N \end{cases}$</p><p>对应的特征矢量分别为$e_1,e_2,…,e_k,e_{k+1},…,e_N$</p><p>根据矩阵特征值分解原理则由 $R=\sum^K_{k=1}\lambda_k e_k e_k^H = E···E^H$</p><p>其中 $E= [e_1,e_2,···,e_K,e_{K+1},···,e_N] = diag[\lambda_1,\lambda_2,···,\lambda_K,\sigma_n^2,···,\sigma_n^2]$</p><p>对于所有$ i&gt;k$ 可得 $Re_i=\lambda_ie_i=\sigma^2_n e_i$</p><p>由于$Re_i = HR_SH^He_i+\sigma^2_n I e_i = HR_S H^H e_i +\sigma^2_n e_i$</p><p>可得 $HR_SH^He_i=0$ ; $i&gt;K$</p><p>则有当$i&gt;K$： $H^He_i=0$ ; $e_i^Hh(r_k,z_k)=0$ ; </p><p>这说明最小特征值所对应的特征矢量与目标拷贝场矢量正交，也就是说K个大特征值对应的特征矢量组成的K维子空间和其余N-K个特征矢量组成子空间相互正交，前者称为信号子空间，后者是信号子空间的补空间，称为噪声子空间。</p><p>由上式建立匹配场定位函数</p><p>$P(r,z)=\frac{1}{\sum_{i=K+1}^N |e_i^H h(r,z)|^2}$</p><p>将海洋声场按照距离深度划分成有限个网格点，来计算每个网格点上的$P(r,z)$值，并绘制在二维坐标上，就得到MUSIC算法的匹配场定位模糊表面。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;匹配场处理&lt;br&gt;
    
    </summary>
    
      <category term="math" scheme="http://www.shong.win/categories/math/"/>
    
    
      <category term="algorithm" scheme="http://www.shong.win/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>在世界中心呼唤爱的野兽</title>
    <link href="http://www.shong.win/2017/01/02/Socrates-in-Love/"/>
    <id>http://www.shong.win/2017/01/02/Socrates-in-Love/</id>
    <published>2017-01-02T13:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“荞麦面/神社庙会/寺院初诣 品味足足日式的新年，无论是知恩院的一百零八声撞钟，还是出来后随着人群走到高台寺，坐在篝火旁分发的热酒酿…”<br>一时，我竟不知道如何开头，学着王家卫的语气说，“那一刻，我很暖。”</p></blockquote><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/1.jpg" alt=""><br><em>12.31 日本京都知恩寺初诣 在等待新年的钟声</em><br> <a id="more"></a></p><p>今天才意识到，喜欢的乐队年前说的要休团，而1月1日在台北进行最后一场演出，若想要去他们的演唱会，得是很久以后了。他们完成韦瓦第计划，春夏秋冬四部曲，那我也按四季来讲一讲，这一年来的故事。</p><h2 id="春·日光"><a href="#春·日光" class="headerlink" title="春·日光"></a>春·日光</h2><p>我记得春天的时候，是关于很多很多的阳光与花的故事。</p><p>是去这个国家最东边的岛屿上看21岁的第一轮日出，开启我一生的黄金时代，时至今日，我仍然希望保留我的那颗少年心，是叫嚣世界的勇气，和对待生活温柔的心。在来霓虹之前讲过了，我也不再赘述。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/2.jpg" alt=""><br><em>4.10 想在21岁生日那天在东极岛看日出</em></p><p>是去三亚为热爱和信仰的东西挥洒汗水和燃烧青春，开始一点点的意识到自己的梦想，要为梦想去发力，有一次道别的时候，Lancer跟我说，“梦想之巅再见。”，现在看着伙伴站上了他曾经说想要站上的舞台，我也要加油。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/3.jpg" alt=""><br><em>4.27 海南三亚 MSP在进行舞蹈彩排 我在聚光灯下</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/4.jpg" alt=""><br><em>4.28 海南三亚微软创新杯总决赛 MSP合影</em></p><p>是在南京的第三年又去看了樱花，去赏了二月兰。也是年前种下的，潜伏了一个冬天的种子发了芽后，在春天开了花，虽然历经短暂的盛放后枯萎了，我也很感谢她的盛放。不过最近很开心的是，曾经以为被我遗弃，深深怨念着的花，在一轮又一轮的冬天后，还是会绽放的，希望遇见的人能明白，哪怕花瓣再微弱，她也准备了一个冬天。</p><h2 id="夏-狂热"><a href="#夏-狂热" class="headerlink" title="夏/狂热"></a>夏/狂热</h2><p>夏天，很多时间都在和院里的伙伴准备材料，跑手续，拿了早大的offer，曾经如此梦寐以求的霓虹自由行，最后没想到最后以留学的方式成了现实。也很开心一起来的伙伴里，有从大一开始就多少次互相伤害后来变成互相安抚的伙伴，夏天里那次那一夜的暴雨，和Aki在学校里到处找喝醉的伙伴，淋了个湿透的大家，现在想起来也仍是如此迷醉的一夜。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/5.jpg" alt=""><br><em>7.31 南京 30多度的夏夜 在李文正图书馆前大草坪露营</em></p><p>也因为要留在南京跑手续的缘故，选择了在南京实习，育儿网，实习前端工程师，虽然感觉实习的三个月里没为老东家做太多贡献，但还是挺感谢我的第一个“我司”的。</p><p>去写字楼的夏天，是不同于往常的，办公室里的空调与外卖，和外面街道上炽热的太阳，聒噪的蝉栖息在盛夏的梧桐树上，绿荫的街道，突如其来的暴雨，每日早餐的包子豆浆，当然也不能忘了我吃了将近半年的螺蛳粉。也托研究生学长的福住在了四牌楼（这里非常感谢炎帝），也开始有了对未来的想象，我会变成一个什么样的大人呢，由于我善良开朗又自在，我应该会更帅吧（。），以后工作的时候我想要住在公司旁，不用挤漫长的地铁，好好装扮我的小家，不会加太多班，下班后做一些自己感兴趣的事情。三年后，五年后，我们会变成什么样子呢？</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/6.jpg" alt=""><br><em>6.13-8.29 从写字楼里看到的夏天的南京</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/7.jpg" alt=""><br><em>8.24 南京 炎帝骑自行车接我下班 一起去吃望湖璇宫旋转餐厅 路上遇见的紫峰大厦和夕阳</em></p><p>然后在这座城市呆过了又一个完整的，闷热的，潮湿的，聒噪的夏天.上班的闲暇之余也有与友人相约，去上海找Annie和Mike玩，去找zn和陌陌做黑暗料理，也有多次约饭票去玩期待了很久的事情，入夜后的紫金山，承包了工作日里的溜冰场，在天空树上看见「我♥南京」。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/8.jpg" alt=""><br><em>9.18 南京 出国前和饭票约在天空树吃饭 外面的「我♥南京」</em></p><h2 id="秋：故事"><a href="#秋：故事" class="headerlink" title="秋：故事"></a>秋：故事</h2><p>秋天大概是关于离别和收获的，在夏天的末尾，和三火约在学校里拍了一套纪念写真，在操场的看台上，摄影师把M豆放在我脸上摆造型，巧克力豆慢慢融化，留下了彩色的残渍。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/9.jpg" alt=""><br><em>8.13 南京东南大学 天气太热了 只能在室内拍纪念写真</em> </p><p>然后是不断的和伙伴告别，也短暂的回了家，缺席了第四年的同乡会，很久没有在家过的中秋，就像是我前一阵子骑车去学校，看到路边金黄色的银杏树落叶，才想起很多年没有看过成都的银杏了。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/10.jpg" alt=""><br><em>8.26 南京东南大学焦廷标馆外 和川群的伙伴一起在新生入学时摆摊</em><br><em>这一年 和川群仍然有很多故事</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/11.jpg" alt=""><br><em>6.19 南京 大一学团联的伙伴，学长学姐们要毕业了</em></p><p>然后我开始启程，又去往另一个异国他乡，走上了自己选择的路。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/12.jpg" alt=""><br><em>9.20 上海浦东机场 飞机起飞前 计软伙伴的合影</em></p><p>曾经有个问题是，什么才是真正的成熟？撇去关于感情和世故，能为自己做决定，也能为自己的决定负责，这大概就也能算成熟了吧。其实我也未曾后悔过来到南京，现在自然也是不会后悔，因为，我相信眼界的力量。十六岁的时候，说想要哆啦A梦里的道具，未来日记和任意门，想要的东西和想去的地方，瞬间就可以。现在，未来依靠自己的双手去谱写，走路去旅行，要去看更广大的世界，一直没有变过。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/13.jpg" alt=""><br><em>9.24 日本福冈北九州 入学式的正装</em></p><h2 id="冬-未了"><a href="#冬-未了" class="headerlink" title="冬 未了"></a>冬 未了</h2><p>后来我开始慢慢习惯了离开南京的日子，人生大概是个不断跳出舒适圈，不断甩下包袱，然后才能不断向前的过程。开始习惯了住在离海10公里，偶尔心情不好便能去看海，每天自己做饭，上课，骑车。冬假一个人去了关西，大阪奈良和京都，在语言不熟的国度，一个人旅行会孤独么？我大概真的很喜欢现在自己这样的状态，说起来可能是自私，我可以就只照顾自己的心情，旅途中随心所欲，遇见有趣的人可以搭讪，而也不用花太多的精力去和他人相处。其实我能享受一个人的过法，也会去珍惜和伙伴一起的生活。所以我深刻的记得，有一次我和饭票约出去玩，一天下来走了很远，她很累了。晚上从颐和书馆走回鼓楼地铁站，一路我俩都很安静，路过紫峰大厦，我问她，觉得两个人不说话会尴尬么？所幸的是，我觉得我好像遇见了很好的partner。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/14.jpg" alt=""><br><em>7.27 闷热的潮湿的夏天 和饭票走在入夜后的紫金山上玩</em></p><p>日本的冬天和南京大概是不一样的，去年冬天还是考试周，和川群的伙伴约图书馆，考试前夕连夜进城去看下雪的南京，炸鸡配啤酒。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/15.jpg" alt=""><br><em>1.22 南京 最后一年短时间内下了两场雪 回家前一天的凌晨在学校里拍照</em></p><p>今年呢，跨年还是像去年在紫金山顶时一样冷，不过会有了不一样的期待。不过去年的孔明灯，承载着不一样的愿望和不一样的心事，在回忆里也开始变得很美。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/16.jpg" alt=""><br><em>1.1 南京紫金山 等待新年第一轮日出</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/17.jpg" alt=""><br><em>12.31 日本京都音羽山 最后一轮日落</em></p><p>2016年就这样再见了，当我试图去叩问自己，这一年，我有什么遗憾么，下一年，我有什么希望么？思来想去，居然是觉得，没有，我接纳了发生的所有事实。</p><p>甚至我在回北九州的游轮上继续反思，我是接纳了所有的我。无论是卑怯胆小懦弱的我，还是年少勇敢随心的我，无论了当花枯萎而愤怒将其丢弃的我，还是自己选择了hell模式来到异国的我。无论是待人接物总是内心戏太多的我，还是领悟不要逃避要去勇敢面对的我。</p><p>这些，都是真的我，都造就了今时今日的我，出现在了你的面前。</p><p>而我，要接纳所有真实的我，去反思，去改善，然后努力成为一个更好的，更温柔，更能实现自我价值的我。</p><p>至此，关于是21岁前最重要的eva，以及小王子和花的故事，我都将其领悟，收入行囊。不会再去害怕心之壁和玫瑰的刺。</p><blockquote><p>花就算凋零了，只剩下淡淡的香味，也会向着太阳散发出香气。<br>渐渐的那朵花的香味也会扁担，我们也会长大成熟。不过呢，那朵花，一定会在某处继续绽放。是呢，我们会一直一直，实现那朵花的愿望。<br>——《未闻花名》</p></blockquote><p>是呢，我也终于领悟到了，《在世界中心呼唤爱的野兽》，eva剧场版里最后一话，我接纳了所有的自我。</p><p>新的一年有什么愿望？</p><p>我想去今年春天去东京，想回国和伙伴拍毕业纪念写真，顺利毕业！想好好写代码，找到打工，去实习，还有帮伙伴求的御守也能显灵！</p><p>更勇敢，去做想要做的事情！</p><p>世界很温柔，我也要更温柔！</p><blockquote><p>「おめでとう」「恭喜你呀」<br>Take care of yourself.</p></blockquote><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/18.jpg" alt="">    </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“荞麦面/神社庙会/寺院初诣 品味足足日式的新年，无论是知恩院的一百零八声撞钟，还是出来后随着人群走到高台寺，坐在篝火旁分发的热酒酿…”&lt;br&gt;一时，我竟不知道如何开头，学着王家卫的语气说，“那一刻，我很暖。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://oljkaeely.bkt.clouddn.com/static/image/Socrates-in-Love/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;em&gt;12.31 日本京都知恩寺初诣 在等待新年的钟声&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>Travelling Salesman Problem in Python</title>
    <link href="http://www.shong.win/2016/12/21/Travelling-Salesman-Problem/"/>
    <id>http://www.shong.win/2016/12/21/Travelling-Salesman-Problem/</id>
    <published>2016-12-21T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city?<br><a id="more"></a><br>NP-hard problem in combinatorial optimization</p><p>TSP can be regard as a graph problem can can be modelled as an undirected weighted graph:</p><table><thead><tr><th>Cities</th><th>Paths</th><th>The path’s distance</th></tr></thead><tbody><tr><td>the graph’s vertices</td><td>the graph’s edges</td><td>the edge’s weight</td></tr></tbody></table><p>It is a minimization problem starting and finishing at a specified vertex after having visited each other vertex exactly once. </p><p>Because the distance in Berlin52.tsp is coordinate distance, so it is a symmetric problem.</p><p>And I try to improve the algorithms, so I will introduce some improvement in GA and ACO Algorithm.</p><h2 id="GA"><a href="#GA" class="headerlink" title="GA"></a>GA</h2><p>Genetic Algorithm (GA) is a metaheuristic inspired by the process of natural selection that belongs to the larger class of evolutionary algorithms (EA). Genetic algorithms are commonly used to generate high-quality solutions to optimization and search problems by relying on bio-inspired operators such as mutation, crossover and selection.</p><h3 id="Flow-chart"><a href="#Flow-chart" class="headerlink" title="Flow chart"></a>Flow chart</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/ga-flow.png" alt=""></p><h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><p>1000 iterations<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/ga_result_1000.jpg" alt=""></p><p>1000000 iterations with the same rate in GA expression.<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/ga_result_1000000.jpg" alt=""></p><p>So we can find that the rate of descent is really slow. especially campared with other algorithms.</p><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><p>In order to know the parameters’ efficiency in the expression, especially in the crossRate and mutationRate, I calculate the crossRate from 0-0.5 stepped by 0.1, mutationRate from 0-0.5 stepped by 0.05, iterations times is 10000, and show the temporary result of each 100 iterations.</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/diagram.jpg" alt=""><br>And the calculate the decreate rate of each state, with considering 10 results, using the method of successive minus.<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/ga_rate_test.jpg" alt=""><br><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/descreate_rate.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/descreate_rate_2.jpg" alt=""></p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>So we can find that the parameter in expression of GA, if you want to steepest descent to the final result, maybe you can choose crossRate as 0.4 and mutationRate as 0.35.</p><h2 id="ACO"><a href="#ACO" class="headerlink" title="ACO"></a>ACO</h2><p>Ants of some species (initially) wander randomly, and upon finding food return to their colony while laying down pheromone trails. If other ants find such a path, they are likely not to keep travelling at random, but instead to follow the trail, returning and reinforcing it if they eventually find food.</p><p>Over time, however, the pheromone trail starts to evaporate, thus reducing its attractive strength. The more time it takes for an ant to travel down the path and back again, the more time the pheromones have to evaporate. A short path, by comparison, gets marched over more frequently, and thus the pheromone density becomes higher on shorter paths than longer ones. Pheromone evaporation also has the advantage of avoiding the convergence to a locally optimal solution. If there were no evaporation at all, the paths chosen by the first ants would tend to be excessively attractive to the following ones. In that case, the exploration of the solution space would be constrained. The influence of pheromone evaporation in real ant systems is unclear, but it is very important in artificial systems.</p><p>The overall result is that when one ant finds a good (i.e., short) path from the colony to a food source, other ants are more likely to follow that path, and positive feedback eventually leads to all the ants following a single path. The idea of the ant colony algorithm is to mimic this behavior with “simulated ants” walking around the graph representing the problem to solve.</p><p>The probability of ants moving from position i to position j at time t is expressed as follows:</p><p>$p^k_{ij} = $</p><h3 id="Pseudo-Code"><a href="#Pseudo-Code" class="headerlink" title="Pseudo Code"></a>Pseudo Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">procedure ACO_MetaHeuristic</span><br><span class="line">  while(not_termination)</span><br><span class="line">     generateSolutions()</span><br><span class="line">     daemonActions()</span><br><span class="line">     pheromoneUpdate()</span><br><span class="line">  end while</span><br><span class="line">end procedure</span><br></pre></td></tr></table></figure><h3 id="Improvement-1"><a href="#Improvement-1" class="headerlink" title="Improvement"></a>Improvement</h3><ul><li><p>Use greedy algorithm to initialize the ACO of TSP.</p><p>Greedy algorithm is an algorithmic paradigm that follows the problem solving heuristic of making the locally optimal choice at each stage[1] with the hope of finding a global optimum. In many problems, a greedy strategy does not in general produce an optimal solution, but nonetheless a greedy heuristic may yield locally optimal solutions that approximate a global optimal solution in a reasonable time.</p></li><li>Rotate the matrix of cities to avoid to fail into the local optimization.</li></ul><h3 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/aco_result_1000.jpg" alt=""></p><h2 id="PSO"><a href="#PSO" class="headerlink" title="PSO"></a>PSO</h2><p>A basic variant of the PSO algorithm works by having a population (called a swarm) of candidate solutions (called particles). These particles are moved around in the search-space according to a few simple formulae. </p><p>The movements of the particles are guided by their own best known position in the search-space as well as the entire swarm’s best known position. When improved positions are being discovered these will then come to guide the movements of the swarm. The process is repeated and by doing so it is hoped, but not guaranteed, that a satisfactory solution will eventually be discovered.</p><p>Formally, let f: ℝn → ℝ be the cost function which must be minimized. The function takes a candidate solution as argument in the form of a vector of real numbers and produces a real number as output which indicates the objective function value of the given candidate solution. The gradient of f is not known. The goal is to find a solution a for which f(a) ≤ f(b) for all b in the search-space, which would mean a is the global minimum. Maximization can be performed by considering the function h = -f instead.</p><p>Let S be the number of particles in the swarm, each having a position xi ∈ ℝn in the search-space and a velocity vi ∈ ℝn. Let pi be the best known position of particle i and let g be the best known position of the entire swarm. A basic PSO algorithm is then:</p><h3 id="Pseudo-Code-1"><a href="#Pseudo-Code-1" class="headerlink" title="Pseudo Code"></a>Pseudo Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">for each particle i = 1, ..., S do</span><br><span class="line">   Initialize the particle&apos;s position with a uniformly distributed random vector: xi ~ U(blo, bup)</span><br><span class="line">   Initialize the particle&apos;s best known position to its initial position: pi ← xi</span><br><span class="line">   if f(pi) &lt; f(g) then</span><br><span class="line">       update the swarm&apos;s best known  position: g ← pi</span><br><span class="line">   Initialize the particle&apos;s velocity: vi ~ U(-|bup-blo|, |bup-blo|)</span><br><span class="line">while a termination criterion is not met do:</span><br><span class="line">   for each particle i = 1, ..., S do</span><br><span class="line">      for each dimension d = 1, ..., n do</span><br><span class="line">         Pick random numbers: rp, rg ~ U(0,1)</span><br><span class="line">         Update the particle&apos;s velocity: vi,d ← ω vi,d + φp rp (pi,d-xi,d) + φg rg (gd-xi,d)</span><br><span class="line">         Update the particle&apos;s position: xi ← xi + vi</span><br><span class="line">         if f(xi) &lt; f(pi) then</span><br><span class="line">            Update the particle&apos;s best known position: pi ← xi</span><br><span class="line">            if f(pi) &lt; f(g) then</span><br><span class="line">               Update the swarm&apos;s best known position: g ← pi</span><br></pre></td></tr></table></figure><h3 id="Result-2"><a href="#Result-2" class="headerlink" title="Result"></a>Result</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/Travelling-Salesman-Problem/pso_result_1000.jpg" alt=""></p><h3 id="Conclusion-1"><a href="#Conclusion-1" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>We can find that the PSO is the slowest descent to the result, and it cost too much time than others.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://en.wikipedia.org/wiki/Genetic_algorithm" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Genetic_algorithm</a></p><p><a href="https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms</a></p><p><a href="https://en.wikipedia.org/wiki/Particle_swarm_optimization" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Particle_swarm_optimization</a></p><h1 id="Appendix-Source-Code-in-TSP"><a href="#Appendix-Source-Code-in-TSP" class="headerlink" title="Appendix - Source Code in TSP"></a>Appendix - Source Code in TSP</h1><p><a href="https://github.com/Yvon-Shong/Waseda/tree/master/Computational_Intelligence/TSP" target="_blank" rel="noopener">github</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city?&lt;br&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="python" scheme="http://www.shong.win/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Sequence Searching and BLAST</title>
    <link href="http://www.shong.win/2016/12/03/bioinformatics/BLAST/"/>
    <id>http://www.shong.win/2016/12/03/bioinformatics/BLAST/</id>
    <published>2016-12-03T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>Objective:  The goal of this module is to retrieve genetic sequence data from the NCBI database that identifies the <em>‘Wolbachia Sequence’</em> you generated. The Basic Local Alignment Search Tool (BLAST) is an essential tool for comparing a DNA or protein sequence to other sequences in various organisms.  Two of the most common uses are to </p><a id="more"></a><p>a) determine the identity of a particular sequence and </p><p>b) identify closely related organisms that also contain this particular DNA sequence.</p><p><strong>Using BLAST to identify a fake sequence and your ‘Wolbachia Sequence’</strong>: Begin by linking to the NCBI homepage (<a href="http://www.ncbi.nlm.nih.gov/" target="_blank" rel="noopener">www.ncbi.nlm.nih.gov/</a>). Select <strong>‘BLAST’</strong> in top menu bar.  With your new knowledge of Sequence Searching and BLAST, let’s begin with a sequence you make up and then your <em>Wolbachia</em> sequence.</p><ul><li><p><strong>Select ‘nucleotide BLAST’</strong> under the Basic BLAST category</p></li><li><p><strong>Input your own nucleotides (A,T,G,C) that fill one complete line</strong> into the Search Box. This is referred to as the query sequence.</p></li><li><p><strong>VERY IMPORTANT - Click on the circle</strong> for ‘Others (nr etc.) under Choose Search Set</p></li><li><p><strong>Select ‘BLAST!’</strong> at end of page. A new window appears.</p></li><li><p>Wait for the results page to automatically launch.  The wait time depends on the type of search you are doing and how many other researchers are using the NCBI website at the same time you are!</p></li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST1.1.jpg" alt="BLAST1.1.jpg"><br><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST1.2.jpg" alt="BLAST1.2.jpg"><br><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST1.3.jpg" alt="BLAST1.3.jpg"> </p><ol><li><p>Did your fake sequence produce a significant alignment (probably not since a significant hit is below E-10 usually): <strong>Yes</strong></p><p>If yes, how many: <strong>98</strong></p></li><li><p>How many sequences did it search in the database?: <strong>98</strong></p></li><li>How many nucleotide letters did it search in the database?: <strong>83 letters</strong></li></ol><ul><li><p><strong>Select Home</strong> at the top of the BLAST page.</p></li><li><p><strong>Select ‘nucleotide BLAST’</strong> under the Basic BLAST category</p></li><li><p><strong>Enter your Wolbachia sequence below into the Search box.</strong> (At this point in the lab, if students generated their own Wolbachia sequences, they could BLAST their own sequence. Here everyone will BLAST the same sequence provided to you below)</p></li></ul><blockquote><p>>Your <em>Wolbachia</em> Sequence</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GTTGCAGCAATGGTAGACTCAACGGTAGCAATAACTGCAGGACCTAGAGGAAAAACAGTAGGGATTAATAAGCCCTATGGAGCACCAGAAATTACAAAAGATGGTTATAAGGTGATGAAGGGTATCAAGCCTGAAAAACCATTAAACGCTGCGATAGCAAGCATCTTTGCACAGAGTTGTTCTCAATGTAACGATAAAGTTGGTGATGGTACAACAACGTGCTCAATACTAACTAGCAACATGATAATGGAAGCTTCAAAATCAATTGCTGCTGGAAACGATCGTGTTGGTATTAAAAACGGAATACAGAAGGCAAAAGATGTAATATTAAAGGAAATTGCGTCAATGTCTCGTACAATTTCTCTAGAGAAAATAGACGAAGTGGCACAAGTTGCAATAATCTCTGCAAATGGTGATAAGGATATAGGTAACAGTATCGCTGATTCCGTGAAAAAAGTTGGAAAAGAGGGTGTAATAACTGTTGAAGAGAGTAAAGGTTCAAAAGAGTTAGAAGTTGAGCTGACTACTGGCATGCAATTTGATCGCGGTTATCTCTCTCCGTATTTTATTACAAATAATGAAAAAATGATCGTGGAGCTTGATAATCCTTATCTATTAATTACAGAGAAAAAATTAAATATTATTCAACCTTTACTTCCTATTCTTGAAGCTATTGTTAAATCTGGTAAACCTTTGGTTATTATTGCAGAGGATATCGAAGGTGAAGCATTAAGCACTTTAGTTATCAATAAATTGCGTGGTGGTTTAAAAGTTGCTGCAGTAAAAGCTCCAGGTTTTGGTGACAGAAGAAAGGAGATGCTCGAAGACATAGCAACTTTAACTGGTGCTAAGTACGTCATAAAAGATGAACTT</span><br></pre></td></tr></table></figure><ul><li>Select ‘BLAST!’ A new window appears</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST2.1.jpg" alt="BLAST2.1.jpg"> </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST2.2.jpg" alt="BLAST2.2.jpg"> </p><ol><li><p>How long (query length) is the <em>Wolbachia</em> sequence that you used to search the database?: <strong>873 letters</strong></p></li><li><p>What is the E-value and Max score of the best hit (in this case, the first matching sequence)?<br><em>Wolbachia endosymbiont of Nasonia longicornis GroEL (groEL) gene, partial cds</em> with E-value:0.0 and Max score: <strong>1613 bits(873)</strong></p></li><li><p>What is the most likely identity of this sequence? (click on the blue link to the left of the top hit) </p><p>Wolbachia endosymbiont of Nasonia longicornis GroEL (groEL) gene, partial cds</p><p>Sequence ID: AY714811.1</p><p>Identities:873/873(100%); Gaps:0/873(0%); Strand:Plus/Plus</p></li><li><p>What is the title of the scientific publication that reported this sequence (click on the PUBMED 16267140 link)</p><p> <strong>Microbiology</strong> <a href="https://www.ncbi.nlm.nih.gov/pubmed/16339946" target="_blank" rel="noopener">PUBMED 16339946 link</a></p></li></ol><ul><li><em>Go back twice</em> when you’re done.</li><li><em>Select Home</em> at the top of the BLAST page.</li><li><em>Select ‘nucleotide BLAST’</em> under the Basic BLAST category</li><li><em>Now enter only the first 135 base pairs of your </em>Wolbachia<em> sequence below into the Search box.</em></li></ul><blockquote><p>>Your <em>Wolbachia</em> Sequence</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GTTGCAGCAATGGTAGACTCAACGGTAGCAATAACTGCAGGACCTAGAGGAAAAACAGTAGGGATTAATAAGCCCTATGGAGCACCAGAAATTACAAAAGATGGTTATAAGGTGATGAAGGGTATCAAGCCTGAA</span><br></pre></td></tr></table></figure><ul><li>As you did before, select ‘BLAST!’ A new window appears</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST3.1.jpg" alt="BLAST3.1.jpg"> </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLAST3.2.jpg" alt="BLAST3.2.jpg"> </p><ol><li><p>What is the E-value and Max score of the best hit (the first matching sequence)?<br><em>Wolbachia endosymbiont of Nasonia longicornis GroEL (groEL) gene, partial cds</em> with the E-value:6e-63 and the Max score: <strong>250</strong></p></li><li><p>What do you observe about the E-values?</p><p> <strong>It is a small decimal instead of a integer.</strong></p></li><li><p>Is the identity of the best hit different from when you used the complete nucleotide sequence?</p><p><strong>Yes, its Identities is 135/135(100%) but the Expect value is 6e-63, instead of 0.</strong></p></li><li><p>Is it the same gene as identified before?: <strong>No</strong></p></li><li><p>From the two BLAST searches, what can you deduce about how the length of a query sequence affects your confidence in the sequence search?  </p><p><strong>If we provide the longer sequence, we can find the more exact sequence with the max score and 0 E-value.</strong></p></li></ol><ul><li>Close all web windows. This exercise is now complete. You successfully mastered one of the state-of-the-art tools used by most molecular and evolutionary biology researchers today. There is a lot of information on the NCBI website. Feel free to explore the website and you can find more tutorials at:<br><a href="http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/information3.html" target="_blank" rel="noopener">www.ncbi.nlm.nih.gov/Education/BLASTinfo/information3.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Objective:  The goal of this module is to retrieve genetic sequence data from the NCBI database that identifies the &lt;em&gt;‘Wolbachia Sequence’&lt;/em&gt; you generated. The Basic Local Alignment Search Tool (BLAST) is an essential tool for comparing a DNA or protein sequence to other sequences in various organisms.  Two of the most common uses are to &lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="js" scheme="http://www.shong.win/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Affine Gap Penalty Sequence Alignment</title>
    <link href="http://www.shong.win/2016/11/10/bioinformatics/AffineGapPenaltySequenceAlignment/"/>
    <id>http://www.shong.win/2016/11/10/bioinformatics/AffineGapPenaltySequenceAlignment/</id>
    <published>2016-11-10T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Gap_penalty" target="_blank" rel="noopener">Affine Gap Penalty</a></p><p><em>Calculate the score for the DNA sequence alignment shown below, using the scoring matrix below.  Use an affine gap penalty to score the gaps, with -11 for opening the gap and -1 for each additional position in the gap.  (“Affine gap penalty” refers to a situation when the gap opening and gap extension penalties are not the same.  The gap opening penalty should be greater than the gap extension penalty.)</em></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GACTACGATCCGTATACGCACA---GGTTCAGAC        </span><br><span class="line">||||||    ||||||||||||   |||||||||       </span><br><span class="line">GACTACAGCTCGTATACGCACACATGGTTCAGAC</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">G</th><th style="text-align:center">T</th><th style="text-align:center">C</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">-5</td><td style="text-align:center">-7</td><td style="text-align:center">-7</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">-5</td><td style="text-align:center">2</td><td style="text-align:center">-7</td><td style="text-align:center">-7</td></tr><tr><td style="text-align:center">T</td><td style="text-align:center">-7</td><td style="text-align:center">-7</td><td style="text-align:center">2</td><td style="text-align:center">-5</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">-7</td><td style="text-align:center">-7</td><td style="text-align:center">-5</td><td style="text-align:center">2</td></tr></tbody></table><p>JavaScript source code:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> seq2 = <span class="string">"GACTACGATCCGTATACGCACAGGTTCAGAC"</span>;</span><br><span class="line"><span class="keyword">var</span> seq1 = <span class="string">"GACTACAGCTCGTATACGCACACATGGTTCAGAC"</span>;</span><br><span class="line"><span class="keyword">var</span> gap_opening_penalty=<span class="number">-11</span>;</span><br><span class="line"><span class="keyword">var</span> gap_extension_penalty=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">var</span> matchMatrix=[</span><br><span class="line">    [<span class="number">2</span>,<span class="number">-5</span>,<span class="number">-7</span>,<span class="number">-7</span>],</span><br><span class="line">    [<span class="number">-5</span>,<span class="number">2</span>,<span class="number">-7</span>,<span class="number">-7</span>],</span><br><span class="line">    [<span class="number">-7</span>,<span class="number">-7</span>,<span class="number">2</span>,<span class="number">-5</span>],</span><br><span class="line">    [<span class="number">-7</span>,<span class="number">-7</span>,<span class="number">-5</span>,<span class="number">2</span>]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> matrix= <span class="keyword">new</span> <span class="built_in">Array</span>(seq1.length+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p=<span class="number">0</span>;p&lt;seq1.length+<span class="number">1</span>;p++)</span><br><span class="line">&#123;</span><br><span class="line">    matrix[p]=<span class="keyword">new</span> <span class="built_in">Array</span>(seq2.length+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> q=<span class="number">0</span>;q&lt;seq2.length+<span class="number">1</span>;q++)</span><br><span class="line">    &#123;</span><br><span class="line">        matrix[p][q]=&#123;<span class="attr">value</span>:<span class="literal">null</span>,<span class="attr">last</span>:<span class="literal">null</span>,<span class="attr">flag</span>:<span class="literal">null</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// find the value</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;seq1.length+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;seq2.length+<span class="number">1</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result=value(i,j);</span><br><span class="line">        </span><br><span class="line">        matrix[i][j]=&#123;</span><br><span class="line">            value:result.value,</span><br><span class="line">            last:result.last,</span><br><span class="line">            flag:result.flag</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">value</span>(<span class="params">i,j</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//initial</span></span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">last</span>:<span class="literal">null</span>,<span class="attr">flag</span>:<span class="literal">null</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> value=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> max=nearMax(i,j);</span><br><span class="line">    </span><br><span class="line">    matrix[i][j].last=max.position;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(max.position[<span class="number">0</span>]==i<span class="number">-1</span> &amp;&amp; max.position[<span class="number">1</span>]==j<span class="number">-1</span>)</span><br><span class="line">    &#123;    </span><br><span class="line">         value=max.value+match(i,j);</span><br><span class="line">         <span class="keyword">return</span> &#123;<span class="attr">value</span>:value,<span class="attr">last</span>:max.position,<span class="attr">flag</span>:<span class="string">"match"</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        value=max.value+gap(i,j);</span><br><span class="line">         <span class="keyword">return</span> &#123;<span class="attr">value</span>:value,<span class="attr">last</span>:max.position,<span class="attr">flag</span>:<span class="string">"gap"</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//find the max value and its location near the grid</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nearMax</span>(<span class="params">m,n</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> value=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> last=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>&amp;&amp;n&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">value</span>:matrix[<span class="number">0</span>][n<span class="number">-1</span>].value,<span class="attr">position</span>:[<span class="number">0</span>,n<span class="number">-1</span>]&#125;;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">value</span>:matrix[m<span class="number">-1</span>][<span class="number">0</span>].value,<span class="attr">position</span>:[m<span class="number">-1</span>,<span class="number">0</span>]&#125;;</span><br><span class="line">    <span class="keyword">if</span>(m*n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        max=<span class="built_in">Math</span>.max(matrix[m<span class="number">-1</span>][n<span class="number">-1</span>].value,matrix[m][n<span class="number">-1</span>].value,matrix[m<span class="number">-1</span>][n].value);</span><br><span class="line">        <span class="keyword">if</span>(max==matrix[m<span class="number">-1</span>][n<span class="number">-1</span>].value)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">value</span>:matrix[m<span class="number">-1</span>][n<span class="number">-1</span>].value,<span class="attr">position</span>:[m<span class="number">-1</span>,n<span class="number">-1</span>]&#125;;</span><br><span class="line">        <span class="keyword">if</span>(max==matrix[m][n<span class="number">-1</span>].value)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">value</span>:matrix[m][n<span class="number">-1</span>].value,<span class="attr">position</span>:[m,n<span class="number">-1</span>]&#125;;</span><br><span class="line">        <span class="keyword">if</span>(max==matrix[m<span class="number">-1</span>][n].value)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">value</span>:matrix[m<span class="number">-1</span>][n].value,<span class="attr">position</span>:[m<span class="number">-1</span>,n]&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gap</span>(<span class="params">i,j</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> lp=matrix[i][j].last;</span><br><span class="line">    <span class="keyword">if</span>(matrix[lp[<span class="number">0</span>]][lp[<span class="number">1</span>]].flag==<span class="string">"gap"</span>)</span><br><span class="line">        <span class="keyword">return</span> gap_extension_penalty;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> gap_opening_penalty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">i,j</span>)</span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">AGTC</span>(<span class="params">str</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(str==<span class="string">"A"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(str==<span class="string">"G"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(str==<span class="string">"T"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(str==<span class="string">"C"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> matchMatrix[AGTC(seq1.charAt(i<span class="number">-1</span>))][AGTC(seq2.charAt(j<span class="number">-1</span>))];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> output= <span class="keyword">new</span> <span class="built_in">Array</span>(seq1.length+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p1=<span class="number">0</span>;p1&lt;seq1.length+<span class="number">1</span>;p1++)</span><br><span class="line">&#123;</span><br><span class="line">    output[p1]=<span class="keyword">new</span> <span class="built_in">Array</span>(seq2.length+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i0=<span class="number">0</span>;i0&lt;seq1.length+<span class="number">1</span>;i0++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j0=<span class="number">0</span>;j0&lt;seq2.length+<span class="number">1</span>;j0++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> t=matrix[i0][j0].value;</span><br><span class="line">        <span class="keyword">if</span>(t &gt;= <span class="number">10</span>)</span><br><span class="line">            output[i0][j0]=<span class="string">" "</span>+t;</span><br><span class="line">        <span class="keyword">if</span>(t &gt;= <span class="number">0</span> &amp;&amp; t &lt; <span class="number">10</span>)</span><br><span class="line">            output[i0][j0]=<span class="string">"  "</span>+t;</span><br><span class="line">        <span class="keyword">if</span>(t &gt; <span class="number">-10</span> &amp;&amp; t &lt; <span class="number">0</span>)</span><br><span class="line">            output[i0][j0]=<span class="string">" "</span>+t;</span><br><span class="line">        <span class="keyword">if</span>(t &lt;= <span class="number">-10</span>)</span><br><span class="line">            output[i0][j0]=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//output the matrix</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i1=<span class="number">0</span>;i1&lt;seq1.length+<span class="number">1</span>;i1++)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> row=output[i1].join(<span class="string">" "</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(row);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//TO-DO</span></span><br><span class="line"><span class="comment">//output the path</span></span><br></pre></td></tr></table></figure></p><p>When <strong>gap_opening_penalty = -11</strong> and <strong>gap_extension_penalty = -1;</strong></p><p>Its output:</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result1.jpg" alt=""></p><p>Processed by Excel:</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result1.5.jpg" alt=""></p><p>So its final score for the DNA sequence alignment is <strong>21</strong>.</p><h2 id="Nonaffine-Gap-Penalty"><a href="#Nonaffine-Gap-Penalty" class="headerlink" title="Nonaffine Gap Penalty"></a>Nonaffine Gap Penalty</h2><p><em>How would the score change if you were to use a nonaffine gap penalty?  To answer the question, try a nonaffine penalty of -2, and then -6.</em></p><p>When <strong>gap_opening_penalty = -2</strong> and <strong>gap_extension_penalty = -6;</strong></p><p>Its output processed by Excel:</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result2.5.jpg" alt=""></p><p>So its final score for the DNA sequence alignment is <strong>34</strong>.</p><h1 id="Answer-the-following-questions-using-the-BLOSUM62-matrix"><a href="#Answer-the-following-questions-using-the-BLOSUM62-matrix" class="headerlink" title="Answer the following questions using the BLOSUM62 matrix."></a>Answer the following questions using the BLOSUM62 matrix.</h1><h2 id="Part-of-BLOSUM62-matrix"><a href="#Part-of-BLOSUM62-matrix" class="headerlink" title="Part of BLOSUM62 matrix"></a>Part of <a href="https://en.wikipedia.org/wiki/BLOSUM" target="_blank" rel="noopener">BLOSUM62 matrix</a></h2><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C</th><th style="text-align:center">S</th><th style="text-align:center">T</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">9</td><td style="text-align:center">-1</td><td style="text-align:center">-1</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">-1</td><td style="text-align:center">4</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">T</td><td style="text-align:center">-1</td><td style="text-align:center">1</td><td style="text-align:center">5</td></tr></tbody></table><p><em>Using this matrix, two aligned cysteines (C) would receive a score of 9 while two aligned threonines (T) would only receive a score of 5.  What can you conclude about cysteine relative to threonine?</em></p><p>First of all, let us know about the construction of BLOSUM matrix.</p><ol><li><p>Eliminating Sequences</p><p> Eliminating the sequences that are more than r % identical. There are two ways to eliminate the sequences. It can be done either by removing sequences from the block or just by finding similar sequences and replace them by new sequences which could represent the cluster. Eliminating is done to avoid bias of the result in favor of highly similar proteins.</p></li><li><p>Calculating Frequency &amp; Probability</p><p> A database storing the sequence alignments of the most conserved regions of protein families. These alignments are used to derive the BLOSUM matrices. Only the sequences with a percentage of identity higher are used. By using the block, counting the pairs of amino acids in each column of the multiple alignment.</p></li><li><p>Log odd ratio</p><p> It gives the ratio of the occurrence each amino acid combination in the observed data to the expected value of occurrence of the pair. It is rounded off and used in the substitution matrix.</p><p> $ LogOddRatio=2\log _{2}{\left({\frac {P\left(O\right)}{P\left(E\right)}}\right)}$</p><p> In which $ P\left(O\right)$ is the possibility of observed and $ P\left(E\right)$ is the possibility of expected.</p></li><li><p>BLOSUM Matrices</p><p> The odds for relatedness are calculated from log odd ratio, which are then rounded off to get the substitution matrices BLOSUM matrices.</p></li><li><p>Score of the BLOSUM matrices</p><p> To calculate a BLOSUM matrix, the following equation is used:<br> $ S_{ij}=\left({\frac {1}{\lambda }}\right)\log {\left({\frac {p_{ij}}{q_{i}*q_{j}}}\right)}$<br> Here, $ p_{ij}$ is the probability of two amino acids $ i$  and $ j$ replacing each other in a homologous sequence, and $ q_{i}$ and $ q_{j}$ are the background probabilities of finding the amino acids $ i$ and $j$ in any protein sequence. The factor $ \lambda $ is a scaling factor, set such that the matrix contains easily computable integer values.</p></li></ol><p><strong>The reasons why the scores of cysteines (C) and threonines (T) compared with itself are different can be list as follows.</strong></p><ul><li><p>The amino acids in the proteins is different, so the frequency of the proteins and the probability of the amino acids are total different.</p></li><li><p>The construction of the proteins are different, like the number of amino acids, the length of the proteins, the 3D constructure of the proteins and more.</p></li></ul><p>So they lead to the result that one’s similarity that it is compared with itself is greater than that of another. </p><h2 id="Another-BLAST-Scoring-Matrix"><a href="#Another-BLAST-Scoring-Matrix" class="headerlink" title="Another BLAST Scoring Matrix"></a>Another BLAST Scoring Matrix</h2><p><em>A serine (S) aligned with a cysteine (C) would receive a negative score (-1) while a serine aligned with a threonine would receive a positive score (1).  Offer a possible explanation for this in terms of physicochemical properties of the amino acid side chains.</em></p><p>As what I have mentioned, it is the reason why the score is different when two different proteins are compared. For example, T-S -&gt; 1, S-C -&gt; -1, although it is that one protein is compared with another total different protein.</p><p>I think that:</p><ul><li><p>Maybe there are two different amino acids in two proteins, but they have the same function, which could change the value of similarity.</p></li><li><p>Although they are two different proteins, the subsequences of amino acids sequences may have high value of similarity.</p></li><li><p>Because of the space structure of the protein, and the fault tolerance of the properties of proteins, some amino acids in sequence don’t matter. So it could change the value of similarity.</p></li></ul><h2 id="Dynamic-Programming-Algorithm"><a href="#Dynamic-Programming-Algorithm" class="headerlink" title="Dynamic Programming Algorithm"></a>Dynamic Programming Algorithm</h2><p><em>The bestng an alignment score.  Use the BLOSUM62 matrix alignment of the two amino acid sequences “LDS” and “LNS” is obvious (it’s shown below).  Given a scoring system, you could easily calculate an alignment score.  Set up a matrix and use the dynamic programming algorithm to “prove” that this is the best alignment by calculating x (see Powerpoint notes) to score aligned residues, and use a gap penalty of -1.  (You may hand write the matrix in your homework rather than typing it if you like.)</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">seq1   LDS</span><br><span class="line">       | |</span><br><span class="line">seq2   LNS</span><br></pre></td></tr></table></figure><p>And its output :</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result2.7.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result2.9.jpg" alt=""></p><p>So the best-match path is </p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">seq1</td><td style="text-align:center">L</td><td style="text-align:center">D</td><td style="text-align:center">S</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">\</td><td style="text-align:center"></td><td style="text-align:center"></td><td>\</td><td></td></tr><tr><td style="text-align:center">seq2</td><td style="text-align:center">L</td><td style="text-align:center">N</td><td style="text-align:center">S</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">match</td><td style="text-align:center">mismatch</td><td style="text-align:center">match</td></tr></tbody></table><h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><p><em>Find the optimal global alignment of the two sequences Seq1: THISLINE and Seq2: ISALIGNED based on the BLOSUM62 matrix with linear gap penalty of -4.</em></p><p>The Matrix of BLOSUM62 is copied from <a href="http://stackoverflow.com/questions/38647306/blosum62-or-45-scoring-in-javascript" target="_blank" rel="noopener">stackoverflow</a> :</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/BLOSUM62.jpg" alt=""></p><p>JavaScript Source Code Snippets:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> seq2 = <span class="string">"ISALIGNED"</span>;</span><br><span class="line"><span class="keyword">var</span> seq1 = <span class="string">"THISLINE"</span>;</span><br><span class="line"><span class="keyword">var</span> gap_opening_penalty=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> gap_extension_penalty=<span class="number">-4</span>;</span><br><span class="line"><span class="keyword">var</span> matchMatrix = BLOSUM62;</span><br></pre></td></tr></table></figure></p><p>Of course, you can see the whole source code in my GitHub : <a href="(https://github.com/Yvon-Shong/Waseda/blob/master/Bioinformatics/SequenceAlignment/BLOSUM62.js">https://github.com/Yvon-Shong/Waseda/blob/master/Bioinformatics/SequenceAlignment/BLOSUM62.js</a>)</p><p>And its output :</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result3.jpg" alt=""></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result3.5.j" alt=""></p><p>So the final score is <strong>0</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gap_penalty&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Affine Gap Penalty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Calculate the score for the DNA sequence alignment shown below, using the scoring matrix below.  Use an affine gap penalty to score the gaps, with -11 for opening the gap and -1 for each additional position in the gap.  (“Affine gap penalty” refers to a situation when the gap opening and gap extension penalties are not the same.  The gap opening penalty should be greater than the gap extension penalty.)&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="js" scheme="http://www.shong.win/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Sequence Alignment</title>
    <link href="http://www.shong.win/2016/11/03/bioinformatics/SequenceAlignment/"/>
    <id>http://www.shong.win/2016/11/03/bioinformatics/SequenceAlignment/</id>
    <published>2016-11-03T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>Sequence Alignment Using Dynamic Programming (DP)</p><p>JavaScript source code:</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> seq2 = <span class="string">"COELACANTH"</span>;</span><br><span class="line"><span class="keyword">var</span> seq1 = <span class="string">"PELICAN"</span>;</span><br><span class="line"><span class="comment">//initial</span></span><br><span class="line"><span class="keyword">var</span> matrix= <span class="keyword">new</span> <span class="built_in">Array</span>(seq1.length);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p=<span class="number">0</span>;p&lt;seq1.length;p++)</span><br><span class="line">&#123;</span><br><span class="line">    matrix[p]=<span class="keyword">new</span> <span class="built_in">Array</span>(seq2.length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// find the value</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;seq1.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;seq2.length;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        matrix[i][j]=maxValue(i,j)+Match(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i0=<span class="number">0</span>;i0&lt;seq1.length;i0++)</span><br><span class="line">&#123;<span class="built_in">console</span>.log(matrix[i0]);&#125;</span><br><span class="line"><span class="comment">//find the maxValue near this grid</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxValue</span>(<span class="params">m,n</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>&amp;&amp;n&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> max=matrix[<span class="number">0</span>][n<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(m&gt;<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> max=matrix[m<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(m*n&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> max=<span class="built_in">Math</span>.max(matrix[m<span class="number">-1</span>][n<span class="number">-1</span>],matrix[m][n<span class="number">-1</span>],matrix[m<span class="number">-1</span>][n]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//find the value of match function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Match</span>(<span class="params">m,n</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(seq1.charAt(m)==seq2.charAt(n))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Its output result:<br><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/result.jpg" alt="Result"></p><p>So the best match sequence is</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">O</td><td style="text-align:center">E</td><td style="text-align:center">L</td><td style="text-align:center">A</td><td style="text-align:center">C</td><td style="text-align:center">A</td><td style="text-align:center">N</td><td style="text-align:center">T</td><td style="text-align:center">H</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">P</td><td style="text-align:center">E</td><td style="text-align:center">L</td><td style="text-align:center">I</td><td style="text-align:center">C</td><td style="text-align:center">A</td><td style="text-align:center">N</td><td style="text-align:center"></td></tr></tbody></table><p>or</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">O</td><td style="text-align:center">E</td><td style="text-align:center">L</td><td style="text-align:center">A</td><td style="text-align:center">C</td><td style="text-align:center">A</td><td style="text-align:center">N</td><td style="text-align:center">T</td><td style="text-align:center">H</td></tr><tr><td style="text-align:center">P</td><td style="text-align:center">_</td><td style="text-align:center">E</td><td style="text-align:center">L</td><td style="text-align:center">I</td><td style="text-align:center">C</td><td style="text-align:center">A</td><td style="text-align:center">N</td><td style="text-align:center"></td></tr></tbody></table><p><em>Maybe I can use code to output the best-match path with distinguishing the gap and the mismatch.</em></p><h1 id="Dot-Matrix-Analysis"><a href="#Dot-Matrix-Analysis" class="headerlink" title="Dot Matrix Analysis"></a>Dot Matrix Analysis</h1><h2 id="Dottup"><a href="#Dottup" class="headerlink" title="Dottup"></a><a href="http://mobyle.pasteur.fr/cgi-bin/portal.py?#forms::dottup" target="_blank" rel="noopener">Dottup</a></h2><p><em>Set the word size to 2 (“word size” is basically the same as “window”).  Using a word size of  2, the algorithm will scan a window of 2 amino acids and put one dot in the matrix when the two sequences have identical amino acids.  Dottup has no threshold, so it is simpler than Dotmatcher.</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dottup.jpg" alt="dottup"></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dottup_graph.png" alt="dottup_graph"></p><h2 id="Dotmatcher"><a href="#Dotmatcher" class="headerlink" title="Dotmatcher"></a><a href="http://mobyle.pasteur.fr/cgi-bin/portal.py?#forms::dotmatcher" target="_blank" rel="noopener">Dotmatcher</a></h2><p><em>Set the window to 10 and threshold to 23 in order to filter out the “noise.”</em></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher.jpg" alt="dotmatcher"></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher_graph.png" alt="dotmatcher_graph"></p><h2 id="Examine-the-two-dot-matrices"><a href="#Examine-the-two-dot-matrices" class="headerlink" title="Examine the two dot matrices"></a>Examine the two dot matrices</h2><h3 id="Windows-Size"><a href="#Windows-Size" class="headerlink" title="Windows Size"></a>Windows Size</h3><p><strong>Windows=2</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dottup_graph.png" alt="dottup_graph"></p><p><strong>Windows=10</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dottup_10.png" alt="dottup_graph"></p><p><strong>Windows Size</strong> means the length of the piece of the sequence you use to compare to the other sequence. </p><h3 id="Threshold"><a href="#Threshold" class="headerlink" title="Threshold"></a>Threshold</h3><p><strong>Threshold=0</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher_graph.0.png" alt="dotmatcher_graph"></p><p><strong>Threshold=10</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher_graph.10.png" alt="dotmatcher_graph"></p><p><strong>Threshold=23</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher_graph.png" alt="dotmatcher_graph"></p><p><strong>Threshold=50</strong></p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/bioinformatics/dotmatcher_graph.50.png" alt="dotmatcher_graph"></p><p><strong>Threshold</strong> means that only the match value is bigger that threshold, will there be a dot on the diagram, which is used to filtrate the noise.</p><h3 id="What-does-the-long-diagonal-from-one-corner-to-the-other-represent"><a href="#What-does-the-long-diagonal-from-one-corner-to-the-other-represent" class="headerlink" title="What does the long diagonal from one corner to the other represent?"></a>What does the long diagonal from one corner to the other represent?</h3><p>It means that the sequence is exactly matched to itself. So there is a diagonal on the diagram. </p><h3 id="What-do-the-shorter-diagonals-mostly-in-the-lower-left-corner-indicate-about-this-protein"><a href="#What-do-the-shorter-diagonals-mostly-in-the-lower-left-corner-indicate-about-this-protein" class="headerlink" title="What do the shorter diagonals (mostly in the lower left corner) indicate about this protein?"></a>What do the shorter diagonals (mostly in the lower left corner) indicate about this protein?</h3><p>It means that there is some little pieces of sequence, which can be matched and its value is greater than threshold.<br>Like “ABCDE1234” and “123FGHIJK”.<br>And because it is the sequence compared with itself, so its diagram is symmetric along the diagonal.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sequence Alignment Using Dynamic Programming (DP)&lt;/p&gt;
&lt;p&gt;JavaScript source code:&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="js" scheme="http://www.shong.win/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>那么多的人，你要去哪里</title>
    <link href="http://www.shong.win/2016/09/19/start-on-a-journey-to-Japan/"/>
    <id>http://www.shong.win/2016/09/19/start-on-a-journey-to-Japan/</id>
    <published>2016-09-19T12:00:00.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>一下子在九龙湖这个地方呆了三年，当我知道我过了Waseda的时候，很开心的跟伙伴打电话分享，那天阳光很好，我骑着单车飞驰在回寝室路上，那时候还是春天，却忽然意识到，那我是不是要说再见了。</p><p>在不断的毕业的离别里，我学会了隐忍与释怀。我知道离开也终究是不过如此，哪来那么多一生一世。 </p><p>我试着去回顾这些年里自己的成长，却发现自己疏于表达自己的内心，很难再拥有去讲故事的能力。</p><a id="more"></a><p>读大学的时候，我毅然决定要出川，我知道路途遥远，却是我现在和别人回想起来，这是我最不后悔的一件事情。有很多东西都是你选择之后才会知道是怎样的发展，离开了故乡才会知道自己会思念她。来到东南的那年，军训的时候，我某次回头看过人群去，我发现穿着迷彩服的人们，人是那么的多，又是那么的相像，我开始产生了恐惧，是不是终将平庸在了人群里。</p><p>可是我知道我现在最大的问题的知与行。</p><p>今年暑假的时候去上海找同学玩，夜也要深了的时候，我搭着伙伴逛校园，我在前面像是在独白一样讲我的一些心事。</p><p>“我觉得上海是中国最好的城市诶，这么多年了你喜欢它么？”</p><p>“我觉得我挺喜欢南京的。”</p><p>“可是我前一段时间读一本散文集啊，卡尔维诺的《看不见的城市》，他说，其实城市和城市都是相似的，每个城市都会有它的地标，公园，学校等等等等。就像我喜欢成都，很多原因是因为我在那个城市发生了很多的故事遇见了很多的人。所以大概我喜欢南京也是因为，我爱那些在这座城市遇到的人吧。”</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/start-on-a-journey-to-Japan/1.jpg" alt=""><br><em>2016.9.18 摄于天空树</em></p><p>在大学的时候，我又养过花。是啊，继完全没有发芽的玫瑰之后，我终于再次鼓起来勇气去养花，是用玻璃瓶栽的水植风信子。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/start-on-a-journey-to-Japan/2.jpg" alt=""><br><em>2016.3.3发芽的风信子</em></p><p>在等待发芽的日子里总是漫长的，最开始要帮她除腐烂的根，每周换一次水。</p><p>原来还是会再次充满期望的，当她含苞欲放的时候，我也是满心欢喜。</p><p>当发出芽来的时候，我想要去摸新芽，却又不敢，那个瞬间，我才意识到了什么叫做 想触碰却又收回手。</p><p>当花绽放的时候，真的好美。</p><p>How wonderful you are.</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/start-on-a-journey-to-Japan/3.jpg" alt="">     </p><p>无奈的是花期不长，花期之后，我再也无心打理，去等到她的重生，于是花枯萎之后，我也就狠心的将它丢弃了。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/start-on-a-journey-to-Japan/4.jpg" alt="">   </p><p>当年没有发芽的玫瑰花种子，还在我身边的抽屉里，而这朵花呢，开花时无比绚烂，我觉得这个世界都不及她的美，可是枯萎的时候却深深的刺痛了我的心，养不到下一轮花期了，枯萎的日子里慢慢丧失了对我的致命吸引力。</p><p>不过我还是很感谢那短暂的花期，和没有发芽的种子是不一样的，养花的人和要开的花，都是要努力去绽放的，而我是知道的。可 爱是互相驯养啊，只剩我一个人知道，又有什么用呢。花瓣落尽，累积了足够失望，过了期限。</p><p>其实不是因为它不再开花啊，而只是因为，它刺痛到了我。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/start-on-a-journey-to-Japan/5.jpg" alt="">    </p><p>那些关于未来的美好画面，那些初次相遇的回忆，那些动过心，留过情的人，你们都去了哪里。</p><p>大学其实是一个消磨人激情的地方，你容易在校园里开始变得懒散，开始习惯去翘课，考试抱着及格就行的心态，开始习惯平庸。</p><p>有一段时间我特别迷茫，而且是过了项目之后，开始面对实习，开始意识到每个阶段都有每个阶段的烦恼。某一天发牢骚，有伙伴来私戳我，问我在烦恼什么，说觉得我其实做的很棒了（讲我传教方面。。。）想来也算幸运，大二下期开始真正接近Microsoft，去了解它，被它“科技予力众生”的理念所折服，意识到这才是改变世界的事情啊。开始有点喜欢上自己的专业。也找到了奋斗目标。</p><p>其实最重要的是，在丰富自己羽翼的同时，找到那份自己喜欢的事情。</p><p>当然还有——当机遇来临的时候，紧紧抓住它。</p><p>人生是可笑的，回想起两年前的那个闷热的躁动的无处逃避的夏天——人生总是充满了阴差阳错啊。</p><p>“还好没转过去”的侥幸与当时的痛楚，隐隐有一丝的讽刺与可笑。 </p><p>我在六个月前，我也不知道我的人生轨迹又会如此迅速的发生变化。我曾经准备过直接工作，考研，结果却是走项目出了国，还是我曾以为一早比一世遥远的nihon。</p><p>我也曾错过很多机会，错过很多人，比如有些实习的机会，如果那时候定下来的话，可能现在又是不同的一番风景，</p><p>当时伙伴跟我说，万一后面有更好的呢。</p><p>可是我还是觉得，未来不要管，当下最重要，一定要把握住机会。</p><p>在大学的几年历练下来，我总是自诩有着少年心。以前的我总是讨厌大人，讨厌成熟与讨厌故作成熟。</p><p>我也不知道是那朵花教给我的么，我已不再畏惧长大，即使成年之后的压力真的如潮水般涌来，特别是明天开始，就要开启hell模式了。。。这是自己选了一条看似轻松，其实更艰难的道路。</p><p>我不害怕长大啊，我想活成我想要的大人的模样啊。</p><p>尤其是在经历了很多事情之后，一个人去看了《小王子》，还有后来的《垫底辣妹》，我开始懂得了父母身上背负的压力，对子女的期许，懂得了他们的隐忍和无奈。</p><p>而什么才是我真正的少年心呢？这是个我想了很久的问题。</p><p>才不是年少幼稚，曾经轻狂时的肆意妄为。</p><p>今年21岁生日的那天，想要给自己长大的仪式感，去这个国家最东边的岛屿上看第一缕阳光。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。什么也锤不了我。</p><p>后半段出自王小波，虽然他后面说的是：我后来才知道，生活就是一个缓慢受锤的过程，人一天天老下去，奢想也一天天消失，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点，我觉得我会永远生猛下去，什么也锤不了我。</p><p>《龙族》里绘梨衣说，觉得以前的世界是蛇群守护的宝石，很漂亮，很远，很危险。</p><p>其实我这几周前开始磨磨蹭蹭写下的文字，居然被前几天收到的一段话的内容讲得所剩无几，那一段话说的是，少年叫嚣世界的勇气和对待生活温柔的心。</p><p>所以我想要永远保留我的少年心啊，就是受挫千万次也能爬起来说世界我还要和你再战一次的决心和才不顾前方艰险的狂妄啊！</p><p>我知道接下来的日子会很苦，可是我要去活成我想要的样子，梦里双眼清澈，衣袂翩翩，骑着单车飞驰在路上的少年。</p><p>请不要忘记你曾是怎样的小孩，请不要忘记你想成为怎样的大人。</p><p>可是觉得大学里面自己要去改正很多地方，我意识到以前的自己对好朋友的毒舌之弊，意识到了要去保护他人的喜悦，明白了朋友之间的感情经营。</p><p>曾经和他人吵架的时候，说我只是希望在别人身上延续我转系的念想，这件事情过了很久，我还是在反思，是不是这又是我的那颗病态的自爱的心在作祟。可能看到stand by me的一段话，说【大熊是一个可以真诚的为他人的幸福而快乐，为他人的痛苦而悲伤的善良青年】</p><p>我是真的希望身边的人能过得很好，当然也希望我也能过得很好，才不是去眼红伙伴取得的成就，而是去真心的为彼此开心，更甚者以之为榜样。</p><p>这也是当时和伙伴分享一些关于自己的好消息的时候意识到的。就是那种，嗯，我知道你会为我开心的朋友。</p><p>其实最后，我还是想感谢那朵花，虽然花期短暂，虽然故事早就结束了，虽然刺痛了我，虽然….</p><p>我还是很感谢你的盛放，也谢谢你懂我。</p><p>前几天从成都回来的动车上，夕阳的余晖，在苍穹之下，将楼和树的影子拉得好长，向东行驶的列车，西下的落日，我明明在朝着日出的地方行进，为什么会感受到有一丝悲伤呢。</p><p>是感觉真的要长大了么，可能是吧，触摸不到的时间却化成了有形的光与影，以后会早一个时区，人生的进程会早一年。</p><p>可这都是我自己做出的选择啊。</p><p><strong>我所梦想做的事情，我正飞奔而来。</strong> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一下子在九龙湖这个地方呆了三年，当我知道我过了Waseda的时候，很开心的跟伙伴打电话分享，那天阳光很好，我骑着单车飞驰在回寝室路上，那时候还是春天，却忽然意识到，那我是不是要说再见了。&lt;/p&gt;
&lt;p&gt;在不断的毕业的离别里，我学会了隐忍与释怀。我知道离开也终究是不过如此，哪来那么多一生一世。 &lt;/p&gt;
&lt;p&gt;我试着去回顾这些年里自己的成长，却发现自己疏于表达自己的内心，很难再拥有去讲故事的能力。&lt;/p&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>窗外日光弹指过·席间花影坐前移</title>
    <link href="http://www.shong.win/2016/08/25/temporary-separation/"/>
    <id>http://www.shong.win/2016/08/25/temporary-separation/</id>
    <published>2016-08-25T12:03:50.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>我也不知道<br>该如何给这组照片取名</p><p>可能只是<br>要比较长时间的离开这个地方罢了</p><p>再见·东南大学</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/1.jpg" alt="">                                                         </p><a id="more"></a><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/2.jpg" alt="">                                 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/3.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/4.jpg" alt="">                                 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/5.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/6.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/7.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/8.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/9.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/10.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/11.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/12.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/13.jpg" alt="">                                                         </p><hr><p>我记得拍照的那天，大概38度</p><p>热花了所有的妆…</p><p>拍外场简直想自杀…</p><p>算啦</p><p>明年回来拿毕业证的时候再拍</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/14.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/15.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/16.jpg" alt="">                                                         </p><p>想起我还有</p><p>去爬教学楼楼顶看日落的打算</p><p>还没落实</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/17.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/18.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/19.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/20.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/21.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/22.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/23.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/24.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/25.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/26.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/27.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/28.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/29.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/30.jpg" alt="">                                                         </p><hr><p>忽而复夏</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/31.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/32.jpg" alt="">                                 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/33.jpg" alt="">                                                         </p><hr><p>想起自己在大三的时候</p><p>说还没解锁</p><p>【登上焦标】</p><p>这个成就诶</p><p>于是去报了新生文化季哈哈哈</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/34.jpg" alt="">                                 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/35.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/36.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/37.jpg" alt="">                                 </p><hr><p>吃了一个夏天的螺蛳粉</p><p>喝了一个暑假的维它柠檬茶</p><p>虽然没有出去玩</p><p>可还是做了很多事情</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/38.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/39.jpg" alt="">                                                         </p><p>多年前</p><p>伙伴跟我说</p><p>“最美的夏天,</p><p>永远是没有过完的那一年”</p><p>嗯！</p><p>大学三年</p><p>每一年都足以难忘</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/40.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/41.jpg" alt="">                                                         </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/42.jpg" alt="">                                                         </p><p>我还是会期待</p><p>下一个闷热又潮湿的夏天</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/43.jpg" alt="">                                 </p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/44.jpg" alt="">                                                         </p><hr><p>夏天</p><p>结束了</p><blockquote><p>一直度过的季节<br>就连道路旁盛开的花也渐渐变化了<br>那个季节所绽放的花的名字叫什么来着？<br>小小的摸上去的话有一点点刺痛<br>花就算凋零了<br>只剩下淡淡的香味<br>也会向着太阳散发出香气</p><p>渐渐地那朵花的香味变也会变淡<br>我们也会长大成熟<br>不过呢，那朵花，一定会在某处继续绽放<br>是呢，我们会一直一直，实现那朵花的愿望</p></blockquote><p>要说再见啦。</p><hr><p><em>摄影师：独木成针叶林</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我也不知道&lt;br&gt;该如何给这组照片取名&lt;/p&gt;
&lt;p&gt;可能只是&lt;br&gt;要比较长时间的离开这个地方罢了&lt;/p&gt;
&lt;p&gt;再见·东南大学&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oljkaeely.bkt.clouddn.com/static/image/temporary-separation/1.jpg&quot; alt=&quot;&quot;&gt;                                                         &lt;/p&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>Hospital Website based on VUE.js+PHP+MySQL</title>
    <link href="http://www.shong.win/2016/08/01/hospital-website/"/>
    <id>http://www.shong.win/2016/08/01/hospital-website/</id>
    <published>2016-08-01T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>2016.8.1 在#265个issue  #380次merge request后，阶段性的完成了我们的<a href="https://clinic.baichengyiliao.com/spa.php?action=doctorwork.html" target="_blank" rel="noopener">橙灵诊所管理系统</a></p><p>在入职培训期间，我们实习生组成了一个team，大家分模块完成一个项目，项目的内容是一家医院的在线诊所管理系统，从医生工作站，护士工作站，前台工作站，到预约-登记-分诊-接诊-医生门诊-检查-治疗-药房-收费全流程，还有系统设置，病人库，排班，统计报表等内容的前后端。</p><a id="more"></a><p>其中我负责的是系统设置里的诊疗费管理medicalFees.vue的前后端，接诊页面的reception.vue的前端，和其中的报告report.vue的前后端，和实验室检查inspect.vue的前后端。并在其中两个模块的开发过程中作为</p><p>项目的技术选型为前端使用vue.js+bootstrap，后端使用PHP+Apache，MySQL数据库。</p><p>在开发的过程中，我有一些如下的感悟：</p><h2 id="技术经验的积累"><a href="#技术经验的积累" class="headerlink" title="技术经验的积累"></a>技术经验的积累</h2><p>PHP的CodeIgniter框架的使用</p><p>前端vue.js的使用</p><p>vue的理念是数据驱动，利用数据修改样式和样式的内容。</p><p>我们的vue的开发过程，大概是利用假数据，定好数据的格式，手撸出前端，并做好数据绑定，所以在进行数据绑定的时候，数据的格式尤为重要。然后调试后端，发POST请求到数据，处理数据为需要的绑定的格式。</p><p>git的客户端SourceTree和GitFlow</p><p>gitflow最主要的是区分了master-develop，并在develop上建立feature，master上建hotfix。</p><p><img src="http://images.cnblogs.com/cnblogs_com/cnblogsfans/771108/o_git-flow-nvie.png" alt="gitflow"></p><h2 id="踩的坑"><a href="#踩的坑" class="headerlink" title="踩的坑"></a>踩的坑</h2><p>AJAX的POST请求是异步操作</p><h2 id="一些软件设计"><a href="#一些软件设计" class="headerlink" title="一些软件设计"></a>一些软件设计</h2><h3 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h3><p>写后端PHP时，MVC的理念是将接口和实现分离，controller层接受数据，并对数据利用框架进行安全过滤（而不是让POST贯穿整个controller-model），通过传参的方式调用model层进行操作数据库。</p><p>所以在model层里面写如何操作数据的方法，在controller层里面写业务逻辑和如何调用model里的方法。</p><p>model操作数据库，control调用操作，view展现视图</p><p>甚至是MVVM（Model-View-ViewModel）</p><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><p>在写前端的过程中，由于我们是分组，对不同的模块进行开发，所以我们对我们自己负责的部分无法很好的设计，比如在诊所管理项目中，我们很多地方需要用到病人信息的展示板patientInfo.vue 结果各个小组都是按自己的方法和格式去实现前端发post和后端读取数据库再返回，不同格式的绑定。</p><p>这增大了前端代码的冗余和后期维护的难度。显然应该在模块划分的时候，尽量的解耦合和去冗余。</p><p>解耦合的目的，不仅仅是利于开发过程中的模块划分，更方便与小组的人员分工，达到并行的开发。</p><h2 id="软件开发流程"><a href="#软件开发流程" class="headerlink" title="软件开发流程"></a>软件开发流程</h2><p>我也是第一次接触到公司里面的开发的过程，期间最主要的还是git的使用，以及merge request和issue。</p><ul><li>理解产品需求，与产品经理问清楚，业务的逻辑细节，前端操作的细节。</li><li>整理需求，并与产品沟通是否正确。</li><li>理清数据库结构，和业务操作表的流程</li><li>根据需求列出接口，可以写出apiDoc，apiDoc的内容涵盖</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">api &#123;post&#125; url</span><br><span class="line">apiParam各个参数</span><br><span class="line">apiParamExample发送post请求的参数格式</span><br><span class="line">apiSuccess返回的数据格式类型，比如json</span><br><span class="line">apiSuccessExample成功时返回的数据格式</span><br></pre></td></tr></table></figure><ul><li>然后进行前后端的开发</li><li>后端利用postman进行测试</li><li>进行前后端连通的测试</li><li>使用git 合并最新的develop，然后发送merge request to develop</li><li>等待提issue，然后自己在develop上建立hotfix或者feature，关联到issue号</li></ul><p>在公司的软件开发，不同于个人开发的地方主要是协作，在代码层面，是需要利用git解决冲突，拉取最新的小组分支或者develop分支</p><h2 id="团队协作"><a href="#团队协作" class="headerlink" title="团队协作"></a>团队协作</h2><p>和在人力的协作方面，这次我出现了很多问题，我的两个模块的两个小组，都有着分别不同程度的delay，我们的模块的复杂程度是一方面（需要操作三层的业务数据表），我的分工也是一个方面。</p><p>#@ 软件工程的理解</p><p>软件工程不同于Computer Science计算机科学的地方，在于它更强调一个工程的概念，所以我们在课堂里学到软件工程导论，软件项目管理与实践，都是当时无关紧要的课，现在更突显价值。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2016.8.1 在#265个issue  #380次merge request后，阶段性的完成了我们的&lt;a href=&quot;https://clinic.baichengyiliao.com/spa.php?action=doctorwork.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;橙灵诊所管理系统&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在入职培训期间，我们实习生组成了一个team，大家分模块完成一个项目，项目的内容是一家医院的在线诊所管理系统，从医生工作站，护士工作站，前台工作站，到预约-登记-分诊-接诊-医生门诊-检查-治疗-药房-收费全流程，还有系统设置，病人库，排班，统计报表等内容的前后端。&lt;/p&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="git" scheme="http://www.shong.win/tags/git/"/>
    
      <category term="js" scheme="http://www.shong.win/tags/js/"/>
    
      <category term="php" scheme="http://www.shong.win/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>MatlabLens</title>
    <link href="http://www.shong.win/2016/06/11/matlablens/"/>
    <id>http://www.shong.win/2016/06/11/matlablens/</id>
    <published>2016-06-11T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>本程序是基于MATLAB的GUI界面的类Office Lens应用，还有很多待提高</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/matlablens/1.png" alt=""></p><p>其中主要功能有</p><ul><li>GUI界面，方便快捷的操作</li><li>文件选择功能</li><li>透视变换</li><li>图像手动剪切</li><li>图像降噪</li><li>调节对比度</li><li>图像二值化</li><li>无限撤销功能</li><li>保存图像</li></ul><a id="more"></a><p>#详细说明</p><ul><li>GUI界面<br>这次是简单的尝试了下matlab自带的VB似的GUI界面，异常的好用，连监听啊什么的都不用自己写。</li><li>文件选择功能<br>利用uioutfile函数，调用Windows熟悉的文件选择</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/matlablens/2.png" alt=""></p><ul><li>透视变换<br>透视变换时本程序效率最低，大概需要跑2min的功能，利用MIT的算法，从左到右从上到下选择要进行透视变换的四个点，这四个点之间的图像将被处理变换为矩形，其原理是将这四个点的坐标，转换为矩形定点，联立求解四元四次方程组，得到透视变换矩阵，将透视变换矩阵作用到四个点中间的其他坐标进行变换。<br>效率最低的地方应该就是解方程的步骤。</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/matlablens/3.png" alt=""></p><ul><li>图像手动剪切<br>利用imcrop函数，本想在透视变换后直接利用顶点坐标进行裁剪，但其实透视变换后，处理后的图像会对变换后没有像素的地方进行黑色填补，导致顶点坐标发生变化。</li></ul><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/matlablens/4.png" alt=""></p><ul><li>图像降噪<br>对图像进行进行高斯滤波。</li><li><p>调节对比度</p></li><li><p>图像二值化<br>利用im2bw进行二值化，本想是在二值化后进行OCR功能，但微软的API接口变了，百度的接口变成收费的了，而且还需要考虑利用MATLAB调用Python，所以没有实现。</p></li><li>无限撤销功能<br>在每一步进行图像处理时，将图像push进一个数组，撤销时pop出数组并移动指针。不过发现想增加前进功能时，需要考虑很多操作逻辑，必须撤销三步之后又操作了一步，这个时候又前进，等等等等，所以取消了前进功能。</li><li>保存图像<br>将处理后的图像保存到本地。</li></ul><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>最可惜的是没有实现ocr功能，和自动进行边缘检测之后进行透视变换，再自动剪裁。<br>OCR需要的是接口，自动边缘检测的难度在于图像二值化的效果必须很理想，然后选择合适的算子。<br>令人开心的是，已经基本完成大部分功能，自动化是进行优化。<br>不过以下有一些疑问：</p><ul><li>如何将.m文件编译成不需要MATLAB的可执行文件</li><li>如何对透视变换进行优化</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本程序是基于MATLAB的GUI界面的类Office Lens应用，还有很多待提高&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oljkaeely.bkt.clouddn.com/static/image/matlablens/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中主要功能有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GUI界面，方便快捷的操作&lt;/li&gt;
&lt;li&gt;文件选择功能&lt;/li&gt;
&lt;li&gt;透视变换&lt;/li&gt;
&lt;li&gt;图像手动剪切&lt;/li&gt;
&lt;li&gt;图像降噪&lt;/li&gt;
&lt;li&gt;调节对比度&lt;/li&gt;
&lt;li&gt;图像二值化&lt;/li&gt;
&lt;li&gt;无限撤销功能&lt;/li&gt;
&lt;li&gt;保存图像&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matlab中对图像进行高通滤波</title>
    <link href="http://www.shong.win/2016/04/15/matlab-highpass-filter/"/>
    <id>http://www.shong.win/2016/04/15/matlab-highpass-filter/</id>
    <published>2016-04-15T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>和低通滤波一样，只是将高频赋予高权值，低频赋予低权值或者0，实现滤波。<br>整个代码是基于低通滤波实验上修改传递函数实现的，并增加了每个滤波器传递函数的三维曲面图。</p><p>所以每个滤波器有频谱图，三维曲面图和滤波后效果图。</p><a id="more"></a><p>##理想滤波器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D(u,v)&lt;=D_0时 </span><br><span class="line">H(u,v)=0</span><br><span class="line"></span><br><span class="line">D(u,v)&gt;D_0时 </span><br><span class="line">H(u,v)=1</span><br></pre></td></tr></table></figure></p><p>D(u,v)是(u,v)点距离频率矩形原点的距离</p><p>并尝试更改通道半径产生不同的效果。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/理想highpass.jpg" alt=""></p><h2 id="Butterworth滤波器"><a href="#Butterworth滤波器" class="headerlink" title="Butterworth滤波器"></a>Butterworth滤波器</h2><p>$H(u,v)=1-1/{1+[D(u,v)/D_0]^{2n}$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/butterworthhighpass.jpg" alt=""></p><p>##指数滤波器</p><p>$H(u,v)=1-exp{[-D(u,v)/D_0]^n }$</p><p>###n是决定衰减率的系数</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/指数highpass.jpg" alt=""></p><p>##高斯滤波器</p><p>$H(u,v=1-exp{ -1/2*[D(u,v)/D_0]^2 }$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/高斯highpass.jpg" alt=""></p><p>###梯形低通滤波器</p><p>$D(u,v) &lt; D_0$ 时<br>$H(u,v)=0$</p><p>$D_0&lt;=D(u,v)&lt;=D_1$时<br>$H(u,v)=1-[ D(u,v)-D_1 ]/(D_0-D_1)$</p><p>$D_1 &lt; D(u,v)$时<br>$H(u,v)=1$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/梯形highpass.jpg" alt=""></p><p>#总结<br>在高斯滤波之后，只剩下大致的轮廓，所以不同函数的效果也更难以区分。</p><p>并且我尝试了下调节各函数的半径，产生更直观的函数的三维曲面图，并且观察不同半径产生的滤波效果，不过发现，半径太大，则效果图近乎一团黑。</p><p>半径较小时：</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/小半径.jpg" alt=""></p><p>半径较大，三维曲面图更直接时：</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/大半径.jpg" alt=""></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">RGB=imread(<span class="string">'1.jpg'</span>);</span><br><span class="line">I=rgb2gray(RGB);</span><br><span class="line">J=imnoise(I,<span class="string">'gaussian'</span>,<span class="number">0</span>,<span class="number">0.005</span>);    <span class="comment">%手动添加高斯噪声</span></span><br><span class="line"><span class="comment">%J=imnoise(I,'salt &amp; pepper',0.02);    %手动添加椒盐噪声</span></span><br><span class="line">FFT=fft2(J);<span class="comment">%shift</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IFFT_0=uint8(ifft2(FFT));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[a,b]=<span class="built_in">size</span>(FFT);</span><br><span class="line">a0=<span class="built_in">round</span>(a/<span class="number">2</span>);</span><br><span class="line">b0=<span class="built_in">round</span>(b/<span class="number">2</span>);</span><br><span class="line">X=<span class="number">1</span>:<span class="number">1</span>:a;</span><br><span class="line">Y=<span class="number">1</span>:<span class="number">1</span>:b;</span><br><span class="line"></span><br><span class="line">h=<span class="built_in">zeros</span>(a,b);</span><br><span class="line"><span class="comment">%%%%%%%%%理想高通滤波器1</span></span><br><span class="line">n1=<span class="number">10</span>;<span class="comment">%确定范围</span></span><br><span class="line">disnoise_1=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance &lt;= n1</span><br><span class="line">            h(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_1(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_1(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_1=uint8((ifft2(ifftshift(disnoise_1))));</span><br><span class="line">H1=h;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% surf(X, Y, h,'Facecolor','interp','Edgecolor','none','Facelighting','phong'); </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%理想高通滤波器2</span></span><br><span class="line">n2=<span class="number">100</span>;<span class="comment">%确定范围</span></span><br><span class="line">disnoise_2=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance &lt;= n2</span><br><span class="line">            h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_2(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_2(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_2=uint8((ifft2(ifftshift(disnoise_2))));</span><br><span class="line">H2=h;</span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% Butterworth滤波器</span></span><br><span class="line"></span><br><span class="line">D_3=<span class="number">10</span>;<span class="comment">%通带半径</span></span><br><span class="line">n3=<span class="number">2</span>;<span class="comment">%滤波次数</span></span><br><span class="line">disnoise_3=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span><span class="number">-1</span>/(<span class="number">1</span>+(distance/D_3)^(<span class="number">2</span>*n3));</span><br><span class="line">        disnoise_3(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_3(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_3=uint8((ifft2(ifftshift(disnoise_3))));</span><br><span class="line">H3=h;</span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 指数滤波器</span></span><br><span class="line"></span><br><span class="line">D_4=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">n4=<span class="number">2</span>;<span class="comment">%滤波次数</span></span><br><span class="line">disnoise_4=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>-expm(-(distance/D_4)^n4);</span><br><span class="line">        disnoise_4(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_4(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_4=uint8((ifft2(ifftshift(disnoise_4))));</span><br><span class="line">H4=h;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 高斯滤波器</span></span><br><span class="line"></span><br><span class="line">D_5=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">disnoise_5=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>-expm(-(distance^<span class="number">2</span>/(<span class="number">2</span>*D_5^<span class="number">2</span>)));</span><br><span class="line">        disnoise_5(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_5(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_5=uint8(ifft2(ifftshift(disnoise_5)));</span><br><span class="line">H5=h;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 梯形高通滤波器</span></span><br><span class="line"></span><br><span class="line">D_6_1=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">D_6_2=<span class="number">40</span>;</span><br><span class="line">disnoise_6=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance&lt;D_6_1</span><br><span class="line">            h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> distance&lt;=D_6_2</span><br><span class="line">                h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>-((distance-D_6_2)/(D_6_1-D_6_2));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                h(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_6(<span class="built_in">i</span>,<span class="built_in">j</span>)=h(<span class="built_in">i</span>,<span class="built_in">j</span>)*disnoise_6(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_6=uint8(ifft2(ifftshift(disnoise_6)));</span><br><span class="line">H6=h;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% surf(X, Y, h,'Facecolor','interp','Edgecolor','none','Facelighting','phong'); </span></span><br><span class="line"></span><br><span class="line">figure(<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">1</span>)</span><br><span class="line">    imshow(I);</span><br><span class="line">    title(<span class="string">'origin'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>)</span><br><span class="line">    imshow(J);</span><br><span class="line">    title(<span class="string">'origin + gaussian noise'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">3</span>)</span><br><span class="line">    imshow(fftshift(<span class="built_in">log</span>((fft2(J)))),[]);</span><br><span class="line">    title(<span class="string">'spectrum取log'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">4</span>)</span><br><span class="line">    imshow(IFFT_0);</span><br><span class="line">    title(<span class="string">'直接反傅里叶变换'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>)</span><br><span class="line">    imshow(disnoise_1);</span><br><span class="line">    title(<span class="string">'理想高通滤波器1频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line">    surf(X, Y, H1,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'理想高通滤波器1函数三维曲面图'</span>);    </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>)</span><br><span class="line">    imshow(IFFT_1);</span><br><span class="line">    title(<span class="string">'理想高通滤波1'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">10</span>)</span><br><span class="line">    imshow(disnoise_2);</span><br><span class="line">    title(<span class="string">'理想高通滤波器2频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">11</span>)</span><br><span class="line">    surf(X, Y, H2,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'理想高通滤波器2函数三维曲面图'</span>);  </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">12</span>)</span><br><span class="line">    imshow(IFFT_2);</span><br><span class="line">    title(<span class="string">'理想高通滤波2'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">13</span>)</span><br><span class="line">    imshow(disnoise_3);</span><br><span class="line">    title(<span class="string">'butterworth滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">14</span>)</span><br><span class="line">    surf(X, Y, H3,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'butterworth函数三维曲面图'</span>);      </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>)</span><br><span class="line">    imshow(IFFT_3);</span><br><span class="line">    title(<span class="string">'butterworth滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">16</span>)</span><br><span class="line">    imshow(disnoise_4);</span><br><span class="line">    title(<span class="string">'指数滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">17</span>)</span><br><span class="line">    surf(X, Y, H4,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'指数函数三维曲面图'</span>);      </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">18</span>)</span><br><span class="line">    imshow(IFFT_4);</span><br><span class="line">    title(<span class="string">'指数滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">19</span>)</span><br><span class="line">    imshow(disnoise_5);</span><br><span class="line">    title(<span class="string">'高斯滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">20</span>)</span><br><span class="line">    surf(X, Y, H5,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'高斯函数三维曲面图'</span>);      </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">21</span>)</span><br><span class="line">    imshow(IFFT_5);</span><br><span class="line">    title(<span class="string">'高斯滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">22</span>)</span><br><span class="line">    imshow(disnoise_6);</span><br><span class="line">    title(<span class="string">'梯形滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">23</span>)</span><br><span class="line">    surf(X, Y, H6,<span class="string">'Facecolor'</span>,<span class="string">'interp'</span>,<span class="string">'Edgecolor'</span>,<span class="string">'none'</span>,<span class="string">'Facelighting'</span>,<span class="string">'phong'</span>);</span><br><span class="line">    title(<span class="string">'梯形函数三维曲面图'</span>);      </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">6</span>,<span class="number">24</span>)</span><br><span class="line">    imshow(IFFT_6);</span><br><span class="line">    title(<span class="string">'梯形滤波'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和低通滤波一样，只是将高频赋予高权值，低频赋予低权值或者0，实现滤波。&lt;br&gt;整个代码是基于低通滤波实验上修改传递函数实现的，并增加了每个滤波器传递函数的三维曲面图。&lt;/p&gt;
&lt;p&gt;所以每个滤波器有频谱图，三维曲面图和滤波后效果图。&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>Matlab中对图像进行低通滤波</title>
    <link href="http://www.shong.win/2016/04/13/matlab-lowpass-filter/"/>
    <id>http://www.shong.win/2016/04/13/matlab-lowpass-filter/</id>
    <published>2016-04-13T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>介绍不同的滤波器<br><a id="more"></a></p><h1 id="噪声"><a href="#噪声" class="headerlink" title="噪声"></a>噪声</h1><p>高斯噪声：是指噪声服从高斯分布，即某个强度的噪声点个数最多，离这个强度越远噪声点个数越少，且这个规律服从高斯分布。高斯噪声是一种加性噪声，即噪声直接加到原图像上，因此可以用线性滤波器滤除。<br>主要由阻性元器件内部产生</p><p>椒盐噪声：类似把椒盐撒在图像上，因此得名，是一种在图像上出现很多白点或黑点的噪声，如电视里的雪花噪声等。椒盐噪声可以认为是一种逻辑噪声，用线性滤波器滤除的结果不好，一般采用中值滤波器滤波可以得到较好的结果。<br>主要是图像切割引起的黑图像上的白点噪声或光电转换过程中产生的泊松噪声</p><p>加性噪声一般指热噪声、散弹噪声等，它们与信号的关系是相加，不管有没有信号，噪声都存在。</p><p>乘性噪声一般由信道不理想引起，它们与信号的关系是相乘，信号在它在，信号不在他也就不在。<br>一般通信中把加性随机性看成是系统的背景噪声；而乘性随机性看成系统的时变性（如衰落或者多普勒）或者非线性所造成的。</p><p>#降噪</p><ul><li><p>空域滤波</p><pre><code>线性滤波：均值滤波，高斯滤波非线性滤波：中值滤波，边缘保持滤波（任何不是像素加权运算的滤波器都属于非线性滤波器）</code></pre></li><li><p>频域滤波</p><pre><code>理想滤波器butterworth滤波器指数滤波器梯形滤波器高斯滤波器</code></pre></li></ul><h1 id="低通滤波"><a href="#低通滤波" class="headerlink" title="低通滤波"></a>低通滤波</h1><p>##图像的频率</p><p>一副图像的边缘、跳跃部分以及颗粒噪声代表图像信号的高频分量</p><p>而大面积的背景区则代表图像信号的低频信号</p><p>用滤波的方式滤除其高频部分就能去掉噪声。</p><p>再进行反傅里叶变换，便能得到平滑图像</p><p>G(u,v)=H(u,v)F(u,v)</p><p>光滑函数=滤波器变换函数*傅里叶变换原函数</p><p>（卷积的概念）</p><p>g(x,y)=h(x,y)*f(x,y)</p><p>###卷积定理</p><p>卷积定理指出，函数卷积的傅里叶变换是函数傅里叶变换的乘积。即一个域中的卷积对应于另一个域中的乘积，例如时域中的卷积对应于频域中的乘积。</p><p>利用卷积定理可以简化卷积的运算量。对于长度为n的序列，按照卷积的定义进行计算，需要做2n-1组对位乘法，其计算复杂度为\mathcal{O}(n^2)；而利用傅里叶变换将序列变换到频域上后，只需要一组对位乘法，利用傅里叶变换的快速算法之后，总的计算复杂度为\mathcal{O}(n\log n)。这一结果可以在快速乘法计算中得到应用。</p><p>#低通滤波器</p><p>高低通的区别 </p><p>本质上就是给高低频率赋予不同的权值，进行变换。</p><p>使用理想滤波器时，很容易出现振铃效应，为了使频率变化变得平滑，则不再使用简单粗暴的0-1权值，而根据距离零频率距离来选择不同的函数</p><p>不同的函数，不同滤波器，则每个频率的信号的减弱程度不同。</p><p>##理想滤波器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D(u,v)&lt;=D_0时 </span><br><span class="line">H(u,v)=1</span><br><span class="line"></span><br><span class="line">D(u,v)&gt;D_0时 </span><br><span class="line">H(u,v)=0</span><br></pre></td></tr></table></figure></p><p>D(u,v)是(u,v)点距离频率矩形原点的距离</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/理想滤波器.jpg" alt=""></p><h3 id="如何确定D-0？"><a href="#如何确定D-0？" class="headerlink" title="如何确定D_0？"></a>如何确定D_0？</h3><p><strong>不能自适应！！！</strong></p><p>###物理上的不能实现<br>理想滤波器为什么不能实现?</p><p>因为电感电容都是非线性的,高频的分布参数影响特性从而无法实现理想化。电源滤波器是由电容、电感和电阻组…</p><p>##理想低通滤波器的缺点<br>本身是不能自适应的，那么这个截止频率又是如何确定的？<br>一刀切的情况是否一定好？所以才会出现振铃效应<br>所以用函数来实现连续变换，达到渐进。</p><h2 id="Butterworth滤波器"><a href="#Butterworth滤波器" class="headerlink" title="Butterworth滤波器"></a>Butterworth滤波器</h2><p>$H(u,v)=\frac{1}{1+[D(u,v)/D_0]^{2n}}$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/巴特沃斯滤波器.jpg" alt=""></p><p>##指数滤波器</p><p>$H(u,v)=exp{[-D(u,v)/D_0]^n }$</p><p>###n是决定衰减率的系数</p><p>##高斯滤波器</p><p>$H(u,v=1-exp{ -1/2*[D(u,v)/D_0]^2 }$</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/高斯滤波器.jpg" alt=""></p><p>###梯形低通滤波器</p><p>$D(u,v) &lt; D_0$时<br>$H(u,v)=1$</p><p>$D_0&lt;=D(u,v)&lt;=D_1$时<br>$H(u,v)=[ D(u,v)-D_1]/(D_0-D_1)$</p><p>$D_1 &lt; D(u,v)$时<br>$H(u,v)=0$</p><p>#一些发现的问题</p><p>###低通滤波的根本是去掉高频 那么空域转频域 一定要用傅里叶变换么？</p><p>##如何确定截止频率（阈值），以及如何自适应？</p><p>##滤波过程会出现负值或者溢出<br>uint8形式的数据时会截断处理，将小于0的变成0.</p><p>##模糊和振铃<br>所谓“振铃”，就是指输出图像的灰度剧烈变化处产生的震荡，就好像钟被敲击后产生的空气震荡。</p><p>空间域将低通滤波作为卷积过程来理解的关键是h(x,y)的特性：可将h(x,y)分为两部分：原点处的中心部分，中心周围集中的成周期分布的外围部分。前者决定模糊，后者决定振铃现象。若外围部分有明显的震荡，则g(x,y)会出现振铃。利用傅里叶变换，我们发现，若频域滤波函数具有陡峭变化，则傅里叶逆变换得到的空域滤波函数会在外围出现震荡。</p><p>#带通和带阻<br>带通滤波器容许一定频率范围信号通过, 但减弱(或减少)频率低于於下限截止频率和高于上限截止频率的信号的通过。</p><p>带阻滤波器减弱(或减少)一定频率范围信号, 但容许频率低于於下限截止频率和高于上限截止频率的信号的通过。</p><p>#同态滤波</p><p>一般来说，图像的边缘和噪声都对应于傅立叶变换的高频分量。而低频分量主要决定图像在平滑区域中总体灰度级的显示，故被低通滤波的图像比原图像少一些尖锐的细节部分。同样，被高通滤波的图像在图像的平滑区域中将减少一些灰度级的变化并突出细节部分。为了增强图像细节的同时尽量保留图像的低频分量，使用同态滤波方法 可以保留图像原貌的同时，对图像细节增强.</p><p>同态滤波是把频率过滤和灰度变换结合起来的一种图像处理方法，它依靠图像的照度/ 反射率模型作为频域处理的基础，利用压缩亮度范围和增强对比度来改善图像的质量。使用这种方法可以使图像处理符合人眼对于亮度响应的非线性特性，避免了直接对图像进行傅立叶变换处理的失真。</p><p>同态滤波的基本原理是：将像元灰度值看作是照度和反射率两个组份的产物。由于照度相对变化很小，可以看作是图像的低频成份，而反射率则是高频成份。通过分别处理照度和反射率对像元灰度值的影响，达到揭示阴影区细节特征的目的。<br>同态滤波处理的基本流程如下：</p><p>S(x,y)—-&gt;Log—-&gt;DFT—-&gt;频域滤波—-&gt;IDFT—-&gt;Exp—-&gt;T(x,y)</p><p>其中S(x,y)表示原始图像；T(x,y)表示处理后的图像；Log 代表对数运算；DFT 代表傅立叶变换（实际操作中运用快速傅立叶变换FFT）；IDFT 代表傅立叶逆变换（实际操作中运用快速傅立叶逆变换IFFT）；Exp 代表指数运算。</p><p>#结果</p><p>##椒盐噪声</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/椒盐噪声.jpg" alt=""></p><p>##高斯噪声</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/高斯噪声.jpg" alt=""></p><p>#后续的问题（太多了还没来得及做）</p><ul><li>butterworth滤波器 迭代次数n如何影响滤波效果 如何影响振铃效应的程度</li><li>指数滤波器 为什么是平方 能多次方么</li><li>梯形滤波器 上下限对滤波的影响</li><li>高斯滤波器 不同的高斯函数  高斯函数的傅里叶变换仍然是高斯函数，故高斯型滤波器不会产生“振铃“。</li><li>不同种类的滤波器的适用对象？ </li></ul><p>#代码</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">RGB=imread(<span class="string">'1.jpg'</span>);</span><br><span class="line"><span class="comment">%灰度化</span></span><br><span class="line">I=rgb2gray(RGB);</span><br><span class="line"><span class="comment">%手动添加噪声</span></span><br><span class="line">J=imnoise(I,<span class="string">'gaussian'</span>,<span class="number">0</span>,<span class="number">0.005</span>);    <span class="comment">%手动添加高斯噪声</span></span><br><span class="line"><span class="comment">%J=imnoise(I,'salt &amp; pepper',0.02);    %手动添加椒盐噪声</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%空域到频域的转换</span></span><br><span class="line">FFT=fft2(J);</span><br><span class="line"></span><br><span class="line"><span class="comment">%反傅里叶变换</span></span><br><span class="line">IFFT_0=uint8(ifft2(FFT));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[a,b]=<span class="built_in">size</span>(FFT);</span><br><span class="line">a0=<span class="built_in">round</span>(a/<span class="number">2</span>);</span><br><span class="line">b0=<span class="built_in">round</span>(b/<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%理想低通滤波器1</span></span><br><span class="line">n1=<span class="number">10</span>;<span class="comment">%通道半径</span></span><br><span class="line">disnoise_1=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance &lt;= n1</span><br><span class="line">            h=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            h=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_1(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_1(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_1=uint8((ifft2(ifftshift(disnoise_1))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%理想低通滤波器2</span></span><br><span class="line">n2=<span class="number">100</span>;<span class="comment">%通道半径</span></span><br><span class="line">disnoise_2=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance &lt;= n2</span><br><span class="line">            h=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            h=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_2(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_2(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_2=uint8(<span class="built_in">real</span>(ifft2(ifftshift(disnoise_2))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% Butterworth滤波器</span></span><br><span class="line"></span><br><span class="line">D_3=<span class="number">10</span>;<span class="comment">%通带半径</span></span><br><span class="line">n3=<span class="number">2</span>;<span class="comment">%滤波次数</span></span><br><span class="line">disnoise_3=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h=<span class="number">1</span>/(<span class="number">1</span>+(distance/D_3)^(<span class="number">2</span>*n3));</span><br><span class="line">        disnoise_3(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_3(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_3=uint8(<span class="built_in">real</span>(ifft2(ifftshift(disnoise_3))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 指数滤波器</span></span><br><span class="line"></span><br><span class="line">D_4=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">n4=<span class="number">2</span>;<span class="comment">%滤波次数</span></span><br><span class="line">disnoise_4=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h=expm(-(distance/D_4)^n4);</span><br><span class="line">        disnoise_4(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_4(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_4=uint8(<span class="built_in">real</span>(ifft2(ifftshift(disnoise_4))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 高斯滤波器</span></span><br><span class="line"></span><br><span class="line">D_5=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">disnoise_5=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        h=expm(-(distance^<span class="number">2</span>/(<span class="number">2</span>*D_5^<span class="number">2</span>)));</span><br><span class="line">        disnoise_5(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_5(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_5=uint8(<span class="built_in">real</span>(ifft2(ifftshift(disnoise_5))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%% 梯形低通滤波器</span></span><br><span class="line"></span><br><span class="line">D_6_1=<span class="number">20</span>;<span class="comment">%通带半径</span></span><br><span class="line">D_6_2=<span class="number">40</span>;</span><br><span class="line">disnoise_6=fftshift(FFT);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:a</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:b</span><br><span class="line">        distance=<span class="built_in">sqrt</span>((<span class="built_in">i</span>-a0)^<span class="number">2</span>+(<span class="built_in">j</span>-b0)^<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> distance&lt;D_6_1</span><br><span class="line">            h=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> distance&lt;=D_6_2</span><br><span class="line">                h=((distance-D_6_2)/(D_6_1-D_6_2));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                h=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        disnoise_6(<span class="built_in">i</span>,<span class="built_in">j</span>)=h*disnoise_6(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">IFFT_6=uint8(<span class="built_in">real</span>(ifft2(ifftshift(disnoise_6))));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">figure(<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">    imshow(I);</span><br><span class="line">    title(<span class="string">'origin'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">    imshow(J);</span><br><span class="line">    title(<span class="string">'origin + gaussian noise'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">    imshow(fftshift(<span class="built_in">log</span>((fft2(J)))),[]);</span><br><span class="line">    title(<span class="string">'spectrum取log'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>)</span><br><span class="line">    imshow(IFFT_0);</span><br><span class="line">    title(<span class="string">'直接反傅里叶变换'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">    imshow(disnoise_1);</span><br><span class="line">    title(<span class="string">'理想低通滤波器1频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>)</span><br><span class="line">    imshow(IFFT_1);</span><br><span class="line">    title(<span class="string">'理想低通滤波1'</span>);</span><br><span class="line">    </span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">7</span>)</span><br><span class="line">    imshow(disnoise_2);</span><br><span class="line">    title(<span class="string">'理想低通滤波器2频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>)</span><br><span class="line">    imshow(IFFT_2);</span><br><span class="line">    title(<span class="string">'理想低通滤波2'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">9</span>)</span><br><span class="line">    imshow(disnoise_3);</span><br><span class="line">    title(<span class="string">'butterworth滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">10</span>)</span><br><span class="line">    imshow(IFFT_3);</span><br><span class="line">    title(<span class="string">'butterworth滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">11</span>)</span><br><span class="line">    imshow(disnoise_4);</span><br><span class="line">    title(<span class="string">'指数滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">12</span>)</span><br><span class="line">    imshow(IFFT_4);</span><br><span class="line">    title(<span class="string">'指数滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">13</span>)</span><br><span class="line">    imshow(disnoise_5);</span><br><span class="line">    title(<span class="string">'高斯滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">14</span>)</span><br><span class="line">    imshow(IFFT_5);</span><br><span class="line">    title(<span class="string">'高斯滤波'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">15</span>)</span><br><span class="line">    imshow(disnoise_6);</span><br><span class="line">    title(<span class="string">'梯形滤波器频谱'</span>);</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">16</span>)</span><br><span class="line">    imshow(IFFT_6);</span><br><span class="line">    title(<span class="string">'梯形滤波'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍不同的滤波器&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>深入理解卷积</title>
    <link href="http://www.shong.win/2016/04/13/convolution/"/>
    <id>http://www.shong.win/2016/04/13/convolution/</id>
    <published>2016-04-13T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>卷积相关知识的梳理<br><a id="more"></a></p><h1 id="内积"><a href="#内积" class="headerlink" title="内积"></a>内积</h1><p>(a1,b1,c1)·(a2,b2,c2)=a1*a2+b1*b2+c1*c2</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p>有一个和卷积很容易混淆的概念，叫做相关</p><p>首先我们来比较一下：</p><pre><code>自相关函数    R(x)=∫f(t)f(t-x)dt     移-积-和卷积          g(x)=∫f(x)f(t-x)dt    褶-移-积-和</code></pre><p>相关和卷积只差一个反转的过程</p><p>相关描述的是：把一个信号 平移一段后，与原函数的相似程度</p><p>具体怎么个【褶-移-积-和】后面再讲</p><h2 id="相关的物理意义"><a href="#相关的物理意义" class="headerlink" title="相关的物理意义"></a>相关的物理意义</h2><p>相关最早是用来概率论中描述随机变量之间关系的概念，如相关系数。</p><p>实际上信号一般是一个随机过程，为了实现信号的检测、识别与提取，经常要了解两个信号的相似性，或一个信号经过一段延迟后自身的相似性。<br>但相关系数有缺陷。</p><p>因为分子是两个信号的内积，如sinx和cosx,从波形上看只是相位不同，而相关系数为零（因为正弦和余弦正交），因此引进相关函数，将原来两函数直接内积改为一个函数和另一个函数的延迟作内积。</p><p>其实二者从概念没有任何联系。由于相关函数第一个函数和第二个函数的延迟作内积（内积就是乘积累加），所以相关函数不满足交换，而卷积可以。延迟不同结果不同，所以相关系数是个数，而相关函数是函数，是<strong>延迟</strong>的函数。</p><h1 id="卷积"><a href="#卷积" class="headerlink" title="卷积"></a>卷积</h1><p>在泛函分析中，卷积是通过两个函数f和g生成第三个函数的一种数学算子，表征函数f与 经过<strong>翻转</strong>和<strong>平移</strong>的g 的重叠部分的累积。<br>如果将参加卷积的一个函数看作区间的指示函数，卷积还可以被看作是“滑动加权平均”的推广。</p><h2 id="一维信号"><a href="#一维信号" class="headerlink" title="一维信号"></a>一维信号</h2><p>g(x)=∫f(x)f(t-x)dt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">褶：f(x) -&gt; f(-x)</span><br><span class="line">移：f(-x) -&gt; f(t-x)</span><br><span class="line">积：f(x)f(t-x)</span><br><span class="line">和：∫f(x)f(t-x)dt</span><br></pre></td></tr></table></figure></p><p>反转平移之后重叠部分做内积(乘积累加)</p><p>某种意义上，对任意一个t，h(t)对它做了一个<strong>相同模式</strong>的贡献／变化</p><h2 id="一些便于理解的例子"><a href="#一些便于理解的例子" class="headerlink" title="一些便于理解的例子"></a>一些便于理解的例子</h2><p>辐射：设某核电站事故中，某工作人员每天到抢险现场工作T分钟，接受一定剂量的辐射，辐射会自然地衰减，如此工作N天，如何计算总的辐射量？</p><p>信号：一个物体时刻会受到一个周期性的固定模式的的能量的冲击。并且，物体在受到某个时刻的能量后，会按照一个关于时间的函数进行变化。<br>如何计算 某个时刻 之前所有冲击信号的遗留和现在受到的冲击信号的能量之和？</p><p>复利：</p><table><thead><tr><th><strong>本金</strong></th><th><strong>第一年</strong></th><th><strong>第二年</strong></th><th><strong>第三年</strong></th><th><strong>第四年</strong></th><th><strong>第五年</strong></th></tr></thead><tbody><tr><td>+100</td><td>100*(1.05)^1</td><td>100*(1.05)^2</td><td>100*(1.05)^3</td><td>100*(1.05)^4</td><td>100*(1.05)^5</td></tr><tr><td></td><td>+200</td><td>200*(1.05)^1</td><td>200*(1.05)^2</td><td>200*(1.05)^3</td><td>200*(1.05)^4</td></tr><tr><td></td><td></td><td>+300</td><td>300*(1.05)^1</td><td>300*(1.05)^2</td><td>300*(1.05)^3</td></tr><tr><td></td><td></td><td></td><td>+300</td><td>300*(1.05)^1</td><td>300*(1.05)^2</td></tr><tr><td></td><td></td><td></td><td></td><td>+200</td><td>200*(1.05)^1</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td>+100</td></tr></tbody></table><p>多项式乘法：</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/多项式乘法.jpg" alt=""></p><p>多项式a(n1)乘多项式b(n2)</p><p>对应的系数矩阵(向量)为a[最高次的系数,…,常数项系数] 和 b[最高次的系数,…,常数项系数]</p><p>多项式相乘结果的系数为c[最高次的系数,…,常数项系数]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c(i)=\sum_&#123;k=0&#125;^i a(k)b(i-k),i=0~(n1+n2)</span><br></pre></td></tr></table></figure></p><h2 id="二维图像"><a href="#二维图像" class="headerlink" title="二维图像"></a>二维图像</h2><p>对应一维信号处理过程，把时间t的定义域空间换成图像的平面矩阵形状空间</p><h3 id="二维离散卷积公式"><a href="#二维离散卷积公式" class="headerlink" title="二维离散卷积公式"></a>二维离散卷积公式</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/二维卷积.jpg" alt=""></p><h3 id="二维连续卷积公式"><a href="#二维连续卷积公式" class="headerlink" title="二维连续卷积公式"></a>二维连续卷积公式</h3><p>(f*g)(t1,t2)=∫∫f(x1,x2)g(t1-x1,t2-x2)dx1 dx2</p><h3 id="一些例子的理解"><a href="#一些例子的理解" class="headerlink" title="一些例子的理解"></a>一些例子的理解</h3><h4 id="将图像按照模板进行处理"><a href="#将图像按照模板进行处理" class="headerlink" title="将图像按照模板进行处理"></a>将图像按照模板进行处理</h4><p>对于图像而言，离散卷积的计算过程是模板翻转，然后在原图像上滑动模板，把对应位置上的元素相乘后加起来，得到最终的结果。如果不考虑翻转，这个滑动-相乘-叠加的过程就是相关操作。</p><h4 id="滤波"><a href="#滤波" class="headerlink" title="滤波"></a>滤波</h4><p>比如最简单的高斯模板，就是把模板内像素乘以不同的权值然后加起来作为模板的中心像素值，如果模板取值全为1，就是滑动平均；如果模板取值为高斯，就是加权滑动平均，权重是中间高，四周低，在频率上理解就是低通滤波器。</p><h4 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h4><p>因为当前模板内部图像和模板的相乘累加操作就是图像局部片段和模板的内积操作，这个过程可以看作图像的片段的空间 向 模板空间上的投影，一幅图像和一个模板卷积，得到的结果就是图像各个片段在这个空间上的投影累加和。如果这样的模板有一组，我们可以把这一组看成一组基，常见的如用一组Garbor滤波器提取图像的特征。</p><h2 id="总的来说"><a href="#总的来说" class="headerlink" title="总的来说"></a>总的来说</h2><p>在泛函分析中，卷积是通过两个函数f 和g 生成第三个函数的一种数学算子，表征函数f 与经过翻转和平移的g的重叠部分的累积。如果将参加卷积的一个函数看作区间的指示函数，卷积还可以被看作是“滑动加权平均”的推广。</p><p>（赋予不同的权值的想法）（加权累加）</p><p>二者在时间上不一定同步。卷积关心的正是二者在时间不同步的情况下（各个时间）激励和响应作用的结果。并且，这种响应是非因果的，即是不仅要考虑某一时刻输入信号的响应，还要全部包含这之前所有输入的响应。</p><h3 id="离散卷积："><a href="#离散卷积：" class="headerlink" title="离散卷积："></a>离散卷积：</h3><p>图像本身是离散的 所以权值也是离散的,模板是格子般的</p><p>忽略远距离的像素点的低权值影响，所以模板是有限的格子</p><p>权值分布的按照不同的函数分布，便是不同的卷积核，只不过受像素格的影响，是取离散的值。</p><p>整体就是个：褶 -&gt; 移 -&gt; 积 -&gt; 和  的过程</p><h3 id="卷积的类型"><a href="#卷积的类型" class="headerlink" title="卷积的类型"></a>卷积的类型</h3><h4 id="离散卷积和连续函数的卷积"><a href="#离散卷积和连续函数的卷积" class="headerlink" title="离散卷积和连续函数的卷积"></a>离散卷积和连续函数的卷积</h4><h4 id="线性卷积和循环卷积"><a href="#线性卷积和循环卷积" class="headerlink" title="线性卷积和循环卷积"></a>线性卷积和循环卷积</h4><p>通常说卷积时指的是线性卷积，在信号处理领域是跟线性时不变系统有关的一种运算</p><p>循环卷积我理解是使用DFT(FFT)计算线性卷积时的衍生品。</p><h2 id="一些问题："><a href="#一些问题：" class="headerlink" title="一些问题："></a>一些问题：</h2><h2 id="为什么要反转？"><a href="#为什么要反转？" class="headerlink" title="为什么要反转？"></a>为什么要反转？</h2><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/反转.jpg" alt=""></p><p>卷积的其中一方参与者是冲击响应，它所描述的的曲线方向与时间流逝一致。而卷积的输出等于以前的信号效果累加，这个累加必然从当前时间点逆时间流逝方向进行的。很显然，离当前时间越近，那个输入残留在系统中的回响就越大。</p><p>也可以从之前的多项式乘法的解释上理解。</p><h2 id="卷积核可不可以是改变的？"><a href="#卷积核可不可以是改变的？" class="headerlink" title="卷积核可不可以是改变的？"></a>卷积核可不可以是改变的？</h2><p>某种意义上，对任意一个t，h(τ)对它做了一个相同模式的贡献／变化</p><p>h(t)能否是变化的？</p><p>g(x)=∫f(x)(t-x)dt   —–&gt;   g(x)=∫f(x)f(x,t-x)dt</p><p>比如考虑边缘情况，边缘时模板就不相同了。</p><h2 id="模板的大小是有限的"><a href="#模板的大小是有限的" class="headerlink" title="模板的大小是有限的"></a>模板的大小是有限的</h2><p>二维卷积时 什么情况才能忽略远距离的像素值呢？万一远距离的像素的权值更高呢？</p><p>（收敛的想法 h(t)得是收敛的）</p><h3 id="线性时不变系统"><a href="#线性时不变系统" class="headerlink" title="线性时不变系统"></a>线性时不变系统</h3><p>连续时间系统与离散时间系统</p><pre><code>线性系统有两种定义：（1）根据系统的输入和输出关系是否具有线性来定义满足叠加原理的系统具有线性特性。即若对两个激励x1(n)和x2(n)，有T[ax1(n)+bx2(n)]=aT[x1(n)]+bT[x2(n)]，式中a、b为任意常数。不满足上述关系的为非线性系统。（2）根据组成系统的元件特性来定义由线性元件和独立电源组成的系统。</code></pre><p>时不变系统</p><pre><code>系统的参数不随时间而变化，即不管输入信号作用的时间先后，输出信号响应的形状均相同，仅是从出现的时间不同。用数学表示为T[x(n)]=y[n]则 T[x(n-n0)]=y[n-n0]，这说明序列x(n)先移位后进行变换与它先进行变换后再移位是等效的。 </code></pre><p>线性时不变系统</p><pre><code>既满足叠加原理又具有时不变特性，它可以用单位脉冲响应来表示。单位脉冲响应是输入端为单位脉冲序列时的系统输出，一般表示为h(n)，即h(n)=T[δ(n)]。 任一输入序列x(n)的相应y(n)=T[x(n)]=T[ δ(n-k)]； 由于系统是线性的，所以上式可以写成y(n)=T[δ(n-k)]；又由于系统是时不变的，即有T[δ(n-k)]＝h(n-k)；从而得y(n)=h(n-k)=x(n)*h(n)； 　　这个公式称为离散卷积，用“*”表示。</code></pre><h1 id="卷积定理"><a href="#卷积定理" class="headerlink" title="卷积定理"></a>卷积定理</h1><p>两个函数卷积后的傅里叶变换=两个函数的傅里叶变换后的乘积</p><p>卷积定理指出，函数卷积的傅里叶变换是函数傅里叶变换的乘积。即一个域中的卷积对应于另一个域中的乘积，例如时域中的卷积对应于频域中的乘积。<br>这一定理对拉普拉斯变换、双边拉普拉斯变换、Z变换、Mellin变换和Hartley变换等各种傅里叶变换的变体同样成立。在调和分析中还可以推广到在局部紧致的阿贝尔群上定义的傅里叶变换。<br>利用卷积定理可以简化卷积的运算量。对于长度为n的序列，按照卷积的定义进行计算，需要做2n-1组对位乘法，其计算复杂度为O(n^2)；而利用傅里叶变换将序列变换到频域上后，只需要一组对位乘法，利用傅里叶变换的快速算法之后，总的计算复杂度为O(n*log n)。这一结果可以在快速乘法计算中得到应用。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/卷积定理的证明.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;卷积相关知识的梳理&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
      <category term="math" scheme="http://www.shong.win/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>深入理解快速傅里叶变换</title>
    <link href="http://www.shong.win/2016/04/09/fft/"/>
    <id>http://www.shong.win/2016/04/09/fft/</id>
    <published>2016-04-09T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>傅里叶变换相关知识的梳理<br><a id="more"></a></p><h2 id="傅里叶变换的物理意义-时间域-频域的转换"><a href="#傅里叶变换的物理意义-时间域-频域的转换" class="headerlink" title="傅里叶变换的物理意义: 时间域  频域的转换"></a>傅里叶变换的物理意义: 时间域 <-> 频域的转换</-></h2><p>傅立叶原理表明：任何连续测量的时序或信号，都可以表示为不同频率的正弦波信号的无限叠加</p><p>推荐一篇关于傅里叶变换的文章 - <a href="http://zhuanlan.zhihu.com/wille/19763358" target="_blank" rel="noopener">掐死傅里叶教程</a></p><p>傅里叶变换示意图</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/FFT.gif" alt=""></p><p>时域-相位</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/频谱图.jpg" alt=""></p><p>时域-频域-相位</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/fft3.png" alt=""></p><h2 id="傅里叶变换的种类"><a href="#傅里叶变换的种类" class="headerlink" title="傅里叶变换的种类"></a>傅里叶变换的种类</h2><table><thead><tr><th><strong>变换</strong></th><th><strong>时间</strong></th><th><strong>频率</strong></th></tr></thead><tbody><tr><td>连续傅里叶变换</td><td>连续，非周期性</td><td>连续，非周期性</td></tr><tr><td>傅里叶级数</td><td>连续，周期性</td><td>离散，非周期性</td></tr><tr><td>离散时间傅里叶变换</td><td>离散，非周期性</td><td>连续，周期性</td></tr><tr><td>离散傅里叶变换</td><td>离散，周期性</td><td>离散，周期性</td></tr></tbody></table><p> mapping</p><ul><li>时间的连续     <-->频率的非周期性</--></li><li>时间的离散     <-->频率的周期性</--></li><li>时间的非周期性  <-->频率的连续</--></li><li>时间的周期性   <-->频率的离散</--></li></ul><p> FFT是DFT(离散傅里叶变换的快速实现)</p><h2 id="快在哪里？"><a href="#快在哪里？" class="headerlink" title="快在哪里？"></a>快在哪里？</h2><p> DFT：按定义求值需要O(N^2)次运算</p><p> FFT：利用库利-图基算法，以分治法为策略递归地将长度为N=N1*N2的DFT分解为长度为N1的N2个较短序列的DFT</p><p>通过许多小的更加容易进行的变换去实现大规模的变换，降低了运算要求，提高了与运算速度， 复杂度降低到O(N*logN)。FFT不是DFT的近似运算，它们完全是等效的。</p><p> 时间抽取算法<br>       基2按时间奇偶抽取的FFT</p><p> 频率抽取算法<br>       也分奇偶</p><p> W_N^nk=e^(-j<em>2</em>Pi*nk/N)<br> 对称 周期 可约性 特殊点</p><h3 id="傅里叶变换的种类与之间的关系"><a href="#傅里叶变换的种类与之间的关系" class="headerlink" title="傅里叶变换的种类与之间的关系"></a>傅里叶变换的种类与之间的关系</h3><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/Fourier-Relation.png" alt=""></p><h2 id="为什么选择正弦函数？"><a href="#为什么选择正弦函数？" class="headerlink" title="为什么选择正弦函数？"></a>为什么选择正弦函数？</h2><h3 id="正弦函数的优势"><a href="#正弦函数的优势" class="headerlink" title="正弦函数的优势"></a>正弦函数的优势</h3><p>正交基</p><p>压缩拉伸平移</p><h2 id="傅里叶变换的优势"><a href="#傅里叶变换的优势" class="headerlink" title="傅里叶变换的优势"></a>傅里叶变换的优势</h2><ul><li>傅立叶变换是线性算子,若赋予适当的范数,它还是酉算子;</li><li>傅立叶变换的逆变换容易求出,而且形式与正变换非常类似;</li><li>正弦基函数是微分运算的本征函数,从而使得线性微分方程的求解可以转化为常系数的代数方程的求解.在线性时不变系统的卷积运算为简单的乘积运算,从而提供了计算卷积的一种简单手段;</li><li>离散形式的傅立叶的物理系统内,频率是个不变的性质,从而系统对于复杂激励的响应可以通过组合其对不同频率正弦信号的响应来获取;</li><li>著名的卷积定理指出:傅立叶变换可以化复变换可以利用数字计算机快速的算出(其算法称为快速傅立叶变换算法(FFT))。</li></ul><h2 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h2><p>只能处理线性</p><ul><li><p>傅里叶变化：只能对能量有限的信号进行变换（也就是可以收敛的信号），无法对能量无限的信号进行变换（无法收敛的）</p></li><li><p>拉普拉斯变换（拉氏变换）：在原先的傅里叶变换公式中乘以一个衰减因子，使得能量无限的信号也能进行时频变换。</p></li><li><p>Z变换就是离散信号的拉氏变换。</p></li></ul><p>只能在全局范围内处理信号</p><ul><li>短时傅里叶变换 - 加窗与延拓</li><li>小波函数 - 加窗 </li></ul><p>时域和频域的局部化矛盾</p><p>-频域分辨率和时域分辨率高精度不能同时达到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从傅里叶变换公式可以看出，它是以正弦波及其高次谐波为标准基的，因此它是对信号的一种总体上的分析，具有单一的局部定位能力，也就是在时域的良好定位是以频域的全部信号分析为代价的，对频域的良好定位是以时域的全部信号分析为代价的，时域和频域分析具有分析的矛盾，傅立叶变换的频率谱中要么频率是准确的而时间是模糊的，要么时间是准确的而频率是模糊的，它不可能同时在时域和频域都具有良好的定位的能力。</span><br></pre></td></tr></table></figure><p>-时域和频域信息的绝对分离<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在频域不包含任何时域信息，在时域中同样找不到任何频域信息的影子。对于傅立叶频谱中的某一频率，不知道这一频率是何时产生的，只能从全局上分析信号.</span><br></pre></td></tr></table></figure></p><p>不能处理非平稳非线性时变信号</p><h2 id="基只能是唯一的么？"><a href="#基只能是唯一的么？" class="headerlink" title="基只能是唯一的么？"></a>基只能是唯一的么？</h2><p>正交基的概念</p><p>其他函数变换：小波变换（小波函数）、hht变换(本征模态函数)</p><hr><h1 id="二维图像的频域"><a href="#二维图像的频域" class="headerlink" title="二维图像的频域"></a>二维图像的频域</h1><p>一维信号的频域，我的个人理解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将信号拆分为几种频率的信号，而对于某一个频率的信号来说，频率决定了这个信号变换的快慢。</span><br></pre></td></tr></table></figure></p><p>图像的频率是表征图像中<strong>灰度变化剧烈程度</strong>的指标，是灰度在平面空间上的梯度。</p><p>如：大面积的沙漠在图像中是一片灰度变化缓慢的区域，对应的频率值很低；而对于地表属性变换剧烈的边缘区域在图像中是一片灰度变化剧烈的区域，对应的频率值较高。</p><p>实际上对图像进行二维傅立叶变换得到频谱图，就是图像梯度的分布图，当然频谱图上的各点与图像上各点并不存在一一对应的关系，即使在不移频的情况下也是没有。</p><p>傅立叶频谱图上我们看到的明暗不一的亮点，实际上图像上某一点与邻域点差异的强弱，即梯度的大小，也即该点的频率的大小（可以这么理解，图像中的低频部分指低梯度的点，高频部分相反）。</p><p>一般来讲，梯度大则该点的亮度强，否则该点亮度弱。这样通过观察傅立叶变换后的频谱图，也叫功率图，我们首先就可以看出，图像的能量分布，如果频谱图中暗的点数更多，那么实际图像是比较柔和的（因为各点与邻域差异都不大，梯度相对较小），反之，如果频谱图中亮的点数多，那么实际图像一定是尖锐的，边界分明且边界两边像素差异较大的。</p><p>对频谱移频到原点以后，可以看出图像的频率分布是以原点为圆心，对称分布的。将频谱移频到圆心除了可以清晰地看出图像频率分布以外，还有一个好处，它可以分离出有周期性规律的干扰信号，比如正弦干扰，一副带有正弦干扰，移频到原点的频谱图上可以看出除了中心以外还存在以某一点为中心，对称分布的亮点集合，这个集合就是干扰噪音产生的，这时可以很直观的通过在该位置放置带阻滤波器消除干扰。</p><h2 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">rgb3=imread(<span class="string">'pic.jpg'</span>);</span><br><span class="line">I=rgb2gray(rgb3);</span><br><span class="line"></span><br><span class="line">FFT=fft2(I);</span><br><span class="line">IFFT=ifft2(FFT);</span><br><span class="line"></span><br><span class="line">figure(<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">    imshow(I);</span><br><span class="line">    title(<span class="string">'the original gray picture'</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">    imshow(FFT); </span><br><span class="line">     title(<span class="string">'the spectrum after FFT'</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">    imshow(fftshift(<span class="built_in">log</span>(<span class="number">1</span>+<span class="built_in">abs</span>(FFT))),[]);</span><br><span class="line">     title(<span class="string">'shift -&gt; (log(1+abs(the spectrum))'</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">    imshow(uint8(IFFT));</span><br><span class="line">     title(<span class="string">'ifft'</span>);</span><br></pre></td></tr></table></figure><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/spectrum.png" alt=""></p><h2 id="彩色图像的傅里叶变换"><a href="#彩色图像的傅里叶变换" class="headerlink" title="彩色图像的傅里叶变换"></a>彩色图像的傅里叶变换</h2><p>分为RGB三通道执行FFT</p><h1 id="傅里叶变换的误差"><a href="#傅里叶变换的误差" class="headerlink" title="傅里叶变换的误差"></a>傅里叶变换的误差</h1><p>在测试原图像和反傅里叶变换后的图像之间的差异时，我将原图像的矩阵强制类型转换为double，后与反傅里叶图像的矩阵相减。<br>所得矩阵遍历求和为非零，也就是存在误差。</p><p>并且单独用两重for循环测试了图像中间的部分，发现并不是边界的问题。</p><p>而另一个求和是都转换成uint8 8位无符号整数，精度下降，我有理由推测，是精度的问题。<br>而非吉布斯现象。</p><p><img src="http://oljkaeely.bkt.clouddn.com/static/image/image-processing/error.png" alt=""></p><p>FFT在数学上是完全可逆的。</p><p>但是数字在计算机的中的存储是有精度的。</p><p>因为这个变换采用了浮点运算，因此需要足够的精度，以使在出现舍入误差时，结果中的每个组成部分的准确整数值仍是可辨认的。为了FFT的舍入误差，应该允许增加几倍log_2(log_2(N))位的二进制。以256为基数、长度为N字节的数可以产生大到(256)^2N阶的卷积分量，所以为了正确存储，需要16+log_2(N)位精度，若数i是浮点尾数的二进制位数，则有条件： </p><p>16+log_2(N)+x*log_2(log_2(N))&lt;i</p><p>如果i=24，对于任意感兴趣（N&gt;256）的N值，单精度是不合适的；如果i=53，也就是采用双精度，则允许N大于106，相当于几百万十进制位。所以，用FFT作大数乘法时，向量数组选用双精度类型。</p><h2 id="吉布斯现象"><a href="#吉布斯现象" class="headerlink" title="吉布斯现象"></a>吉布斯现象</h2><p>吉布斯现象Gibbs phenomenon（又叫吉布斯效应）： 将具有不连续点的周期函数（如矩形脉冲)进行傅立叶级数展开后，选取有限项进行合成。当选取的项数越多，在所合成的波形中出现的峰起越靠近原信号的不连续点。当选取的项数很大时，该峰起值趋于一个常数，大约等于总跳变值的9%。</p><p>由于子图像的变换系数在边界不连续 ，而将造成复原的子图像在其边界也不连续 。于是由复原子图像构成的整幅复原图像将呈现隐约可见的以子图像尺寸为单位的方块状结构，影响整个图像质量 。当子图像尺寸较小时更为严重。</p><p>阶跃信号不可以用正弦波叠加得到(能量近似)。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>二维余弦变换（DCT）代替二维傅里叶变换。</p><p>基本思路为：用一个对称的 2Nx2N  像素的子图像代替原来NxN 子图像。由于对称性， 子图像作二维付立叶变换，其变换系数将只剩下实数的余弦项。这样，即可消除Gibbs现象。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;傅里叶变换相关知识的梳理&lt;br&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="matlab" scheme="http://www.shong.win/tags/matlab/"/>
    
      <category term="math" scheme="http://www.shong.win/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>XML Course Responsive Website about xml/python/markdown</title>
    <link href="http://www.shong.win/2016/04/01/xml-course/"/>
    <id>http://www.shong.win/2016/04/01/xml-course/</id>
    <published>2016-04-01T10:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>To write the design of DTD, Schema and some codes about XML in the course of XML Technoligy of SEU.<br>More detaily, there are</p><ul><li>frame: the design of website</li><li>xml: The instance and data of our XML.</li><li>DTD: The Document Type Definition of our xml data.</li><li>XSD: The Schema of the xml(the .xsd file).</li><li>XSL: The info of our team using XSL/XSLT+Xpath.</li><li>MD: Our log/preblem <strong>html website tranformed from markdown</strong>.</li><li>Py: Try to input the xml data by <strong>spider</strong> from douban.</li><li>FO: Transform the data to pdf or text by XSL-FO technology.</li><li>SVG: A picture (Taiji from China) made by SVG.</li><li>XQuery: Query the data in the XML file.</li><li>SAX: Query the data in the XML file.</li><li>DOM: Query the data in the XML file.</li></ul><p><a href="http://www.shong.win/xml">The Project Site http://www.shong.win/xml</a></p><a id="more"></a><h3 id="Group-8"><a href="#Group-8" class="headerlink" title="Group 8"></a>Group 8</h3><ul><li>宋代伟 71113334 </li><li>韩畅 71113317</li><li>张雷铭 71113319 </li></ul><h2 id="Update-log"><a href="#Update-log" class="headerlink" title="Update log"></a>Update log</h2><p>Mar 3rd: </p><pre><code>the_module_of_movies.jpg --- the design of the structure of our XMLthe_module_of_movies.xml</code></pre><p>Mar 7th:</p><pre><code>movies.dtd --- the document type definition of movies.the_module_of_movies.xml --- reconstruct the xml, add element:score and add attribute:sex of element:star</code></pre><p>Mar 8th：</p><pre><code>correct some error of the quotation marks in ddt and xml.</code></pre><p>Mar 9th:</p><pre><code>movies.xsd --- the schema of the xml.the_module_of_movies.xml --- refresh the referrence definition of the schema.the_module_of_movies.xml --- reconstruct the xml, add element:score and add attribute:sex of element:star</code></pre><p>Mar 19th:</p><pre><code>index_main.xml index_main.xsl --- complete the xml file using XSL/XSLT+Xpathxml/xml.css --- in fact, we have complete the css to highlight the xml code long long ago.[HERE](http://yvon-shong.gityhub.io/xml.html)</code></pre><p>Mar 26th:<br>        change the website for log and problem and summary, replaced by the html trasnformed from README markdown file.<br>        try to input the xml data by spider from douban.</p><p>Mar 27th:<br>        code for the XSL-FO and find the hardness of the NavigatableString in bs4 of spider.</p><p>Mar 28th:<br>        github from han chang<br>        githubgithub test from yvon</p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem:"></a>Problem:</h2><ul><li>my xsd and dtd are on the github.com. how can I refer them in xml?</li><li>I will transfer this web to <a href="https://coding.net/u/yvonshong/p/xml_course/git" target="_blank" rel="noopener">https://coding.net/u/yvonshong/p/xml_course/git</a> to check the dtd and schema.</li><li>in order to modufy the web of next.html to show our plan to sync this README.md, we will use the Pandoc to try to transfer the markdown file to html file.</li><li>rebuild the xslt to process the movie.xml </li></ul><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary:"></a>Summary:</h2><ul><li>iframe<br>iframe is hard to be adaptive and to modularize. and there are some errors of link jumping. nestification and modularization are hard by html.</li><li>sync<br>  Git plus OneDrive are convenient for two computer which are used by the only one person.<br>  the editor for web like sublime text, vs code. I find the vs code integrate the Git.</li><li>tools<br>  the online xml - xsl-fo -pdf transform  <a href="http://www.utilities-online.info/foprender/#" target="_blank" rel="noopener">http://www.utilities-online.info/foprender/#</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;To write the design of DTD, Schema and some codes about XML in the course of XML Technoligy of SEU.&lt;br&gt;More detaily, there are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;frame: the design of website&lt;/li&gt;
&lt;li&gt;xml: The instance and data of our XML.&lt;/li&gt;
&lt;li&gt;DTD: The Document Type Definition of our xml data.&lt;/li&gt;
&lt;li&gt;XSD: The Schema of the xml(the .xsd file).&lt;/li&gt;
&lt;li&gt;XSL: The info of our team using XSL/XSLT+Xpath.&lt;/li&gt;
&lt;li&gt;MD: Our log/preblem &lt;strong&gt;html website tranformed from markdown&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Py: Try to input the xml data by &lt;strong&gt;spider&lt;/strong&gt; from douban.&lt;/li&gt;
&lt;li&gt;FO: Transform the data to pdf or text by XSL-FO technology.&lt;/li&gt;
&lt;li&gt;SVG: A picture (Taiji from China) made by SVG.&lt;/li&gt;
&lt;li&gt;XQuery: Query the data in the XML file.&lt;/li&gt;
&lt;li&gt;SAX: Query the data in the XML file.&lt;/li&gt;
&lt;li&gt;DOM: Query the data in the XML file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.shong.win/xml&quot;&gt;The Project Site http://www.shong.win/xml&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="project" scheme="http://www.shong.win/categories/project/"/>
    
    
      <category term="python" scheme="http://www.shong.win/tags/python/"/>
    
      <category term="xml" scheme="http://www.shong.win/tags/xml/"/>
    
      <category term="bootstrap" scheme="http://www.shong.win/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>随轻轨呼啸而过的夏天 -- 记重庆社会实践之消失的棒棒</title>
    <link href="http://www.shong.win/2015/08/30/summer-in-chongqing/"/>
    <id>http://www.shong.win/2015/08/30/summer-in-chongqing/</id>
    <published>2015-08-30T17:02:36.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>在开学一周内，我敲下了这篇感悟，在开学前的十天里，我们六人，前往了山城重庆，去调查那即将消失的棒棒。</p><p>我是一名四川人，自然对重庆有着特殊的印象，无论是巴蜀人特爱的辣椒，夏天也要吃出满头大汗的火锅，还是川渝地区的美女。巴与蜀，1997年，重庆从四川省分出作直辖，自然我是年幼无感，这次却是我记事以来第一次踏上这片土地。</p><a id="more"></a><p>论说重庆和四川的差别，自然是重庆这依山而建的城市，轻轨在山体与楼房之间穿梭，嘉陵江汇流，这几天下来，对重庆的感觉颇为微妙。巴蜀因湿寒而特爱火锅，以此祛除体内的寒气，火锅当然是麻油加酸，成都会加耗油，绝非江浙地区的花生酱等佐料。重庆的火锅与成都的火锅又不太相同，他强调的是辣，而特辣的级别却并不会另我难以接受（可能是成都人练出来<br>的？我伙伴都挺难以承受这辣的，甚至得将食材在锅里煮后得在白水里涮一番褪去表面的辣油），而成都更偏重于麻，火锅里的花椒有时挑出来能放满一碗，辣在舌后，麻在唇口。一说到川菜，人们就会想到大把的花椒和辣椒。说到两地到底哪边的饮食更美味，其实也是一个非常纠结的问题。重庆代表认为，大菜当然是重庆江湖菜取胜，麻辣鲜香俱全，而成都方面在小吃上做得更好，口感也更全面。而成都代表则认为重庆菜一味麻辣，而且“乱劈柴”，就拿一道回锅肉来说，重庆人可以用洋葱、白菜、胡萝卜、花菜等多种配料，成都人则只会用蒜苗。</p><p>在与房东接触的时候，我便深刻感受到川渝女性之间的差异，房东是一名九几年重庆工商大学毕业的地道重庆人，在我们采访的时候，她使用的普通话与他人并无二异，但在接电话的时候使用重庆话倒令我立马感受到了重庆女性的火辣与强势 ，有人评价的是重庆女性脾气火爆，而成都女性多委婉可也够折腾人，各种滋味，欢迎各位来感受。而房东使用的方言，虽然在外地人听来，成都话重庆话差别不大。可在两地市民听来，这区别可大了。成都话婉转，儿化音多，有很多饶舌音；重庆话很多平舌音，不拖泥带水。成渝两地的人，都喜欢模仿对方的口音说上那么几句调侃的话。</p><p>而城市方面，重庆层层叠叠的建筑，阳台外面的山与高架，轻轨穿山而过，洪崖洞从一楼进，顶楼出的时候又是一条马路。甚至下到第5楼，中间居然还藏着又一条街道！不得不佩服。</p><p>对这座城市的印象大致如此，夏天的重庆，烈日，轻轨，地表温度高得要烫熟鸡蛋，吃一碗酸辣粉回味无穷，倾斜的车道，无数的台阶，这座三维立体城市，也就造就了这里泼辣的人们，造就了朝天门码头卸货豪爽的挑夫，在无数梯子和倾斜的坡道上劳作的搬运工，这些人，也就是我们即将要采访的山城棒棒军。</p><p>我作为四川人，在团队中主要做翻译采访的任务，犹记小的时候还在电视上看过一部电视剧，叫做《山城棒棒军》，可能这就是我未来重庆之前，对我们的社会实践的全部印象。其实四川重庆云南贵州这一带的方言都很容易让外地人听懂，而在社会实践的过程中，我通常用方言，也就是这边的西南官话，在外和商家路人进行交涉，跟棒棒们进行聊天，将采访中方言中最令人疑惑的——也就是方言中的特殊用语翻译给我的伙伴听，这倒令我觉得十分有趣。比如最经典的，“摆龙门阵”，就是聊天的意思，“dia东西”就是提东西的意思。有时候我们聊得切口转换不过来，竟然会对棒棒哥老倌说普通话，跟我的伙伴说方言，令人捧腹。</p><p>论说这几天下来我们接触的棒棒，多是十分热情的与我们交谈，也经常会有我们在聊着聊着的时候，旁边路过的棒棒过来听听，我记得我们去专访一个房东介绍给我们的棒棒程师傅时，他们一群人正在树下乘凉，我们对他进行采访，他经常给我们介绍“诶这个棒棒，都是在重庆买了房子的。”“那个棒棒，每个月挣好多好多！”，采访完准备合影的时候，程师傅便拉着他旁边一个伙伴说，“诶拍照片呢，来一起拍”，而那位棒棒却有一些羞涩，程师傅便强行抱住他，我们抓拍住这个画面时都觉得蛮好笑又温馨，或许这算是工友之间的感情？</p><p>而对于棒棒这个职业，我也是通过这次社会实践才真正的试图从他们的角度来观察来思考，棒棒们没有医保社保，是因为本身月收入也不高，更无暇去交社保医保，而当地市民对棒棒的态度是习惯他的渐渐消失，因为在城镇发展的重庆，城中村在逐步改建，社会服务也愈发发达，搬家公司，快递，社区超市，都逐步取代了90年代左右棒棒的作用，我和我伙伴在讨论时在想棒棒的出路，要么转行，要么对棒棒这个职业进行规范化约束，比如，现在已经有”棒棒军搬家公司“，有类似于将零散的棒棒挂在棒棒公司的名下，公司收取中介费，并对棒棒的行为就行约束，更能礼貌对待客户。可在采访中我们也发现，棒棒们认为这样并不自由。我们甚至想，将棒棒打造成类似于老北京三轮车一样的特色服务，可棒棒军的核心是下苦力，对游客来说也就搬运行李，与其他地区的搬运工的差异仅是那跟赋予他们职业名称的棒子。</p><p>而在采访中，市民其实只是觉得棒棒们可能会不讲卫生，并不是低贱，因为这也是一种职业，他们靠他们的力气和勤劳去挣钱，行得光明正大，做得又对自己来说自由，甚至打趣得告诉我他们经常在商店里撺掇，因为里面有空调！</p><p>我认为，我们对于棒棒的社会实践，不仅仅是因为人文关怀之对劳动人民基本保障的呼吁，我们在采访时更能感受到棒棒们所特有的”棒棒精神“，这或许才真正是对于重庆的地形来说，他们成为一种标志的原因。</p><p>基本敲完那时的思路与所见所感的我，不禁有一点点想念火热夏天里，在重庆和伙伴一起吃的那碗酸辣粉，真的太好吃了。。。。</p><p>重庆·轻轨·辣·热 还有棒棒。</p><p><a href="http://mp.weixin.qq.com/s?timestamp=1487379972&amp;src=3&amp;ver=1&amp;signature=LcMECl0hj8yO9HvWaBEhskStS3sO5D2NQqKXy7*GvAk4W6khx4Q3U54wPnj1wO9y3UEGAxdpgUuMYWC7IHDpxjPMtt48u1QbnUmR*bzvTcDxieJw8VmXH0Thg-DNnKdK23ZhVbGdder7tymtCl3u0mPnYcWTJm2I4TPtsO*4Hh8=" target="_blank" rel="noopener">know more</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开学一周内，我敲下了这篇感悟，在开学前的十天里，我们六人，前往了山城重庆，去调查那即将消失的棒棒。&lt;/p&gt;
&lt;p&gt;我是一名四川人，自然对重庆有着特殊的印象，无论是巴蜀人特爱的辣椒，夏天也要吃出满头大汗的火锅，还是川渝地区的美女。巴与蜀，1997年，重庆从四川省分出作直辖，自然我是年幼无感，这次却是我记事以来第一次踏上这片土地。&lt;/p&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>yeeyan:Extensibility and R Support in the Azure ML Platform</title>
    <link href="http://www.shong.win/2015/03/03/yeeyan/yeeyan-Extensibility-and-R-Support-in-the-Azure-ML-Platform/"/>
    <id>http://www.shong.win/2015/03/03/yeeyan/yeeyan-Extensibility-and-R-Support-in-the-Azure-ML-Platform/</id>
    <published>2015-03-03T05:04:58.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文作者微软信息管理和机器学习团队合作工程经理<a href="http://social.technet.microsoft.com/Profile/Debi%20Mishra%20-%20ML?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Debi Mishra</a>。</em></p><p>近年来开源社区使用R语言和Python开发工具和程序包对机器学习(ML)的驯化突飞猛进，尤其是在机器学习从业者得到广泛应用。许多基于以上语言开发的强有力的机器学习库，使更多的人采纳这些语言进行开发，形成良性循环。R语言的普及与<a href="http://cran.r-project.org/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">CRAN</a>有很大关系，而Python的流行得益于<a href="http://scipy.org/index.html?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">SciPy</a>堆。但是，通常以上语言和相关工具和程序包像一个个孤立的岛屿，常无法实现互用性协作，而协作的瓶颈不仅仅在编程语言或脚本层面。这些环境中有面向“数据集”的特定对象，“柱式模式”的特定解释和其他关键数据的科学建构。要实现“云环境下的智能”，机器学习平台得允许开发人员和数据科学家混合搭配不同的编程语言和程序框架，形成自己的解决方案。数据科学解决方案通常包括许多阶计算，数据流和机器学习算法，数据流包括数据摄取，转换和优化。不同的编程语言，开发工具和程序包在满足特定阶段需求的条件下，可能会适用于不同的步骤。</p><p><a href="http://azure.microsoft.com/en-us/services/machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Azure机器学习服务</a>是可扩展，基于云端的多用户服务，可编辑和执行数据科学工作流，并将工作流产品化。Azure机器学习的独门秘籍在于Azure机器学习工作室的工具集赋予了人们利用数据和计算，进行功能复合和执行任意工作流的能力。这样的工作流可作为Azure的表述性状态传递(REST)终端进行运转。这使开发者和数据科学家能仅用“拖拽连接”模式编辑数据和计算工作流，仅用轻轻点击便能测试工作流和作为网络服务产品启动。</p><p>Azure机器学习服务未来愿景中的关键部分是强调机器学习平台的可扩展性和对诸如R语言，Python和其他类似环境下开源软件的支持。如此现有机器学习从业者所积累的技巧，代码和脚本都能直接引入Azure机器学习平台并毫无阻力地对Azure机器学习的内容进行操作。在创建Azure机器学习平台根基时就牢记这一原则。</p><p>我们首先支持的是R语言编程环境，尤其在以下方面：</p><ul><li>数据科学家能导入R语言编写的一切，与Azure机器学习工作流无缝衔接。</li><li>Azure机器学工作室能几分钟内将R语言脚本变成可扩展和低延迟的网络服务。</li><li>数据科学家能使用预装的超400种热门CRAN程序包，另外他们还可使用英特尔数学核心函数库的优化线性代数核心函数。</li><li>数据科学家可用如ggplot2的R语言绘图库，将数据可视化。</li><li>通过高保真双向数据框架和模式桥，该平台和运行环境能自动识别和提供扩展，以达到协作互用性。</li><li>开发者能访问R语言公共机器学习算法并和Azure机器学习平台提供的其他算法组合。</li></ul><p>下图展示了如何在Azure机器学习中使用“执行R模块”，将“乳腺癌数据”数据集可视化。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/6237.R-image%201.JPG" alt=""></p><p>我们欣喜地看见R语言在我们第一批用户中是如此的受欢迎。有趣的是，用户最常见的错误是在他们自己的脚本中的语法错误。使用数据表明，R语言应用于Azure机器学习模型化实验近四分之一的实现。R语言预测程序包正被微软的重要客户和我们的内部团队使用。</p><p>你也可<a href="http://azure.microsoft.com/en-us/pricing/free-trial/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">立即开启Azure机器学习的R语言编程之旅</a>。与此同时，我们的工程师团队正致力于扩展Azure机器学习对Python的类似支持——想了解更多，请继续关注此博客。</p><p>Debi</p><p>关注我的<a href="https://twitter.com/debipmishra?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Twitter</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Azure ML is Helping CMU Become More Energy Efficient</title>
    <link href="http://www.shong.win/2015/03/02/yeeyan/yeeyan-Azure-ML-is-Helping-CMU-Become-More-Energy-Efficient/"/>
    <id>http://www.shong.win/2015/03/02/yeeyan/yeeyan-Azure-ML-is-Helping-CMU-Become-More-Energy-Efficient/</id>
    <published>2015-03-02T09:16:21.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文由微软信息管理与机器学习中心(IMML)商业战略主管<a href="https://social.technet.microsoft.com/Profile/Vinod_Anantharaman" target="_blank" rel="noopener">Vinod Anantharaman</a>撰写。</em></p><p>建筑都是由如供热，制冷，照明，通风，安保等多重复合系统共同维持运转，任何一个系统都能影响居住者的舒适度和能源消耗量。传统上每个系统都有它独立的传感器，驱动器或相关元件，这些聚合起来仅为某一特定系统进行数据分析。<span style="line-height: 1.45em; background-color: initial;">正是因为这些建筑物管理的窖式方法，通常缺失对建筑物运作效率整体上的把握，或者全局观。这给精确预测能源使用或浪费带来了挑战。</span></p><p>位于宾夕法尼亚州匹兹堡的卡内基梅隆大学(Carnegie Mellon University, CMU)正引领着超12,000名学生和5,000名职工教员的一项研究，它也是这项研究自1900创建之后催化改革的温床。CMU的<a href="http://www.cmu.edu/architecture/research/cbpd/absic-cbpd.html?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">建筑性能和诊断研究中心</a>负责研发软硬件，以改善校区建筑在达到高居住舒适度情况下的性能。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/CMU%20-%201.jpg" alt=""><br><em>卡内基梅隆大学建筑性能和诊断研究中心，版权所有。©Carnegie Mellon University</em></p><p>建筑性能和诊断研究中心有幸创建了一个综合兼自动化的系统，它能提高建筑能源性能，计算节省的开支，监测故障和实时采取措施。这样的系统也将满足供热和降温需求，并且相应的调整。它会在全局瘫痪之前警告建筑管理员进行修复或替换失效部件。</p><p>在这预测分析聚合系统中，CMU有两项基本要求：</p><ol><li><p>易于实施</p></li><li><p>对非技术人员也易于使用</p></li></ol><p><strong>解决方案</strong></p><p>在与<a href="http://www.osisoft.com/Default.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">OSIsoft</a>的合作关系中，研发中心曾开发了一款利用预测分析的能力管理所有新旧传感器的综合系统。<a href="http://azure.microsoft.com/en-us/services/machine-learning/" target="_blank" rel="noopener">Azure机器学习</a>是CMU解决方案的中坚力量，从本地部署的PI服务器收集整个校区传感器的数据开始，通过基于<a href="https://azure.microsoft.com/en-us/" target="_blank" rel="noopener">微软Azure平台</a>的PI云服务，传输到Azure中运行的一台PI服务器中，然后服务器内利用OSIsoft研究工具进行过滤，统计和定型，然后实时传输到一个Azure储存库中，以便Azure机器学习能访问进行预测分析。所得预测数据存储在PI服务器中可被Power BI访问以备建筑物管理系统调用。</p><p>解决方案是如此的简单迅速，易于启动和持续使用。研究中心的研发员Bertrand Lasternas说“我们无需准备客户端软件便能利用Azure机器学习展开工作，云上的一切早已准备就绪。它比我们历来尝试过的工具都更易上手”。</p><p>以下是使用了CMU解决方案的一些示范用例：</p><ul><li><p>某一建筑的温度需要从早上9点开始工作时需提升至72华氏度，供热系统常常6点就得开始运转，或者天气热点时得从6:30开始，这样很浪费能源。CMU想利用预测分析来确定对建筑物开始供热的具体时间。研究员致力于利用含建筑物近期内外部温度，预期太阳辐射水平和其他因素的模型，来预测9点时建筑物内部温度。因预期太阳辐射水平数据不可得，研究员首先得预测这个变量。他们利用Azure机器学习中的提升决策树算法训练了一项太阳辐射模型，并测试这项模型以验证精确度后，将其运用在内部温度模型上以解决对建筑物开始供热的问题，以节省能源。</p></li><li><p>CMU想要解决隐藏在可视检测后的部件故障检测和诊断的难题，因为他们常在墙体之后或者地板之下。通过使用Azure机器学习处理PI系统收集的历史数据，他们预测能节省潜在开支的故障。</p></li></ul><p>Azure机器学习解决方案通过允许研究人员项目组或研究生能互相分享工作空间，以促进之间的合作。</p><p><strong>益处</strong></p><p>据实验结果所得，CMU研究员估计他们的解决方案能节省达20%的能源开支。关于它在校区内实施的事项正在讨论中，一年下来它能在哪节省成百上千的资金。Lasternas说：“节省的能源主要来自于能源使用量的削减和调低每时所需和所流失的能源”。CMU研究员预想PI系统和微软Azure云不仅面向研究员，也面向与建筑物进行交互影响的工程师和技术员。比如现场服务技术员能在远程设备故障之前用手中的平板电脑访问预测分析所得洞察，来检查和升级这些设备。手机通知也可以警醒工程师能量需求高峰的到来。因为这些解决方案具有可扩展性并价廉物美，同样适用于不能由传统解决方案驱动的群体建筑和公共设施系统。</p><p>各行各业的客户正利用微软Azure机器学习部署企业级预测分析解决方案——你也可以<a href="http://azure.microsoft.com/en-us/trial/get-started-machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">现在开始</a>。</p><p>在卡内基梅隆大学，他们为创建的解决方案预估其广阔的舞台。“我们见证Azure机器学习和PI系统引领着面向大众的自助式预测分析时代，未来无限可能。”Lasternas如是说。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:How Azure ML Partners are Innovating for their Customers</title>
    <link href="http://www.shong.win/2015/02/23/yeeyan/yeeyan-How-Azure-ML-Partners-are-Innovating-for-their-Customers/"/>
    <id>http://www.shong.win/2015/02/23/yeeyan/yeeyan-How-Azure-ML-Partners-are-Innovating-for-their-Customers/</id>
    <published>2015-02-23T17:14:39.000Z</published>
    <updated>2018-06-17T17:46:30.100Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文作者为微软机器学习副总裁 <a href="http://social.technet.microsoft.com/Profile/Joseph%20Sirosh?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Joseph Sirosh</a></em></p><p>上周微软<a href="http://blogs.microsoft.com/blog/2014/07/09/microsoft-delivers-updates-innovations-and-expansions-to-meet-cloud-demand/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">发布</a>了<a href="http://azure.com/ml?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Azure机器学习(Azure ML)</a>消费者和企业测试预览版。Azure机器学习是一个全托管云平台，可数分钟内发布高级解析网络服务并构建强有力的企业级应用。因为机器学习对许多消费者和合作伙伴来说是前沿科学，正值今年全球合作伙伴大会，我很高兴向各位介绍我们全新的在线<a href="http://aka.ms/MLU?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">机器学习大学（MLU）</a>。MLU是帮助合作伙伴起步和运营Azure机器学习的一系列在线学习资源。它包括数据自导入起的科学生命周期的复核，净化数据创建预测性模型和将其部署为成品的网络服务。MLU为现场训练项目提供了切入口，以及定期的产品更新和其他Azure机器学习的高质资源。</p><p>我在<a href="http://blogs.technet.com/b/machinelearning/archive/2014/06/26/the-joy-and-hard-work-of-machine-learning.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">早期的博文</a>的中提及Azure机器学习是怎样改变创建机器学习应用的游戏规则的，着力于我们的合作伙伴如何应用它为顾客快速创建全新解决方案。</p><p>Azure机器学习的合作伙伴，以他们分析方面和相关领域丰富的专业知识，帮助客户将万千数据转化为可控洞察力。像<strong>MAX451</strong>, <strong>Neal Analytics</strong>, <strong>OSIsoft</strong>, 和<strong>Versium等</strong>合作伙伴已为客户在Azure机器学习上部署了企业级预测性分析解决方案，他们所修建的解决方案跨度之大，叹为观止，请允许我分享四个故事和他们的名人名言吧。</p><p><strong>MAX451帮助Pier 1 Import预测顾客下次会买什么</strong></p><p>分析处理了上千家商店后，<a href="http://www.pier1.com/about-pier-1/about_us,default,pg.html?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Pier 1 Import</a>立志成为顾客身边的家具和家用装饰商店。他们颁布了一项长期的全覆盖的策略，名为“1 Pier 1”，致力于更好的理解顾客，基于交互来提供更个性化的服务，这样才能接近Pier 1品牌的核心。</p><p><a href="http://max451.com/index.html?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">MAX451</a>已创建一项Azure机器学习解决方案来预测顾客未来产品的偏好和他们希望如何购置和收货。引用Pier 1 Import行政副主管Eric<br>Hunter的一句：</p><p><em>深度挖掘顾客之间的关系对我们而言至关重要。洞察我们的数据使我们受益良多，先于顾客准备她会何时何地和怎样消费，用预测性分析邀请她作回头客购置她会喜欢的商品。无论如何，个性化的消息将会吸引她不久后回访Pier 1 Import。在测试期间，我们超40%的提高了将会推送产品的预测精度。在此之前，将数据转换为有用的信息的过程相当慢，而现在我们将时间削减到仅需几天。</em></p><p>Pier 1t的CIO, Andrew Laudato曾说过这样一段话：</p><p><em>Pier 1 Import佐证了微软能将吸纳复杂之物，如高级预测性数据分析和机器学习，并置其于云端而轻松易得。令人欣慰的是，我们仅需针对结果进行分析，不必忧虑产生其数据的复杂算法。更欣喜的是，在项目中我们的小组是如此迅速地得出重要结果。与MAX451的合作十分愉快，Pier 1 Import对与这样精简而睿智的合作伙伴感到十分开心。</em></p><p>MAX451的CEO, Kristian Kimbro Rickard补充道：</p><p><em>在MAX451，我们在云端经营全部业务，而我们的服务和产品也全面向已在云端或正向云端移植的顾客。微软机器学习并不需要一大伙数据科学家顾问来帮助顾客，我们变得小巧，敏捷，移动迅速，并且我们愿持续如此：微软的机器学习使我们持续提供卓越服务，而并不需我们的猎头寻找隐士高人般的高薪顾问。</em></p><p><strong>Neal<br>Analytics 帮助一家网上商店优化行销费用</strong></p><p><a href="http://www.nealanalytics.com/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Neal Analytics</a>创建了Azure机器学习解决方案并正帮助一家大型网上商店优化搜索项目（引流到他们的站点）上的花销。搜索公司通过拍卖，权衡竞标和内容质量，对广告的搜索项目进行排序。Neal Analytics开发的解决方案让客户对某一特定搜索项目为提高排名所需的拍卖进行估值，因为竞争对手并不会定期（仅会偶尔）更改其搜索项目的投标，投标策略上的及时响应能给顾客带来竞争优势。</p><p>Neal<br>Analytics已为优化许多低频关键字竞标创建了一项预测模型化解决方案，并且其易于创建又便于维护。他们极力避免为处理大量数据而创建基于R语言或者Linux的互联网型新计算堆，寄望于在部署，测试和重定义模型上能迅速返回，趋于实时。Azure机器学习完美的满足以下需求：使数据科学家集中精力于工作而不被配置大型数据计算架构的复杂性所迷惑。Neal Analytics的CEO兼董事长Dylan Dias曾说：</p><p><em>正因为Azure机器学习创建于云上，我们才得以享受无缝的可扩展性。准确得讲，总体拥有成本是Azure机器学习远超他人的王牌。Azure机器学习的学习成本是最低的，也因为快速操作化周期而易于驱动易于采纳。也可以衡量数据科学的宝贵天赋。相对缺少经验的分析师现也精通工作。Azure机器学习帮助数据科学改善洞察数据和操作时间上的重要度量（快2至4倍）。以此事半功倍，皆大欢喜。</em></p><p><strong>OSIsoft帮助卡内基梅隆大学（CMU）节约能源</strong></p><p><a href="http://www.cmu.edu/index.shtml?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">卡内基梅隆大学</a>的<a href="http://www.cmu.edu/architecture/research/cbpd/absic-cbpd.html?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">建筑性能和诊断学中心</a>研发了综合硬件和软件的解决方案，以改善CMU校区的建筑效率，达到更高的居住舒适度。在过去的十年间，研发中心为判定影响居住舒适度不良因素的角度，进行了上千个相关领域的调查和测量。当然诸如天气的外部因素也能辅助预测制冷或供热能源的消耗。利用这些数据，研发中心想创建一项系统来增加建筑的整体能源性能。机器学习当然是任一解决方案的核心组成。</p><p>研发中心和<a href="http://www.osisoft.com/Default.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">OSIsoft</a>合作，利用OSIsoft的<a href="http://www.osisoft.com/software-support/what-is-pi/What_Is_PI.aspx" target="_blank" rel="noopener">PI系统</a>率先收集上述实时信息，然后开发一款能预测建筑能源消耗，监测故障，处理问题和提供节省成本的系统。CMU见证过部署了这款系统的某建筑节省了达30%的能源。在这项项目前线工作的CMU研究员Bertrand Lasternas曾说：</p><p><em>基于网络，平台独立的机器学习解决方案十分吸引我们，实现的简单性让机器学习对大量不同背景的研究员（甚至不是数据科学家）戳手可得。Azure机器学习解决方案利用对用户更加友好的安装过程提供了相对的精确性，同时与现行系统进行整合。静默的API对无缝的成功整合至关重要…无缝数据流的迅速启动和与现行解决方案的整合，是数据处理中最大的优势。</em></p><p>Gregg<br>Le Blanc是OSIsoft的研究和创新主管，负责对新技术进行评估。他已评估过几个机器学习相关的技术，以下便是他的分享：</p><p><em>我们发现Azure机器学习良好得平衡了速度和性能，当我们的基础设施早已实现实时作业智能，而我们的瓶颈在于先于实时传感器数据前预测问题。利用Azure机器学习，我们正在研发基于PI系统所得数据预测不同行为后的含义，并储存起来以供PI系统的探索性研究。结果显示。我们为客户实现了用更少的测试得到更多的预测，使我们的客户能在尽可能短的时间内实现得到高质运算的平衡。</em></p><p><strong>Versium帮助一家大型零售商更准确的预测礼品卡欺诈</strong></p><p><a href="http://www.versium.com/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Versium</a>正运转着一款名为<a href="http://www.versium.com/lifedata?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">LifeData</a>™的预测性分析评分服务。将超过4亿人的真实生活属性聚合起来，横跨诸如购买兴趣，社会行为，人口统计数据和财务信息等数据集。Versium以独特的视角洞察消费者的行为，以助公司发展前景和营销活动方面一臂之力。</p><p>Versium与一家大型零售商客户合作，帮助他们预测礼品卡的欺诈性购买。该零售商已具有一套基于条款规则的现行系统进行监测欺诈，但它会误报假阳性结果（即对欺诈的错误预测）。将错误最小化，并停止欺诈，对该客户来说是终极成功标准。Versium能快速聚合Azure机器学习上的预测型模型解决方案，在一次试运行中，被老系统否认的1000次交易中仅有6%其实是真实的欺诈。这一数字极大提高了用户的满意度，增大了收益，为该零售商创造了可观的价值。以下是Versium的CEO<br>Chris Matty所言：</p><p><em>(Azure机器学习<span style="line-height: 1.45em;">的主要优势在于它能交互式显化整个机器学习的流程，模型的数据和度量，也能在模型创建后快速发布一项网络服务。就我而言，解决方案（如预防欺诈）的部署是一步很有价值的重要环节。所以，准确性，速度和安全性都十分重要，这便是这项技术所有价值的体现。我们部署了很多评分系统，并且几天之内构建，调试并验证的一款模型，价值颇丰。而提升Azure机器学习平台使我们能几天内创建部署一款基于Versium专有的LifeData™，又整合我们合作伙伴的CRM，销售或其他内部数据的预测性评分系统。</span></em></p><p><strong>结论</strong></p><p>机器学习的成功应用通常不仅需要出色的工具，也需要某领域扎实的专业知识，辛勤劳作来得到客户的数据并加以理解，和集成客户软件解决方案的经验。我们的合作伙伴带来了迫切需要的跨学科专业知识，他们被我们热情点燃，热心于帮助客户将数据转化为可操作的商业洞察力，并为云托管的机器学习解决方案开拓出一条道路，等着我们的是无限的商机。</p><p>Joseph</p><p>关注我的<a href="https://twitter.com/josephsirosh?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Twitter</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Machine Learning for Industry - A Case Study</title>
    <link href="http://www.shong.win/2015/02/23/yeeyan/yeeyan-Machine-Learning-for-Industry-A-Case-Study/"/>
    <id>http://www.shong.win/2015/02/23/yeeyan/yeeyan-Machine-Learning-for-Industry-A-Case-Study/</id>
    <published>2015-02-23T06:49:12.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文作者微软雷德蒙德研究院首席研究经理<a href="http://social.technet.microsoft.com/Profile/Chris%20Burges?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Chris Burges</a></em></p><p>大家好，我是Chris Burges。回顾我在微软工作的14年，和先前在贝尔实验室的14年，我花费了大量时间涉猎机器学习（ML），也关注如何解决工业能力问题。自从机器学习（尤其是面向工业的机器学习）彰显其魅力以来，它也逐渐普及。这正为全局思考机器学习的实现提供了契机，得从实用角度兼算法角度优化机器学习。</p><p>在2004年，微软研究院（MSR）和微软网页搜索组决定一探究竟，我们能否合力改善网页搜索结果的相关性。当时使用的系统叫做The Flying Dutchman(飞翔的荷兰人)。几个月后我们设计出的系统不仅改善了结果的相关性，相比于Flying Dutchman花费好几天，产生一系列网页搜索结果排序模型的聚合体，名为<a href="http://research.microsoft.com/en-us/um/people/cburges/papers/ICML_ranking.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">RankNet</a>的简易神经网络排序器仅需在一台机器上跑一个小时，产生的排序模型便表现得十分出色。</p><p>在未来几年内，一个关于科学，研究，算法设计和产品设计交织的迷人故事一览无遗，在这第一篇博文中，我想让你身临其境般感受它们之间的相互影响，在下一篇博文中，假设大家对机器学习是零基础的，我将向大家解释现行基本算法是如何运作的。我们已经接触到了开发过程中的一个重要环节：高速实验的能力。如果你有好主意，并且你想得到实验证明，无论如何，请立即行动。所以即使初始模型执行得并没有现行模型那样良好，或是在训练和测试过程中运作得足够快，机器学习也能使得进展更快，这终将在精度和速度方面迅速超过现行模型。</p><p>现在，有种叫做<a href="http://en.wikipedia.org/wiki/Gradient_boosted_decision_tree#Gradient_tree_boosting?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">提升决策树</a>(BDTs)的系列模型正日益流行，BDTs能灵活处理多种预测性任务，比如：</p><ul><li><p>排序。如在列表顶端放置最相关的网页搜索结果。</p></li><li><p>分类。如判定某一邮件是否为垃圾邮件。</p></li><li><p>回归。如预测你的房子能卖个什么价钱。</p></li></ul><p>BDTs是如此的灵活多变，又十分有用，不是嘛？微软展示的过去几年间机器学习服务的内部日志显示，有超过670,000的训练流量使用着微软开发的BDTs。因特定的实验者往往只会运行精选后的模型（即训练众多模型，每个配置不同参数设置，并用某一特定数据集筛选出最优模型），这个数据是被夸大了的，但至少也描绘出了概貌。这是否意味着当前火热的BDTs是微软的发展趋势么？或者其他地方的人们也喜欢它？早在2010年，雅虎组织了一场<a href="http://jmlr.org/proceedings/papers/v14/chapelle11a/chapelle11a.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">排序算法学习挑战赛</a>，以揭示谁拥有最强网页搜索排序算法。超过1000支队伍注册了此次挑战赛。令人欣慰的是<a href="http://research.microsoft.com/en-us/um/people/cburges/papers/YahooChallenge.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软小组赢得了这场比赛</a>，排序结果十分仿真。对我而言意料之外的是，前五名的系统都使用了全套决策树，并进行了优化（实际上我们的系统是基于全套BDTs和神经网络）。所以如果你正打算训练固定模型来完成预测性任务，可将BDTs纳入考虑范围。</p><p>让我们以网页搜索排序作为范例研讨一个经典的搜索/产品周期。搜索中最难的是提出正确的问题，然后合理验证想法（除了历史悠久的出版物之外，某些验证测试也是充满了干扰因素）。从这些挑战中得到的帮助也将致力于对万千人类至关重要的问题的研究，</p><p>当你在<a href="http://www.bing.com/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">必应</a>上发出查询请求，我们将高效扫描索引中的所有文件。通过使用一些高速筛选器，可剔除大量候选文件（比如我们不会考虑并无查询词的文件）。削减部分候选文件集达到可控容量。针对每个候选文件我们生成几千个显明此文件与你查询关联程度的特征。比如有个特征可能是“文件标题是否包含了你的查询词？”或者更高级别的“文件是否涉及了查询中提到的实体？”。排序模型的任务是将一系列特征和图示量化成一项文件与查询关联度的编码数值。加之最初的筛选步骤，我们得以按其与查询的关联度，对网页上所有内容进行排序。我们过去常用一项名为<a href="http://en.wikipedia.org/wiki/Normalized_discounted_cumulative_gain#Normalized_DCG" target="_blank" rel="noopener">NDCG</a>的度量来量化搜索结果的质量（现在我们用几种指标测量用户的满意程度）。整个排序结果列表决定了NDCG在0到1之间的值，1表示对特定标记数据集（即D）满足可达最佳排序。</p><p>而RankNet对BDTs有何贡献呢？RankNet虽然是现阶段的重大突破，但并未达到终极目的，尤其是它忽视了NDCG度量值，仅试图修正文件关联顺序。RankNet会针对给定的查询，从数据集中寻找已标记最优匹配文件，和稍次的匹配文件，当然也会尽力次中择优（要补充的是，这些并不是我们实际使用的标记！）。创造一个NDCG优化模型的瓶颈在于NDCG精确度上运转不良；若你想让（排序模型所指定的）每个文件都有度量值，使排序结果仅需基于度量值，NDCG会将离散的度量值转换为连续的度量值。为解决这个问题，在训练神经网络时仅需提供函数梯度（量化神经网络输出评分的函数会如何变化）而非优化的真实函数值。排序任务中，你可以视这些数值为小箭头或者力，驱动着每个文件在排序列表中浮沉。我们可将这些文件对之间的力，模型化为NDCG中（对数据集内）两文件的交换，然后在给定查询中累加所有文件的力，视所得为函数梯度来训练神经网络。这便诞生了<a href="http://research.microsoft.com/en-us/um/people/cburges/papers/YahooChallenge.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Lambda排序法</a>，虽派生于神经网络模型，但在关联性性能方面和RankNer比更是青出于蓝。稍后我们将这个想法贯彻到提升决策树模型中名为<a href="http://research.microsoft.com/en-us/um/people/cburges/papers/lambdaMART.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">LambdaMART</a>的算法中，而BDTs凌越于神经网络对此产生的影响有以下两点：</p><ul><li><p>更自然地处理差异巨大的不同特征的能力。</p></li><li><p>训练更快速，并实验结果返回更迅速。</p></li></ul><p>随后由<a href="http://research.microsoft.com/en-us/um/people/oferd/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Ofer Dekel</a>带领的小组展示了如何构建BDTs，它能以比神经网络快约两个数量级的速度训练数据，也能处理更大的数据集。</p><p>简而言之，这便是我们对BDTs一见倾心的原因。整个流程就是，工程周期和产品需求驱动着研究，研究为产品创造新的契机。对于其中三分之二的步骤（RankNet和BDTs），其主要为实验的高速和大容量数据做出了贡献。值得一提的是，与其走进小而精的排序算法，虽然我们正聚焦于它的历史，不如了解必应中所运用到工程和特性。在下篇博文中，我将带你一览BDTs是如何工作的。</p><p>Chris Burges</p><p><a href="http://research.microsoft.com/en-us/people/cburges/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">了解更多</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Recommendations Everywhere</title>
    <link href="http://www.shong.win/2015/02/23/yeeyan/yeeyan-Recommendations-Everywhere/"/>
    <id>http://www.shong.win/2015/02/23/yeeyan/yeeyan-Recommendations-Everywhere/</id>
    <published>2015-02-23T06:13:29.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文中作者是微软首席研究员<a href="http://social.technet.microsoft.com/Profile/Thore%20Graepel?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Thore Graepel</a></em></p><p>优秀的推荐需求渐广，无论你是在寻找一部可能会喜欢的电影或者是书籍，甚至寻找Facebook或者LinkedkIn上与你志同道合的推荐人物，而自动推荐系统便是一种解决方案。</p><p>然而这样的系统已优先应用于互联网巨头中，我们将随待发布的<a href="http://azure.microsoft.com/en-us/campaigns/machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软Azure机器学习</a>推出一款受众更广，增加顾客收益，面向个人和企业的推荐系统。</p><p><strong>推荐系统是如何运作的？</strong></p><p>在一个推荐系统（RS）中，通常由两种实体构成，我们称之为用户和项目，用户便是你要进行推荐的对象，项目就是想推荐给他们的东西，诸如电影，书籍，网页，菜谱甚至其他人物。</p><p>假如我们要进行推荐，比如向某一特定用户推荐身边某一基于五星制的餐馆，其星级是由其它用户打出的。我们将这项推荐任务分为两步：</p><ol><li>预测每家餐馆用户将给出的评分，可使用五星制的评分。</li></ol><ol start="2"><li>从一系列合适的餐馆中，预测这名用户将会给出最高评分的餐馆。</li></ol><p>但我们是如何预测用户对他实际上并未评价过的餐馆的得分呢？这便是机器学习（ML）的用武之地。</p><p><strong>如何预测评分？</strong></p><p>为了建立一个在特定用户/项目的组合中，预测用户评分的机器学习模型，我们需要收集信息表格，涵盖用户账户，项目账户和评分，你可以视之为一个大型矩阵，用户为行，项目为列，评分即是元素。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/UsersItems.jpg" alt=""></p><p>这将是一个存在许多缺失元素的稀疏矩阵，因为用户往往仅评价一小部分项目。Azure机器学习中实现的贝叶斯推荐系统采取这些训练数据，优化模型，最终得到一个能对特定用户/项目对进行预测评分的函数，这些评分并不局限于五星制。其他指标诸如购买量，点击量或者浏览时长，在没有更多信息来提供好的推荐时，也将被等效处理。</p><p>所以这样会奏效么？推荐系统学着将用户和项目嵌入到我们所谓的潜在特质空间中（见下图），一个用户（蓝点）给了一个项目（红点）好评，则其向量与项目的向量同向；若是差评，则与项目的向量反向。相似的用户和相似的项目将会在特质空间近距离放置，这使得推测训练数据中未评价的用户和项目的组合成为可能。下图所示为一个仅供阐释的二维特质空间，其实在我们部署的系统中使用了20到100维的空间。甚至有时我们在特质空间内找到可解释的坐标轴（即“特征”），比如下图，南-北特征便是“成人”和“儿童”，东-西特征便是“主流”和“小众”。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/Trait%20Space.jpg" alt=""></p><p><strong>如何应对新用户或者新项目？</strong></p><p>推荐系统的一个关键问题便是冷启动。新用户群还未做出足够的评价行为，而新的项目还未受到足够人数的评价而无法做出好的预测。为了缓和这个矛盾，Azure机器学习推荐系统不仅显示用户和项目的账户，而且从元数据中构建特征向量。对于用户，可包含诸如年龄，地理位置等大概信息，对于项目，如电影，可包含如类型，演员，导演，拍摄年代等信息。这使得系统能利用元数据中的公共属性对用户和项目进行泛化。</p><p><strong>了解更多</strong></p><p>如果你对推荐系统的数学基础感兴趣，请查阅这篇论文：<a href="http://article.yeeyan.com/edit/" target="_blank" rel="noopener">Matchbox: Large Scale Bayesian Recommendations.</a>)</p><p>如果你急于创建属于你自己的推荐系统渠道，一旦Azure机器学习开放使用（很快了），你便可尝试着从它开始。如下图所示，Azure机器学习工作室开辟了一个推荐系统模块，和基于浏览器且仅用拖拽操作，十分强大的图形用户界面，这使得你的任务能相对轻松一点。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/Azure%20ML%20Studio.jpg" alt=""></p><p>事实上，Azure机器学习推荐系统包含两个强有力的预测评分范例：基于内容过滤和<a href="http://article.yeeyan.com/edit/" target="_blank" rel="noopener">协同过滤</a>)，我们希望它能有更广泛的自动推荐系统用途，能应用到使顾客全方位受益的场景中，而致力于它的大范围推广。</p><p>Thore<br>Graepel</p><p>了解我更深入的<a href="http://research.microsoft.com/en-us/people/thoreg/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">研究</a>. 请关注我的<a href="https://twitter.com/ThoreG?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Twitter</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Machine Learning, meet Computer Vision - Part 2</title>
    <link href="http://www.shong.win/2015/02/08/yeeyan/yeeyan-Machine-Learning-meet-Computer-Vision-2/"/>
    <id>http://www.shong.win/2015/02/08/yeeyan/yeeyan-Machine-Learning-meet-Computer-Vision-2/</id>
    <published>2015-02-08T14:42:17.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本文由微软剑桥研究院的<a href="http://social.technet.microsoft.com/Profile/Jamie%20Shotton?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Jamie Shotton</a>,&nbsp;<a href="http://social.technet.microsoft.com/Profile/Antonio%20Criminisi%20-%20MSR?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Antonio Criminisi</a>和<a href="http://social.technet.microsoft.com/Profile/Sebastian%20Nowozin?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Sebastian Nowozin</a>联合撰写。</em></p><p>在<a href="http://blogs.technet.com/b/machinelearning/archive/2014/08/06/machine-learning-meet-computer-vision.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">上一篇博文</a>中，我们引领大家进入了计算机视觉这片领域，并提及到一种强有力的解决方案，利用决策森林实现逐像素分类，该技术已在<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=135567&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">医学显像</a>和<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=145347&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Kinect</a>中得到广泛应用。接下来我们将聚焦于近来火热的深度神经网络和其在计算机视觉领域中的应用，其次展望计算机视觉和机器学习之后的下一个发展方向。</p><p><strong>深度神经网络</strong></p><p>近几年来我们在训练数据集的保质保量上和视觉搜索器上取得了同样巨大的进展。这主要源于从<a href="http://en.wikipedia.org/wiki/Crowdsourcing?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">众包法</a>中乍现的灵感，才将数据集扩展至涵盖千上万张标记图像。其中难度十足的<a href="http://www.image-net.org/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">ImageNet</a>数据集包含了按图片划分的数百万种标记图像。</p><p>经历了ImageNet数据集社区几年缓慢的发展后，<a href="http://www.cs.toronto.edu/~hinton/absps/imagenet.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Krizhevsky等人</a>终于在2012年扣响了通往成功的大门，在某种深层次训练<a href="http://en.wikipedia.org/wiki/Convolutional_neural_network?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">卷积神经网络</a>的精妙算法辅助下，他们向大家展示了<a href="http://en.wikipedia.org/wiki/GPGPU?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">通用GPU计算</a>。在1000种ImageNet图片数据集测试下，其显著地提高了图像分类的精确度。这引发了主流媒体的密集报道甚至导致些许初创公司被大公司收购。自此“深度学习”在计算机视觉的话题中如日中天，一些新近的论文还将其沿用到<a href="http://arxiv.org/abs/1311.2524?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">目标定位</a>，<a href="http://www.cs.toronto.edu/~ranzato/publications/taigman_cvpr14.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">人脸识别</a>和<a href="http://arxiv.org/abs/1312.4659?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">人体姿态估计</a>的研究中。</p><p><strong>未来展望</strong></p><p>卷积神经网络是如此简明有效，那这就是计算机视觉研究的终结么？目前我们能确认的是在接下来几年，它将持续流行并不断推动行业的技术水平，然而我们仍然坚信我们还会有其他方面的技术飞跃，在此以强调我们可实现的技术契机作结。</p><p>表达：这些网络学着去揣测图片内容的一系列简单表达法，不再关注图片中独立对象的细节，而是全局之间的联系，或者我们日常中的某一特定对象（比如我们不再仅凭一人光滑的头发和拿着吹风机这个事实，而自以为是地认为他的头发是湿的）。应对“非具象化”的图片，即图中存在很多并不突出的对象，像<a href="http://mscoco.org/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软CoCo</a>一样的新数据集将提供更细化标记的独立对象划分。</p><p>效率：利用并行化，深度网络对测试图片的估算可以发挥得淋漓尽致，但是神经系统网络并没有<a href="http://blogs.technet.com/b/machinelearning/archive/2014/08/06/machine-learning-meet-computer-vision.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">前文</a>中提到的条件计算法的概念：每张测试图片得遍历网中每个节点并得到输出。此外，即使有着强劲的图形处理器(GPUs)，训练一个网络也得花费数天乃至数周的时间，这成为了实验高效性的瓶颈。</p><p>结构化学习：当下的卷积深度网络经过多年研究，已演变成一个设计精良的刚性结构，换句话说，特定层次的大小或层次的数目将对预测结构的质量产生不良影响。除了穷举参数来优化网络结构，我们希望有个契机以习得一种直接基于数据的弹性网络结构。</p><p>近来，我们正逐步解决上述两个问题，尤其是最后两个。我们感到热血的是近期就<a href="http://research.microsoft.com/pubs/205439/DecisionJunglesNIPS2013.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">决策丛林</a>的工作：集成根决策的<a href="http://en.wikipedia.org/wiki/Directed_acyclic_graph?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">有向无环图</a>(DAGs)。你可以认为一个决策有向无环图就是一颗<a href="http://blogs.technet.com/b/machinelearning/archive/2014/08/06/machine-learning-meet-computer-vision.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">决策树</a>，其孩子节点因归并而可有多重父母。相较于决策树，我们<a href="http://research.microsoft.com/pubs/205439/DecisionJunglesNIPS2013.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">发现</a>这些能有效的减少内存消耗而利于泛化。一个有向无环图虽与神经网络的结构相类似，但有着以下两点关键性区别：首先，结构和模型参数可后期习得；其次，有向无环图保留了决策树的优点，具有高效的条件计算法：每一个独立测试样例遵循有向无环图中的单一路径，而神经网络会遍历所有节点。我们正积极研究，将决策丛林和其他形式的深度学习结合，包括<a href="http://pages.ucsd.edu/~ztu/publication/pami_autocontext.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">堆叠</a>和<a href="http://research.microsoft.com/pubs/146430/Criminisi_IPMI_2011c.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">纠缠</a>，可给深度神经网络提供一个高效的解决方案。</p><p>若你意图使用决策丛林解决你的疑难杂症，Azure机器学习中的Gemini模块可助你一臂之力。</p><p>总的来说，计算机视觉前程似锦，而机器学习功不可没。在这一片领域的进展令人瞩目，但我们仍相信关于计算机视觉的研究仍任重而道远。</p><p>Jamie, Antonio 和 Sebastian</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Machine Learning, meet Computer Vision - Part 1</title>
    <link href="http://www.shong.win/2015/02/06/yeeyan/yeeyan-Machine-Learning-meet-Computer-Vision-1/"/>
    <id>http://www.shong.win/2015/02/06/yeeyan/yeeyan-Machine-Learning-meet-Computer-Vision-1/</id>
    <published>2015-02-06T15:33:01.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p><em>本系列文章分为上下两篇，由微软剑桥研究院的<a href="http://social.technet.microsoft.com/Profile/Jamie%20Shotton?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Jamie Shotton</a>, <a href="http://social.technet.microsoft.com/Profile/Antonio%20Criminisi%20-%20MSR?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Antonio Criminisi</a>和<a href="http://social.technet.microsoft.com/Profile/Sebastian%20Nowozin?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Sebastian Nowozin</a>联合撰写。其下篇将稍后发布。</em></p><p>计算机视觉是一门涉及图像自动识别算法领域的研究，起源于20世纪60年代的人工智能和认知神经科学。“解决“机器视觉问题是1996年麻省理工学院的一项著名暑期项目，但人们迅速认识到这点时间显得十分仓促。之后的50年间通用图像识别技术仍显得高深莫测，但这片领域却在蓬勃发展。在视觉算法取得突破之后终于迎来了它广阔的天地，包括<a href="http://research.microsoft.com/pubs/67890/siggraph04-grabcut.pdf?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">交互式图像划分</a>（在<a href="http://office.microsoft.com/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软Office办公套件</a>中可实现“<a href="http://blogs.technet.com/b/office2010/archive/2009/10/19/the-magic-of-background-removal.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">移除背景</a>”功能，搜索图片，人脸识别与校准和Kinect中人体运动捕获等功能，这些在商业上日益受欢迎。这便是过去15至20年间从机器学习（ML）中快速汲取所获得的主要进展。</p><p>本系列的第一篇文章将探索计算机视觉所面临的挑战和利用决策森林这种机器学习技术处理逐像素分类的初体验。</p><p><strong>图像分类</strong></p><p>试着来回答这个图像分类问题：“图片中是否有着一辆车？”对于计算机来说，一张图片仅意味红绿蓝三原色像素网格，每个颜色渠道由0到255的像素值描述。这些数值不仅随实体是否存在而快速改变，还受相机视角，光线条件，背景和对象姿态影响。此外还得处理花样繁多的汽车类型，例如旅行车，卡车或者跑车，每款都会产生不同的像素网格。</p><p>幸运的是监督式机器学习提供了取代手动编码穷举的方案，即采集图片训练数据集并为每张图手动贴上合适的标签，利用我们最爱的机器学习算法提取出与我们识别任务相关的像素模型和干扰因素。我们尝试着领悟干扰因素的不变形，以将模型推广应用到新的、过去无法识别的对象中。我们已在视觉学习新算法的开发以及数据的采集和标记中取得了长足的进步。</p><p><strong>逐像素分类的决策森林</strong></p><p>图像包含着许多层次上的细节，正如先前所言，我们提出图片中是否有着某一特定对象的问题。但我们却解决了“语义图像划分”这一难题：描述场景中的所有对象。下面便是一个街道场景划分的样例：</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/MLB%20post%2011%20-%20Image%201.JPG" alt=""></p><p>如图你可以想象这些技术如何帮你有选择性的编辑图片，甚至<a href="http://mi.eng.cam.ac.uk/research/projects/Query/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">人工合成一张全新的图片</a>；接下来我们会领略它的更多应用。</p><p>解决语义划分有着许多途径，但其中最强有力的构造方法还属逐像素分类：训练分类器去预测一种事物的像素级分布。这项任务对机器学习来说存在些许计算难题，特别是一张图包含了海量的像素（比如<a href="http://www.nokia.com/global/products/phone/lumia1020/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">诺基亚Lumia 1020手机</a>每张图可采集4100万像素）。这意味着我们在做训练和测试样本实验时得花全图域分类项目的上百万倍时间。</p><p>如此险峻的麻烦致使我们研发某一特效的分类模型，即<a href="http://research.microsoft.com/en-us/projects/decisionforests/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">决策森林</a>(也称作随机森林或随机决策森林)。决策森林其实的一系列分别受训练的决策树集合：</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/MLB%20post%2011%20-%20Image%202.JPG" alt=""></p><p>每棵树都有一个根节点，很多内部“分裂”节点，和很多终端“叶”节点。测试阶段分类从跟节点开始，对某些数据进行二元”分裂函数”计算，这简单得就像“这枚像素是否比其邻像素格更红？”这样的问题。它会被划分到左子树还是右子树，完全取决于它的二元决策法，然后遍历到下一分裂函数，如此循环。当到达叶节点，预测结果便会储存起来，通常分类标记也会随着一起输出。（也请参见Chris Burges近期有关优化搜索排序的进阶决策树优质<a href="http://blogs.technet.com/b/machinelearning/archive/2014/07/11/machine-learning-for-industry-a-case-study.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">博文</a>。）</p><p>决策树之美来源于其测试阶段的高效：当从根节点到叶节点的路径数呈指数爆炸，每一个测试像素点却有且仅有一条路径通过。此外，分裂函数的计算法也是基于其之前遍历的数据，即分类器更希望依照先前判断提出合适的问题。这跟我们通常玩的“二十问”是一个道理：当你只能问一定数目的问题时，你会基于前一问题的答案反复琢磨下一个问题。</p><p>有了这种技术，我们便能在应对<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=117887&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">图像语义划分</a>，<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=117889&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">街景划分</a>，<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=135567&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">基于医学三维扫描的人体解剖</a>，<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=184826&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">镜头重定位</a>和Kinect的深度图像中<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=145347&amp;WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">人体部位划分</a>等难题时得心应手。拿Kinect来说，决策树在测试阶段的效率是至关重要的：我们那极其紧张的计算预算，我们可利于与Xbox上图形处理器(GPU)逐像素并行计算的能力适配的条件计算法来调整[1]。</p><p>在本系列第二篇文章当中，我们将讨论最近火热的“深度学习”技术在图像分类中的使用，并展望它今后的未来。与此同时，如果你想学习基于云端的机器学习技术，欢迎参观<a href="http://azure.microsoft.com/en-us/documentation/services/machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软机器学习中心</a>。</p><p>感谢浏览。</p><p>Jamie, Antonio 和 Sebastian</p><blockquote><p>[1]人体部位划分仅是天才工程师<a href="http://www.microsoft.com/about/technicalrecognition/Kinect-Skeletal-Tracking.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">团队</a>在Xbox全身骨骼追踪法的冰山一角。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:Machine Learning and Text Analytics</title>
    <link href="http://www.shong.win/2015/02/05/yeeyan/yeeyan-Machine-Learning-and-Text-Analytics/"/>
    <id>http://www.shong.win/2015/02/05/yeeyan/yeeyan-Machine-Learning-and-Text-Analytics/</id>
    <published>2015-02-05T13:50:22.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><h2 id="【机器学习】机器学习和文本分析"><a href="#【机器学习】机器学习和文本分析" class="headerlink" title="【机器学习】机器学习和文本分析"></a>【机器学习】机器学习和文本分析</h2><p>本文由微软研究院杰出科学家<a href="http://social.technet.microsoft.com/profile/ashok%20chandra/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Ashok Chandra博士</a>和微软研究院项目经理<a href="http://social.technet.microsoft.com/profile/Dhyanesh_Narayanan?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">Dhyanesh Narayanan</a>联合撰写。</p><p>1970年代时，我（Ashok）正是斯坦福人工智能实验室的一名学生，四处都洋溢着对达到人脑级别的人工智能的乐观的气氛，如今这样的气氛仍一直延续着，而与此同时，采用机器学习（ML）技术，计算机逐渐变得便携。如此种种，使致微软出品的各色新产品都一定程度上使用了机器学习技术，强化对语音、数据或文本等的分析，在这篇文章中我们着力于文本分析。</p><p>随着计算机日渐了解自然语言，新的前沿科技正在遍地开花，如改善应用的用户交互界面；优化搜索引擎；如微软小娜(Cortana)和Siri一样的个人虚拟助手；以及对给定文件涵盖内容探测的工具。例如，一个新的网页若被设计得用算法将提及到的人物链接至如维基百科等合适的数据库，这将改善用户的浏览体验，使得读者能够轻易的获取人物的相关信息。此外，通过来自文本的额外信息，还可以像图1一样定义文中提及的对应实体（如运动员，球队）。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/6443.Text%20Analytics%20Scenario.jpg" alt=""><br><em>图1:促发文本分析的可能情景</em></p><p>文本分析是当下科学研究的热门领域，并将持续活跃下去。但是创造一种具备人类所有知识（以文字作描述）的语义学模型并不是件轻松的任务。早期的工作可追溯到上个世纪90年代时，包括Brill的标记器[1]，其能对语句进行断句并给后续工作以提示。微软研究院一直致力于这片研究领域中的创新，但我们得将新科技与实用因素适配，创造能量产的工艺，以走得更远。</p><p>在这篇博文中，我们仅是对当下机器学习技术如何应用于文本分析的管窥蠡测，在此我们会引用命名识别技术(NER)。作为一个提供机器学习功能的平台，<a href="http://azure.microsoft.com/en-us/trial/get-started-machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">微软Asure机器学习</a>也涵盖了文本分析等通用功能，并对NER功能的支持进行了优化，以便我们能从通用概念转化到具体设计决策。</p><p>NER的任务是明确文本中提及的人物，地点，组织，运动员球队等等，让我们通过图2浏览一下如何通过”监督学习”方法解决上述问题。</p><p><img src="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/02/52/NER%20workflows.jpg" alt=""><br><em>图2:命名识别技术工作流</em></p><p>在<strong>设计阶段</strong>或者说”学习阶段”，系统通过训练数据来创造要进行机器学习的使用模型。其主旨是系统对片段样本进行泛化以处理新增的任意文本。</p><p>这些训练数据由人工标记的学习目标实体组成，这样看起来就像：“ 当&lt;运动员&gt;Chris bosh &lt; /运动员&gt; 上场，&lt;球队&gt;迈阿密热火 &lt; /球队&gt;便使人狂热起来。”实验的预期结果是从这自然语言样本中习得的模型，能够训练到识别新输入语句中的运动员实体和球队实体。</p><p>设计阶段工作流的效率往往由特征提取模块决定，越是煞费苦心的工程特征将产生更为有力的模型。例如，一段文本中的一个单词对上下文产生关联[比如，前一个k开头的字母便与下一个k开头的字母产生关联]是一个强有力的文字关联实体特征。举个例子，“在昨日激烈的比赛中，旧金山击败了红雀队。”这句话中，文本中提及的“旧金山”很明显的指代一个运动球队（即旧金山巨人队）而非旧金山这个城市。在本文中大写字母通常也是十分利于辨别以人或地点命名的实体的特征。</p><p>模型的训练_正是机器学习的要义，即产生一个优秀的模型。这通常对选择的特征进行复杂的组合。当下有几种可得的机器学习技术，包括<a href="http://en.wikipedia.org/wiki/Perceptron?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">感知器</a>，<a href="http://en.wikipedia.org/wiki/Conditional_random_field?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">条件随机域</a>等等。这些技术的选择取决于这些模型在有限训练数据下所能达到的精度，处理的速度和同时学到不同实体的数目。例如，Azure机器学习命名识别模型默认支持三种实体，即人物，地点和组织。</p><p><strong>运行阶段</strong>工作流是将输入的未标记文本根据对应设计阶段产生的模型，生产标记实体的文本。正如我们所见，运行阶段工作流复用了设计阶段工作流的特征提取模块。相应的，如果对于应用来说实体识别的高吞吐量是必须的，那么渠道中也得准备相应的轻量高质的特征。举个例子，Azure机器学习命名识别技术模块，利用基于相应上下文中易于计算的模块来实现高效率。对于过程中的歧义，可使用如<a href="http://en.wikipedia.org/wiki/Viterbi_decoder?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">维特比译码法</a>将实体标记分配到输入词序列中。</p><p>你会意识到NER的实现才刚起步是十分重要的，但这仍是从原始文本中不过知识的重要的第一步。近期的<a href="http://blogs.technet.com/b/inside_microsoft_research/archive/2014/07/10/sports-fans-enjoy-power-of-leibniz-entity-recognition.aspx?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">博文</a>将会描述NER配合一系列相关技术来实现必应运动这款应用中的大幅提升。可在Azure机器学习中使用的<a href="http://azure.microsoft.com/en-us/trial/get-started-machine-learning/?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">相关NER代码</a>也可获得。除了NER，常用的自然语言语法解析，连接和特征，情绪分析，实体提取等等，意味着对以内容为核心的应用来说，其另辟蹊径以改善用户体验，这些技术使得你文本的内容跃然纸上。</p><p>我们愿你享受阅读本篇博文，期待你的评论。</p><p>Ashok Chandra.&nbsp;<br><a href="http://research.microsoft.com/en-us/people/achandra?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">在这里</a>&nbsp;关注我的研究。</p><p>Dhyanesh Narayanan.&nbsp;<br><a href="http://research.microsoft.com/en-us/people/dhyann?WT.mc_id=Blog_MachLearn_General_DI" target="_blank" rel="noopener">在这里</a>.关注我的研究。</p><p><strong>参考文献</strong></p><p>[1] Eric Brill, 1992,_ A<br>simple rule-based part of speech tagger_, Applied natural language processing<br>(ANLC ‘92)</p><p>[2] Li Deng, Dong Yu,<br>2014, <a href="http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf" target="_blank" rel="noopener">Deep Learning: Methods and Applications</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:The Joy and Hard Work of Machine Learning</title>
    <link href="http://www.shong.win/2015/02/05/yeeyan/yeeyan-The-Joy-and-Hard-Work-of-Machine-Learning/"/>
    <id>http://www.shong.win/2015/02/05/yeeyan/yeeyan-The-Joy-and-Hard-Work-of-Machine-Learning/</id>
    <published>2015-02-05T07:05:39.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p>本文作者：Joseph Sirosh.</p><p>极少数人会钦佩机器学习在企业应用中的无穷潜力。而我是如此幸运在几个月前的工作中浅尝它的魅力。时值1995年，信用卡发行商正启动神经网络模型来监测实时信用卡欺诈事件，每当人们使用信用卡，它的交易数据将会从零售商系统发送到信用发行商授权系统，同时神经网络会对此次交易进行欺诈概率评分。如果概率评分较高，交易就会被即时取消。我当时是创建此模型的科学家之一，并且我们的第一代模型被一家南美银行采用。当模型部署完毕，银行发现许多早期未检测到的诈骗事件，涉案金额累计高达一百万美元，这简直令人大开眼界。在过去的几年间，我还亲眼目睹机器学习在不同的应用中大放异彩，例如需求预测，故障和异常事件检测，广告目标客户，在线推荐和像微软小娜(Cortana)一样的虚拟助手。通过在企业的系统中嵌入机器学习，从而改善客户体验，降低系统故障风险，增长收益和实现显著节省开支。</p><p>但是，机器学习创建的过程是如此缓慢，耗时并容易出错。即使我们能分析近来巨大的数据并配置最大交易处理率，我们仍存在以下瓶颈：</p><ul><li>机器学习系统的开发需要深入的专业知识。即使其核心原理如今广为人知，但天赋异禀的数据科学家的招募仍像20年前一样难以寻觅。</li><li>从业者不得不使用不同的工具收集、清理、归并和分析数据。这些工具有着较高的学习成本并且尚未形成体系。商业的机器学习软件的部署和维护仍然十分昂贵。</li><li>建立和核实模型需要大量实验。数据科学家经常需要运行大量实验又产生庞大的新数据，却又受制于庞大的计算量和有限的内存存储量。</li><li>软件工具不支持可扩展实验或用于组织实验所运行的方法。实验团队的协作，共享衍生变量和脚本等行为，无法凭借工具，仅能依靠点对点的手动操作。评价和调整数据模型仍是一项巨大的挑战。</li></ul><p>数据科学家针对这些研制定制程序，以显著提升机器学习实验执行时的普遍性能。但在部署阶段显得愈加艰难，在关键商务流程中部署如实时诈骗预防或广告目标定位等任务需要面临如下几项复杂的工程：</p><ul><li>通常，机器学习模型需要离线开发并通过如C++，C#或Java等面向对象编程语言来实现。</li><li>必须监测交易数据传输渠道。必须重构并编译离线数据模型中使用到的数据转换和变量。</li><li>这些重构免不了产生错误，需要确认模型仍如原始设计模型一样运转。</li><li>通过适当的监控，度量和记录，重构这些模型的定制容器。</li><li>先前的部署需要考虑A/B测试框架，并评估并行模型解决方案。部署一个设备控制模型的切换开关，最好不需要重新编译和配置整个应用。</li><li>需要验证制造的候选模型也能如原始设计一样运转，并通过统计测试。</li><li>系统的自动化决策和业务结果得记录下来以便完善和监控机器学习模型。</li><li>服务项目必须设计得高效，应对灾难复原和发挥它极致的作用。</li></ul><p>当服务项目扩张到需要满足高交易处理率和/或低延时，更需要在新的硬件设备和在新机器上部署扩展服务上费心思。</p><p>所有这些都是十分耗时和工程密集的步骤。又十分耗费人力物力财力，端对端的工程和机器学习应用产品的维护需要技术高超的团队但又少有组织能够创建和维持机器学习系统。</p><p>微软的Azure ML （Azure 机器学习）便是针对解决如下问题而设计的：</p><ul><li>它不需要安装软件，不需要管理硬件，甚至不需要费心操作系统版本或者开发环境的可完全托管的云服务。</li><li>仅凭借一个浏览器，数据科学家便能从任何地方登录到Azure并开始开发机器学习模型。Azure的内存几乎可以存储无限数量的文件。</li><li>为机器学习营造一种综合开发环境的机器学习工作室（ML Studio），让你仅用简单的拖拉连接等操作模式，创建如简单数据流图像等实验。数据科学家能使程序避免大量的日常繁琐任务而集中精力于实验设计和版本的迭代。</li><li>Azure机器学习提供了各种各样的模板，使人们更容易上手。</li><li>它内置了由微软开发的一系列演算算法，它支持自定义R语言代码，并且在Azure机器学习上能轻松使用超过350份开源R语言代码包。</li><li>数据流图能自动创建并行运行时的路径，这使得科学家能执行更复杂的计算和摆脱传统计算约束进行并行对比。</li><li>实验能够轻易共享给他人，以便他人能在你离开后继续你的工作。</li></ul><p>Azure机器学习使得在云中创建产品部署变得十分容易，仅用轻轻的点击，提前检测过的机器学习模型就能合并到一个评分系统的工作流中，一个新的云端REST应用接口（REST API）便同时创建。这份应用接口设计得能以低延迟响应任何操作，无需任何重载或移植，这便是远胜于传统数据分析软件的优点。无论是笔记本，网页，移动设备，可穿戴和连接设备，互联网中无论任何地方的数据都能传输到这份新创建的应用接口来得到数据的预测。举个例子，数据科学家能创建一个欺诈监测应用接口，并以交易信息作为输入，以低/中/高风险指标作为输出。如此种种，仅需部署在云上，便能接收到任何开发者设定好的软件服务请求。应用接口有着弹性的后台扩展，以便交易率猛增时，Azure机器学习服务能自动处理负载。实际上数据科学家在云上创建和部署的机器学习应用接口是无限的，并且所有接口不需要依赖任何工程。对于工程和IT来说，通过调用REST API来集成新的机器学习模型变得十分简单，而模型的多重并行测试也变得十分容易，这以低成本显著的改善了敏捷性。Azure提供了扩展和管理产品中的应用接口的机制，包括测量其效率，延迟性和性能。建立一个功能稳定，性能高效，机器学习做支撑的系统来管理产品的部署，对业界意味着更快，更经济，更方便和巨大的商业利益。</p><p>我们相信Azure机器学习改变了游戏规则，它激发了创业公司和传统大公司的无限潜力，使得创业公司享用了以前仅高端企业才能获得的资源。而大企业更能高效高收益地挖掘埋藏在他们大数据下的宝藏。最重要的是，实验和迭代的速度即将促发快速的改革，使得我们身边的云端控制智能设备变得戳手可得。</p><p>我的事业在1995年才刚起步时，需要一个庞大的组织来创建和部署信用卡欺诈监测系统，如今借着Azure机器学习和云的东风，一位聪明的数据科学家只身一人便能完成这同样的壮举。</p><p>Joseph</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>yeeyan:What is Machine Learning</title>
    <link href="http://www.shong.win/2015/02/04/yeeyan/yeeyan-what-is-machine-learning/"/>
    <id>http://www.shong.win/2015/02/04/yeeyan/yeeyan-what-is-machine-learning/</id>
    <published>2015-02-04T15:13:36.000Z</published>
    <updated>2018-06-17T17:46:30.116Z</updated>
    
    <content type="html"><![CDATA[<p>本文为<a href="http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx" target="_blank" rel="noopener">微软亚洲研究院“机器学习”系列文章译文</a></p><p><a href="http://user.yeeyan.com/articles/yvonshong/translation" target="_blank" rel="noopener">yvonshong译言主页</a></p><p>译者因此受邀参加2015年微软学生夏令营(西安)</p><a id="more"></a><p>本文作者John Platt———一位优秀的微软研究院科学家</p><p>大家好，我是John Platt，在微软从事创造和使用机器学习的相关的算法已17年，机器学习正日益流行，所以人们经常问我：“什么是机器学习？你用它来干什么？”</p><p>我当然欣然于回答这些问题，事实正在验证，机器学习正在微软各个产品系中贯彻使用——这使得微软成为一个有趣并有效的研发机器学习的地方（就像一名小孩走进了一家糖果店）</p><p>总的来说，机器学习将数据集融汇进软件的片段中，形成了模型，模型能够代表数据集并且能普适对新数据的预测。因为机器学习的广泛应用，我觉得我有必要对机器学习的应用作一个粗糙的分类。机器学习有如下三个不同用途：</p><ol><li><strong>数据挖掘</strong>：机器学习能够使人洞察庞大的数据库的特征。</li><li><strong>统计工程</strong>：机器学习通过将数据融汇进软件，来对未知的数据做决策。</li><li><strong>人工智能</strong>：机器学习能够效仿人类的思维，创造能看，能听和能懂的计算机。</li></ol><p>在微软，我们基于以上三种目的来使用机器学习。例如：</p><p><strong>打击恶意软件</strong></p><p>微软恶意软件防护中心与微软研究院通力合作，致力于利用机器学习来创造软件，其能自动检测恶意软件，并帮助分析师洞察恶意软件的开发。想了解更多请参见Dennis Batchelder的博客。</p><p><strong>创建搜索引擎</strong></p><p>微软的必应搜索引擎是个非常复杂的系统，它能够解析你的查询，搜索网络，并返回你所寻找的有用信息。因为必应有着如此高的信息吞吐量，我们必须使用自动化决策来处理不确定的和有歧义的自然语言。我们已研发机器学习来创建必应的许多组件，使其共同构建一个高质量的搜索引擎。其中一个用于搜索的特殊组件是它的排序算法组件，几年前，一支来自微软研究院的队伍通过我们开发的这个算法赢得了a Learning to Rank（排序算法学习）比赛的胜利。</p><p><strong>使计算机能看能听</strong></p><p>微软一直致力于推动计算机视觉和语音识别技术水平的提升，Kinect中能识别你姿势的软件正是由机器学习所研制。微软的语音识别系统基于深度学习模型，这种机器学习模型为受大脑结构的启发而研制。我们也用机器学习来创造了一种实时语音翻译器。<br>看着这些激动人心的应用，我意识到当下是机器学习展现其魅力的时代。众多研发人员长期致力于机器学习的应用。正因为摩尔定律和互联网，我们如今有了足够的标记数据和运算法来使机器学习创造非凡的软件。我期望能共享我们的算法和工具给其他开发者，让他们能利用他们的创意创造出属于他们自己卓越的软件。</p><p>在我的下一篇博文中，我将谈论在过去的20年间，微软的机器是如何演化的。我期待通过这个博客与我们的读者互动的机会！</p><p>John Platt</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为&lt;a href=&quot;http://www.msra.cn/zh-cn/research/machine-learning-group/default.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软亚洲研究院“机器学习”系列文章译文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://user.yeeyan.com/articles/yvonshong/translation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yvonshong译言主页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者因此受邀参加2015年微软学生夏令营(西安)&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://www.shong.win/categories/code/"/>
    
    
      <category term="ML" scheme="http://www.shong.win/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>我所领略的禅与佛光因缘</title>
    <link href="http://www.shong.win/2014/07/30/Foguangshan-in-Taiwan/"/>
    <id>http://www.shong.win/2014/07/30/Foguangshan-in-Taiwan/</id>
    <published>2014-07-30T10:47:26.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>2014年夏天，7月24日，从台湾回来，回想这七天的禅学营生活，已经要把自己归为佛光人了。唯识学里讲种子的起现行和回熏的轮回，佛光山的那颗种子，必定结于今年和南京雨花精舍的相识。那时无神论与怀疑论者的我正对宗教哲学挠有兴趣，同学引荐而与雨花精舍相识，经一系列手续之后，于7月飞往了宝岛台湾。期间那个种子正在酝酿，慢慢生根发芽。<br><a id="more"></a></p><p>7月16日，拉着行李，上了佛光山，参加“2014国际青年生命禅学营”。所见绝非仅有佛光山寺的宏大与庄严，回首山门时“回头是岸”的会心谶语，而是选佛场上法师们的夹道欢迎，不同肤色不同地区的人们的面孔和室友温馨的结缘。</p><p>妙光法师的高超翻译能力，小威老师相见欢时的互动，令禅学营更添生色，大家开始融入小组，融入这个集体，融入佛光山。而后教授我们佛门礼仪，开始体验佛门生活，享清规戒律，静心思禅。也有在佛陀纪念馆的大觉堂内感受梵呗和佛光青年歌咏，那时我便震撼于佛光青年为信仰而以歌弘法重新组建人间音缘歌唱团。</p><p>其实，我上山感受最深的是星云大师的“包容”，他包容五大洲不同肤色不同地区的人们，甚至不会介意来自新西兰的慧峰法师外国人身份而予其当代理住持；他包容禅学营的参与者我们可以怀有不同的信仰或是无信仰来礼拜这佛光山的诸佛，甚至他包容我们去质疑佛、去质疑佛教而多次给我们开示。他包容人们信仰的差异而立佛光山却以教育先行。禅学营的开创初衷，是为了个世界各地的青年一个交流的机会，给大家感受台湾文化的机会，也给大家一个正确的系统性的认识佛教的机会。而参与者多为在校大学生或研究生，是因为有一定文化基础的我们，能从更深层次的、更多元化的角度去看待去思考佛教，去感受佛陀所讲的生命的意义和与人相处的原则。而绝非像中国广大无知如祥林嫂一般的人为求消罪孽而功利化的去拜佛。</p><blockquote><p>世尊于灵山会上，拈花示众。是时众皆默然，唯迦叶尊者破颜微笑。世尊曰：“吾有正法眼藏，涅槃妙心，实相无相，微妙法门，不立文字，教外别传，付嘱摩诃迦叶。”</p></blockquote><p>后经西天二十八祖，传至菩提达摩，是亦为禅宗初祖。根据分组课程里“唯识学”妙南法师所讲在人间的六根本烦恼—“贪嗔痴慢疑不正见”，而“禅”，便是教会我们如何在世间面对这六根本烦恼，它是一种心境，在每早的山水禅中，在三餐前的诵经合掌中，在佛陀纪念馆门口的献灯祈福中，那便是一种至为详和、宁静安闲的心境，因外境本空，唯心自闹，唯有此般宁静无所他求，才能无欲无贪、无拘无束、熄灭生死、超脱轮回——这是出世的禅。而佛光山开山宗长星云大师所弘扬的人间佛教，讲佛陀出生在人间，修道、成佛、说法度众都在人间，是想我们人人行三好，世界更美好（做好事，说好坏，存好心）——是入世的哲学，以得四给五和的理想社会。我想，不才的我应该能回答小威老师在“相见欢”时提出的“什么是禅”的问题了。</p><p>道教讲有与无，基督教讲罪与罚，佛教讲因与果。大概我与佛光山因缘的回熏不止于回念而写下这感想，而且讲禅学营的信息传播给周边的朋友，虽没有慧根未信佛，但至少我知道佛光山所传承的积极入世，三好四给的言行标准是值得遵照的，如同在台湾环岛参学时所领略到的台湾人民的淳朴与热情，他们因有信仰、良好的教育和环境的熏陶，造就了在台湾人潮涌动的捷运站仍有序排队候车，在三米宽的小路口仍停下来等待红绿灯，在西门町的闹市路边无垃圾桶地面却毫无垃圾。我们佛光青年至少要把这些文明这些律己的准则带回来，不仅独善其身求得内心的禅静，更是兼济天下用自己的知行合一去感染身边的人，人人行三好，世界更美好。</p><p>不虚回本山此行。</p><p>2014国际青年生命禅学营Life and Chan</p><p>南京雨花精舍</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2014年夏天，7月24日，从台湾回来，回想这七天的禅学营生活，已经要把自己归为佛光人了。唯识学里讲种子的起现行和回熏的轮回，佛光山的那颗种子，必定结于今年和南京雨花精舍的相识。那时无神论与怀疑论者的我正对宗教哲学挠有兴趣，同学引荐而与雨花精舍相识，经一系列手续之后，于7月飞往了宝岛台湾。期间那个种子正在酝酿，慢慢生根发芽。&lt;br&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>后高考时代</title>
    <link href="http://www.shong.win/2013/10/13/after-college-entrance-exam/"/>
    <id>http://www.shong.win/2013/10/13/after-college-entrance-exam/</id>
    <published>2013-10-13T05:41:22.000Z</published>
    <updated>2018-06-17T17:46:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>请别忘记你为何出发以及付出的努力</p><a id="more"></a><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>毕业之后 进入大学 经历的很多事情 也见过身边的小伙伴对现况的迷茫 大学究竟要干什么 能做什么 面对学业难度的陡增而畏惧 这四年究竟想成为什么样的人 自己又何尝不是</p><p>高三的时候我们过得多么努力 小心翼翼的在每个课间挣扎着不在题海沉沦 跟人聊高三一天做的事情现在大学一周也做不完 那时一大早起床去教室早读 课间在课桌上打乒乓球 走廊踢毽子楼下打羽毛球 大课间的时候冲去超市买零食回来瓜分 那时还学习打网球 看博弈论 学无机、有机化学 小组的总结本也是学习利器</p><p>如今混在寝室少去图书馆 不是上网就是睡觉 自习时效率低下 刷微博人人 高数几代的课昏昏欲睡 看不清未来的方向 梦想这个关键词一下子变得对我们来说是多余 因为一下子把自己的人生粗鲁地分为活着和死掉两个阶段 </p><p>高三的热血流向了哪里 一下子又回到了听老男孩时的状态 其实究其现在的所以 还是过去三年曾体悟的一句 终点只是个虚晃的借口 到了也不是我们停歇的理由 阔别高三 那些挣扎与那些不甘 都成为我们那时背水一战的支柱 有梦想有目标有激情 多都在这三个月的假期和大学生活中消磨 多归罪于自己本身的惰性与环境的腐化 异化成自己当初瞧不起的人 </p><p>“你只要把高三这款游戏里的东西都忘掉就好了 但请别忘记你为何出发以及付出的努力”</p><p>唔 得做出改变才行</p><p>在“一个”里看到张皓宸《迷茫先生》里一段</p><p>开始对梦想有了信仰的崇拜，自然也就在追寻它的路上奢求及时的回应。谁都懂得如果自己认真做一件事，就会完成得很好这个道理，但很多人觉得它始终是个假命题，因为做一件事要服从当下的情绪和环境，再努力奔跑的人也终会有停下来撑住膝盖喘息的时候。不过，休息之后要想再跑起来，就会力不从心，而如果不停顿咬着牙一直跑到终点，你是不会感觉太累的。</p><p>即使现在看不见目标也得奋力去奔跑 像闵老说 不要把顺序搞反了 是坚持了你才看得到命运</p><p>因为看不清和对未来一无所知而感到迷茫和恐惧 于是我们腐化堕落 我们张皇失措如惊起之鹿找不到方向四处奔跑 周围埋伏的狼声何在</p><p>可无奈的是我们只有在有限的视野范围内继续前行 见招拆招 高三给予了我们很多 不光是现在的大学和认识的人 学习习惯和逆境的心态都是一生受益</p><p>坚定了短期目标 大一这一年得超级努力 追求达到高四的状态 （中科大暑假还要补课 这是高五的节奏）去寻找树立长期目标 和lancer说四年想成为什么样的人都付诸笑谈 毕竟意识到人生是何等狗血 又回到高三做周计划的习惯 但惜于花了四周熟悉大学生活节奏 记事本上的记录还是很乱 笔记本没有开始用 零零碎碎的纸张记下课堂所讲 周计划疏漏较多正在改版 大学突发事情太多未吸取高三经验留下缓冲时间来机动 还没有列出大学想读的书单来充实自己的人格</p><p>很多人看不见终点而焦躁地思考人生 结果就是在一次又一次的自我否定中而彻底暂停但每个人都有不同的阶段 会有不同的境遇 想得太多不如简单去做 当你对未来产生疑惑 试着去思考当下的自己可以做的事</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>加了院学生会新闻部和学生团体联合会活动中心 最近开始特别忙 忙开例会院运会校史竞赛采访干事培训的素拓各种策划PPT培训周年庆排节目 觉得应该能学到很多东西 新闻部是因为毕业的语录排版印制的缘故 去学些技术 活动中心是三年组织那么多次活动 这里有更高的平台 受众更广 忙过这一阵子 就可以忙下一阵子了(TAT)</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>6月骑游时给任大戏言 “毕业之后的我们 怎么了”（《Tiny time》）一下子四个月了 经历了更多事情 慢慢看着好友们的改变 分享着彼此的生活</p><p>可细看自己除了远端和你们的开心 现实中的自己碌碌无为在做出绝命的挣扎 终究还是孤单的状态 注意 区分于孤独</p><p>孤独是基于心灵 上学放学都是自己一个人骑车往返 耳边只有嗖嗖的风和自言自语  我们为何出发</p><p>这几个月来前两个月都是忙碌 像晖少说的一样没有时间去想没有时间去悲伤 后来几十天里又在修正着自己的世界观 幸于价值观仍存 还能摸索着方向 向堕落的自己伸手挽救</p><p>人要活得像一支队伍 这个队伍里有搜查有救护有自我 情感上的挫折却被这三年间形成的自愈能力所掩盖 原来自己已经不知不觉有了这样的能力</p><p>父上最近问我班上有恋爱的么 我怎么知道 他说什么差不多大二才谈恋爱 这是在暗示什么么 = = 芳心已许高数 奈何独自一往情深</p><p>明天改版的周计划表可以投入使用了</p><blockquote><p>灵魂拒葬</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;请别忘记你为何出发以及付出的努力&lt;/p&gt;
    
    </summary>
    
      <category term="essay" scheme="http://www.shong.win/categories/essay/"/>
    
    
  </entry>
  
</feed>
